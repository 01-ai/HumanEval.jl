Here's the implementation of the `is_simple_power` function in Julia:

```julia
function is_simple_power(x::Number, n::Number)::Bool
    if x == 1
        return true
    elseif n == 1
        return x == 1
    elseif x < n || n <= 0 || x <= 0
        return false
    end

    power = n
    while power < x
        power *= n
    end

    return power == x
end
```

This function checks if `x` is a simple power of `n` by repeatedly multiplying `n` by itself until it equals or exceeds `x`. If it equals `x`, then `x` is a simple power of `n`, and the function returns `true`. Otherwise, it returns `false`. The function also handles special cases such as `x` being 1 or `n` being 1.