Here is a step-by-step outline of the solution:

1. First, we need to count the number of odd numbers in both lists.
2. Then, we need to check if there are any even numbers in the second list.
3. If there are any even numbers in the second list and the number of odd numbers in the first list is less than or equal to the number of even numbers in the second list, we can exchange elements to make all elements in the first list even.
4. If the above condition is not met, we cannot exchange elements to make all elements in the first list even.

Here is the Julia code that implements the above steps:

```julia
function exchange(lst1::Vector{Int}, lst2::Vector{Int})::String
    # Count the number of odd numbers in lst1
    odd_count_lst1 = count(isodd, lst1)

    # Count the number of even numbers in lst2
    even_count_lst2 = count(iseven, lst2)

    # Check if we can exchange elements to make all elements in lst1 even
    if odd_count_lst1 <= even_count_lst2
        return "YES"
    else
        return "NO"
    end
end
```

This function works by first counting the number of odd numbers in the first list and the number of even numbers in the second list. It then checks if the number of odd numbers in the first list is less than or equal to the number of even numbers in the second list. If it is, it returns "YES", otherwise it returns "NO".
