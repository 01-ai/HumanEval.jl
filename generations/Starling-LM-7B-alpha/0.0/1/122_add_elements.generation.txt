 Here's the Julia function `add_elements` based on the given doc string:

```julia
function add_elements(xs::Vector{Int}, k::Int)::Int
    # Check if the constraints are satisfied
    if length(xs) < 1 || length(xs) > 100 || k < 1 || k > length(xs)
        error("Invalid input. Please ensure that the length of xs is between 1 and 100, and k is between 1 and the length of xs.")
    end

    # Calculate the sum of the first k elements with at most two digits
    sum_two_digits = 0
    for i in 1:k
        if length(string(xs[i])) <= 2
            sum_two_digits += xs[i]
        end
    end

    return sum_two_digits
end
```

This function first checks if the input `xs` is a non-empty array of integers and `k` is an integer between 1 and the length of `xs`. If the constraints are not satisfied, an error is thrown. Then, the function iterates through the first `k` elements of `xs` and adds the elements with at most two digits to the `sum_two_digits` variable. Finally, the function returns the sum of the elements with at most two digits.