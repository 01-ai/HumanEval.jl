Sure, I can help with that. Here's a Julia function that should do what you're asking for:

```julia
function n_digits_in_binary(N::Int)::String
    # Check if the input is within the constraints
    if !(0 <= N <= 10000)
        throw(DomainError(N, "N must be in the range 0 to 10000."))
    end

    # Convert the number to binary and sum the digits
    binary_str = string(base(2, N), base = 2)
    sum_digits = sum([parse(Int, digit) for digit in binary_str])

    # Return the sum as a string
    return string(sum_digits)
end
```

This function first checks if the input number `N` is within the specified range. If it is, it converts `N` to binary and then sums the digits of the binary representation. The sum is then returned as a string.