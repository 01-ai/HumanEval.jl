@testitem "030_get_positive_HumanEvalPlus_v0_1_9_test.jl" tags=[:HumanEvalPlus_v0_1_9] begin
    include(joinpath(ENV["GENERATION_DIR"], "030_get_positive.jl"))
    @test get_positive([0, 1, -1, 2, -2, 3, -3, 4, -4]) == [1, 2, 3, 4]
    @test get_positive([1, -1, 2, -2, 3, -3, 4, -4, 0]) == [1, 2, 3, 4]
    @test get_positive([1, 2, 3, 4]) == [1, 2, 3, 4]
    @test get_positive([0, 0, 0]) == Int64[]
    @test get_positive([-1, -2, -3, -4]) == Int64[]
    @test get_positive([-5, -4, -1, 0, 1, 4, 5]) == [1, 4, 5]
    @test get_positive([7, 8, 10, 11, 12, 15, 17, -1]) == [7, 8, 10, 11, 12, 15, 17]
    @test get_positive([5, 9, -3, -6, 2, 3, 8, 1, 0]) == [5, 9, 2, 3, 8, 1]
    @test get_positive([-2, -4, -6, 0, 2, 4, 6]) == [2, 4, 6]
    @test get_positive([10, -10, 15, -15, 20, -20, 25, -25]) == [10, 15, 20, 25]
    @test get_positive([10, -10, 15, -3, 20, -20, 25, -25]) == [10, 15, 20, 25]
    @test get_positive([-1, -1, -3, -4, -1]) == Int64[]
    @test get_positive([1, 0, 0]) == [1]
    @test get_positive([-2, -1, -1, -3, -4, -1]) == Int64[]
    @test get_positive([-5, -4, -1, 0, 1, 4]) == [1, 4]
    @test get_positive([0, -1, 2, -2, 3, -3, 4, -4, -2]) == [2, 3, 4]
    @test get_positive([-5, -4, -1, 0, 1, 4, 1]) == [1, 4, 1]
    @test get_positive([0, 1, 1, 2, -2, 3, -3, 4, -4]) == [1, 1, 2, 3, 4]
    @test get_positive([10, -10, 15, -3, 20, -20, 25, -25, -20]) == [10, 15, 20, 25]
    @test get_positive([5, 9, -3, -6, 2, 3, 8, 1, 1]) == [5, 9, 2, 3, 8, 1, 1]
    @test get_positive([0, 0]) == Int64[]
    @test get_positive([-5, -4, -1, 1, 4]) == [1, 4]
    @test get_positive([-5, 8, -1, 0, 1, 4]) == [8, 1, 4]
    @test get_positive([1, 2, 4, 4]) == [1, 2, 4, 4]
    @test get_positive([-1, -3, -1]) == Int64[]
    @test get_positive([-5, 0]) == Int64[]
    @test get_positive([7, 8, 11, 12, 15, 17, -1]) == [7, 8, 11, 12, 15, 17]
    @test get_positive([10, 15, -3, 20, -20, 8, -25]) == [10, 15, 20, 8]
    @test get_positive([1, 17, 2, 2, 4, 4]) == [1, 17, 2, 2, 4, 4]
    @test get_positive([-5, -4, -1, 9, 0, 1, -10, 5]) == [9, 1, 5]
    @test get_positive([0, -5, -4, -1, 5, 0, 4, 1]) == [5, 4, 1]
    @test get_positive([-1, -3, -2, -1]) == Int64[]
    @test get_positive([-1, -3, -2, -1, -1]) == Int64[]
    @test get_positive([5, 9, -4, -6, 2, 8, 1, 1]) == [5, 9, 2, 8, 1, 1]
    @test get_positive([-1, -1, -3, -4, -2, -1]) == Int64[]
    @test get_positive([0, -5, -4, -1, 5, 0, 4, 1, 4, 0]) == [5, 4, 1, 4]
    @test get_positive([-2, -1, -1, -3, -4, -1, -1]) == Int64[]
    @test get_positive([-1, 8, -3, -15, -1, -1]) == [8]
    @test get_positive([-2, -1, -1, -3, 10, -1]) == [10]
    @test get_positive([10, -10, 15, -3, 20, -20, 25, -20]) == [10, 15, 20, 25]
    @test get_positive([5, 9, -6, 2, 3, 8, 0]) == [5, 9, 2, 3, 8]
    @test get_positive([-2, -1, -1, -3, -4, -1, -3, -1]) == Int64[]
    @test get_positive([0]) == Int64[]
    @test get_positive([-5, -4, 0, 1, 4]) == [1, 4]
    @test get_positive([-5, 8, -1, 0, 4, -5]) == [8, 4]
    @test get_positive([7, 8, 11, 12, 15, 17, -1, 11]) == [7, 8, 11, 12, 15, 17, 11]
    @test get_positive([-2, -1, -1, -3, 6, 9, -4, -1]) == [6, 9]
    @test get_positive(Union{}[]) == Union{}[]
    @test get_positive([10, -10, 15, -3, 20, -20, 25, -20, -10]) == [10, 15, 20, 25]
    @test get_positive([1, -1, 2, -2, 3, 4, -4, 0]) == [1, 2, 3, 4]
    @test get_positive([10, -10, 3, -3, 20, -20, 25, -20, -10, 3]) == [10, 3, 20, 25, 3]
    @test get_positive([-5, 8, -1, 0, 1, 4, -1]) == [8, 1, 4]
    @test get_positive([-1, -1, -3, -4, -1, -1, -1, -1]) == Int64[]
    @test get_positive([10, -10, 15, -3, 20, -20, 25, -20, -20, 15]) == [10, 15, 20, 25, 15]
    @test get_positive([1, -1, 2, 3, 4, -4, 0]) == [1, 2, 3, 4]
    @test get_positive([1, -1, 2, 3, 4, -4, 0, 4]) == [1, 2, 3, 4, 4]
    @test get_positive([5, 9, -3, -6, 2, 3, 10, 1]) == [5, 9, 2, 3, 10, 1]
    @test get_positive([1, -1, 2, -2, -3, 4, -4, 0]) == [1, 2, 4]
    @test get_positive([-20, -5, -4, -1, 0, 1, 4]) == [1, 4]
    @test get_positive([5, -3, -6, 2, 3, 10, 1, 5]) == [5, 2, 3, 10, 1, 5]
    @test get_positive([10, 15, -3, 20, -20, 8, -25, 20]) == [10, 15, 20, 8, 20]
    @test get_positive([1, -1, 2, -2, -3, 4, -4, 0, 1]) == [1, 2, 4, 1]
    @test get_positive([3, -3, 20, -20, 25, -20, -10, 5, 3]) == [3, 20, 25, 5, 3]
    @test get_positive([10, -10, 15, -3, 20, -20, 25, -20, -5]) == [10, 15, 20, 25]
    @test get_positive([10, -10, 15, -3, 20, -20, 19, 25, -20, -5, 15]) == [10, 15, 20, 19, 25, 15]
    @test get_positive([10, -10, 10, 3, -3, 20, -20, 25, -20, -10, 3]) == [10, 10, 3, 20, 25, 3]
    @test get_positive([-2, -1, -1, -3, -1]) == Int64[]
    @test get_positive([1, -1, 2, -2, -3, 4, -4, 0, 4]) == [1, 2, 4, 4]
    @test get_positive([10, 10, -10, 15, -15, 20, -20, 25, -25, 25]) == [10, 10, 15, 20, 25, 25]
    @test get_positive([-5, 8, 1, -1, 0, 1, 4, -1]) == [8, 1, 1, 4]
    @test get_positive([0, -5, -4, -1, 5, 0, -10, 1]) == [5, 1]
    @test get_positive([-1, -1, -1, -3, -4, -1, -1, -1, -1]) == Int64[]
    @test get_positive([5, 9, -3, -6, 2, 3, 8, 1, -4, 2]) == [5, 9, 2, 3, 8, 1, 2]
    @test get_positive([1, -1, 2, -2, -3, 4, -4, 0, 4, -3]) == [1, 2, 4, 4]
    @test get_positive([-3, 20, -20, 25, -20, -10, 5, 3]) == [20, 25, 5, 3]
    @test get_positive([1, -1, 2, -2, -3, 4, -4, 0, 0]) == [1, 2, 4]
    @test get_positive([9, -2, -1, -1, -3, 6, 9, -4, -1]) == [9, 6, 9]
    @test get_positive([-5, -4, -1, 0, 1, 5, 4, 5, 4]) == [1, 5, 4, 5, 4]
    @test get_positive([-2, -1, -1, -3, -4, -2, -1]) == Int64[]
    @test get_positive([1, -1, 1, -2, 3, -3, 4, -5, -4, 0]) == [1, 1, 3, 4]
    @test get_positive([-2, -1, -1, -3, -4]) == Int64[]
    @test get_positive([-5, -4, -1, 1, 1, 4]) == [1, 1, 4]
    @test get_positive([10, -10, 15, -3, 20, -20, 26, -20, -10]) == [10, 15, 20, 26]
    @test get_positive([1, -1, 2, 4, 4, -4, 0, 4]) == [1, 2, 4, 4, 4]
    @test get_positive([-1, -3, -2, -1, 0, -1]) == Int64[]
    @test get_positive([1, -1, 2, -2, -3, 4, -4, -1, 4]) == [1, 2, 4, 4]
    @test get_positive([0, -5, -4, -1, 5, 0, -10, 1, -10]) == [5, 1]
    @test get_positive([1, -1, 2, -2, -3, 4, -4, 0, 0, 0]) == [1, 2, 4]
    @test get_positive([-5, -4, -1, 0, 1, 6, 1]) == [1, 6, 1]
    @test get_positive([1, -1, 1, 3, -3, 4, -5, -4, 0]) == [1, 1, 3, 4]
    @test get_positive([-4, -4, -1, 0, 1, 5, 6, 1, 1, -1]) == [1, 5, 6, 1, 1]
    @test get_positive([1, -1, 2, -2, -3, 4, -4, 0, -1]) == [1, 2, 4]
    @test get_positive([5, 7, 8, 11, 12, 15, 17, -1]) == [5, 7, 8, 11, 12, 15, 17]
    @test get_positive([-2, -1, -1, -4, -1]) == Int64[]
    @test get_positive([5, 5, 9, -3, -6, 2, 3, 8, 1, 1]) == [5, 5, 9, 2, 3, 8, 1, 1]
    @test get_positive([1, -1, 3, 4, -4, 0, 4]) == [1, 3, 4, 4]
    @test get_positive([-4, -5, -4, -1, 0, 1, 4, 5]) == [1, 4, 5]
    @test get_positive([-1, 8, -3, -15, -1]) == [8]
    @test get_positive([-5, 8, -1, 0, 4]) == [8, 4]
    @test get_positive([5, 9, -3, -6, 2, 3]) == [5, 9, 2, 3]
    @test get_positive([0, -1, -2, -3, -4, -5]) == Int64[]
    @test get_positive([1, 2, -4, -5, 0, 6, 7, -9, 10]) == [1, 2, 6, 7, 10]
    @test get_positive([-1, -2, -3, -4, 5, 0, 6, 7, -9, 10]) == [5, 6, 7, 10]
    @test get_positive([-5, -4, -3, -2, -1]) == Int64[]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 2, 2, 2]) == [1, 1, 1, 1, 1, 2, 2, 2, 2, 2]
    @test get_positive([-1]) == Int64[]
    @test get_positive([0, -1]) == Int64[]
    @test get_positive([0.5, 0.0, -4.0, 2.5, 5.0, -2.2, -8.0, 7.7, 9.9, -10.5]) == [0.5, 2.5, 5.0, 7.7, 9.9]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -0.75, -2.25, -1, -2, -3, -4, -5, -6]) == Union{Float64, Int64}[]
    @test get_positive([5]) == [5]
    @test get_positive([0, -1, -3, -4, -5]) == Int64[]
    @test get_positive([1, 2, -4, -5, 0, 6, 7, 2, -9, 10]) == [1, 2, 6, 7, 2, 10]
    @test get_positive([1, 2, -4, -5, 0, 6, 7, -9, 10, 10]) == [1, 2, 6, 7, 10, 10]
    @test get_positive([0.5, -4.0, 2.5, 5.0, -2.2, -8.0, -7.0, -10.5, 9.9, -10.5]) == [0.5, 2.5, 5.0, 9.9]
    @test get_positive([1, 2, -4, -5, 0, 6, -9, 10, 6]) == [1, 2, 6, 10, 6]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2]) == [1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2]
    @test get_positive([1, 2, -4, -5, 0, 0, 6, 7, -9, 10, 10]) == [1, 2, 6, 7, 10, 10]
    @test get_positive([-1, -2, -3, -4, 6, 0, 6, 7, -9, 10]) == [6, 6, 7, 10]
    @test get_positive([-5, -1]) == Int64[]
    @test get_positive([-1, -7, -1, -1]) == Int64[]
    @test get_positive([1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2]) == [1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2]
    @test get_positive([-1, -2, -3, 5, -5, 6, 7, -9, 10]) == [5, 6, 7, 10]
    @test get_positive([1, 1]) == [1, 1]
    @test get_positive([-1, -2, -5, -3, -4, 6, 0, 6, 7, -9, 10]) == [6, 6, 7, 10]
    @test get_positive([-1, -2, -5, -3, -4, 6, 0, 6, 7, -9, 10, 7]) == [6, 6, 7, 10, 7]
    @test get_positive([-1, -2, -5, -3, 2, -4, 6, 0, 6, 7, -9, 10]) == [2, 6, 6, 7, 10]
    @test get_positive([-2, -3, -4, 6, 0, 6, 7, -9, 10, -3]) == [6, 6, 7, 10]
    @test get_positive([-1, 2, -9, -4, -4, 7, -100, 1, 0]) == [2, 7, 1]
    @test get_positive([-1, -2, -5, -3, -3, -4, 6, 0, 6, 7, -9, 8, 10]) == [6, 6, 7, 8, 10]
    @test get_positive([1, 2, -1, -5, 0, 6, 7, -9, 10]) == [1, 2, 6, 7, 10]
    @test get_positive([0, -9]) == Int64[]
    @test get_positive([-9]) == Int64[]
    @test get_positive([1, 2, 3, -4, -5, 0, 6, 7, -9, 10]) == [1, 2, 3, 6, 7, 10]
    @test get_positive([0.5, -4.0, 2.5, 5.0, -2.2, -8.0, -4.0, -7.0, -10.5, 9.9, -10.5]) == [0.5, 2.5, 5.0, 9.9]
    @test get_positive([6, -5, -4, -3, -2, -1, -5, -1]) == [6]
    @test get_positive([-8, -8]) == Int64[]
    @test get_positive([-2, 10, -4, 6, 0, 6, 7, -9, 10, -3]) == [10, 6, 6, 7, 10]
    @test get_positive([1, 1, 2, -1, -5, 0, 6, 7, -9, 10]) == [1, 1, 2, 6, 7, 10]
    @test get_positive([6, -5, -4, -1, -3, -2, -1, -5, -1]) == [6]
    @test get_positive([-1, -2, -5, -3, -4, 6, 0, 6, 7, -9, 10, 5, -9]) == [6, 6, 7, 10, 5]
    @test get_positive([8, -7, -1, -1]) == [8]
    @test get_positive([-2, -3, -4, 6, 0, 6, 7, -9, 10, -3, -9]) == [6, 6, 7, 10]
    @test get_positive([1, 1, 1, -8, 1, 1, 2, 2, 2, 2, 2, 2]) == [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
    @test get_positive([0, -5, -1, -3, -4, -5]) == Int64[]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -0.75, -2.25, -1, -2, -3, -4, -5, -3, -2.25]) == Union{Float64, Int64}[]
    @test get_positive([1]) == [1]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -0.75, -2.25, -1, -2, -3, -4, -5, -6, 0]) == Union{Float64, Int64}[]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 2, 1, 2]) == [1, 1, 1, 1, 1, 2, 2, 2, 1, 2]
    @test get_positive([-1, -2, -5, -3, -4, 6, 0, 6, 7, -9, 10, 5, 10, -9]) == [6, 6, 7, 10, 5, 10]
    @test get_positive([1, 2, 3, -4, -5, 0, 6, -9, -5, 10]) == [1, 2, 3, 6, 10]
    @test get_positive([-1, -2, -5, -3, -4, 6, 0, 6, 7, -9, 10, 5]) == [6, 6, 7, 10, 5]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2]) == [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2]
    @test get_positive([1, 2, -4, -5, 0, 6, 7, -9, 10, 9]) == [1, 2, 6, 7, 10, 9]
    @test get_positive([-5, -4, -3, 5, -1]) == [5]
    @test get_positive([-9, -9]) == Int64[]
    @test get_positive([0, -1, -3, -4, -5, -4]) == Int64[]
    @test get_positive([1, 2, -4, 1, -5, 0, 0, 6, 7, -9, 10, 10]) == [1, 2, 1, 6, 7, 10, 10]
    @test get_positive([6, -5, -4, 8, -3, -2, -1, -5, -1]) == [6, 8]
    @test get_positive([1, 2, -4, -5, 0, 0, 6, 7, -9, 10, 10, 6]) == [1, 2, 6, 7, 10, 10, 6]
    @test get_positive([-1, -2, -5, -3, -4, 6, -3, 0, 6, 7, -9, 10, 5]) == [6, 6, 7, 10, 5]
    @test get_positive([-1, -2, -3, -4, 5, 0, 6, 7, -9]) == [5, 6, 7]
    @test get_positive([-9, -9, -9]) == Int64[]
    @test get_positive([-1, -2, -4, 5, 0, 5, 7, -9]) == [5, 5, 7]
    @test get_positive([1, 2, -4, -5, 0, 6, -9, 10, -4]) == [1, 2, 6, 10]
    @test get_positive([6, -5, -4, 8, -8, -2, -1, -5, -1]) == [6, 8]
    @test get_positive([1, 2, -4, -5, 0, 7, -9, 10, -4]) == [1, 2, 7, 10]
    @test get_positive([1, 2, -4, -5, 0, 1, 6, 7, -9, 10]) == [1, 2, 1, 6, 7, 10]
    @test get_positive([-2, 10, -4, 6, 0, 6, 7, -9, 10, -3, -4]) == [10, 6, 6, 7, 10]
    @test get_positive([0.5, -4.0, 2.5, 5.0, -2.2, -8.0, -4.0, -7.0, 9.9, -11.18889279027017, -10.5]) == [0.5, 2.5, 5.0, 9.9]
    @test get_positive([-8, -8, -8]) == Int64[]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -0.75, -2.25, -1, -2, -3, -4, -5, -6, 0, 0]) == Union{Float64, Int64}[]
    @test get_positive([-1, 2, -9, -4, -4, 7, -100, 1, 0, 2]) == [2, 7, 1, 2]
    @test get_positive([1, 2, -1, -5, 0, 6, 7, 10]) == [1, 2, 6, 7, 10]
    @test get_positive([1, 0, -1]) == [1]
    @test get_positive([-1, -5, -5, -3, -4, 6, 0, 6, 7, -9, 10, 7]) == [6, 6, 7, 10, 7]
    @test get_positive([1, 1, 2, -1, -5, 11, 6, 7, -9, 10]) == [1, 1, 2, 11, 6, 7, 10]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1]) == [1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1]
    @test get_positive([1, 2, -4, -5, -5, 6, -9, 10, 6]) == [1, 2, 6, 10, 6]
    @test get_positive([1, 2, -4, -5, 0, 1, 2, 6, 7, -9, 10]) == [1, 2, 1, 2, 6, 7, 10]
    @test get_positive([6, -5, -4, 8, -3, 6, -2, -1, -5, -1]) == [6, 8, 6]
    @test get_positive([0.5, -4.0, 2.5, 5.0, -2.2, -8.0, -4.0, -7.0, 9.9, -11.18889279027017, -10.5, 2.5]) == [0.5, 2.5, 5.0, 9.9, 2.5]
    @test get_positive([1, 1, 1]) == [1, 1, 1]
    @test get_positive([1, 2, -2, -5, 0, 6, 7, -9, 10]) == [1, 2, 6, 7, 10]
    @test get_positive([-1, -2, -5, -3, 8, -4, 6, 0, 11, -6, -9, 10, 7, 7]) == [8, 6, 11, 10, 7, 7]
    @test get_positive([1, 2, -4, -5, 0, 1, 2, 6, 7, -9, 10, -5]) == [1, 2, 1, 2, 6, 7, 10]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 2, 2, -8, 2]) == [1, 1, 1, 1, 1, 2, 2, 2, 2, 2]
    @test get_positive([1, 2, 1, 1]) == [1, 2, 1, 1]
    @test get_positive([1, 1, 2, -1, 9, -5, 0, 6, -100, -9, 10]) == [1, 1, 2, 9, 6, 10]
    @test get_positive([-1, -2, -3, 5, 10, -5, 6, 7, -9, 7]) == [5, 10, 6, 7, 7]
    @test get_positive([6, -5, 8, -3, 6, -2, -1, -4, -1]) == [6, 8, 6]
    @test get_positive([2, -4, -5, 0, 1, 2, 6, 7, -9, 10]) == [2, 1, 2, 6, 7, 10]
    @test get_positive([0, -1, -3, -4, -5, -3]) == Int64[]
    @test get_positive([1, 2, -4, -5, 0, 0, 6, 7, -9, 10, 10, 2]) == [1, 2, 6, 7, 10, 10, 2]
    @test get_positive([-1, -7, -1]) == Int64[]
    @test get_positive([11, 2, -4, -5, 0, 1, 2, 6, 7, -9, 10]) == [11, 2, 1, 2, 6, 7, 10]
    @test get_positive([-1, -100, -2, -5, -3, -4, 6, 0, 6, 7, -9, 10]) == [6, 6, 7, 10]
    @test get_positive([1, 2, -3, -5, 0, 6, 7, 2, -9, 10]) == [1, 2, 6, 7, 2, 10]
    @test get_positive([-1, -5, -5, -3, -4, 6, 6, 5, 7, -9, 10, 7]) == [6, 6, 5, 7, 10, 7]
    @test get_positive([-1, -2, -3, 0, -4, 6, 6, 7, -9, 10]) == [6, 6, 7, 10]
    @test get_positive([1, 2, -4, -5, 0, 6, -9, -2, 10, 6, -9, 10]) == [1, 2, 6, 10, 6, 10]
    @test get_positive([-8]) == Int64[]
    @test get_positive([-8, -7]) == Int64[]
    @test get_positive([11, -1, -2, -5, -3, -4, 6, 0, 6, 7, -9, 10, 5, 10, -9]) == [11, 6, 6, 7, 10, 5, 10]
    @test get_positive([1, 2, 3, -4, -5, 0, 6, -9, -5, 10, -9]) == [1, 2, 3, 6, 10]
    @test get_positive([7, 1]) == [7, 1]
    @test get_positive([-1, -3, -5, -3, -4, 6, 0, 6, 7, -9, 10, 5, 10, -9]) == [6, 6, 7, 10, 5, 10]
    @test get_positive([6, -5, -4, 8, -3, 6, -1, -1, -5, -1]) == [6, 8, 6]
    @test get_positive([-1, -2, -5, -3, -4, 6, 0, 6, 7, -9, 10, 5, 10, -9, -1]) == [6, 6, 7, 10, 5, 10]
    @test get_positive([-5, 5]) == [5]
    @test get_positive([-1, -2, -4, 6, 0, 6, 7, -9, 10, 0]) == [6, 6, 7, 10]
    @test get_positive([-2, -3, -4, 6, 0, 6, -5, 7, -9, 10, -3, -9]) == [6, 6, 7, 10]
    @test get_positive([1, 1, 1, -8, 1, 1, 2, 2, 2, 2, 2, 2, 2]) == [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2]) == [1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2]
    @test get_positive([11, 1, 1, -8, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]) == [11, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]
    @test get_positive([8, -1, -7, -1, -1]) == [8]
    @test get_positive([1, 2, -4, -5, 0, 6, -9, 11, 6]) == [1, 2, 6, 11, 6]
    @test get_positive([10, 2, -4, -5, 0, 2, 2, 6, 7, -9, 10]) == [10, 2, 2, 2, 6, 7, 10]
    @test get_positive([1, 2, -4, -3, -5, 0, 0, 6, 7, -9, 10, 10, 1]) == [1, 2, 6, 7, 10, 10, 1]
    @test get_positive([1, 2, -100, -1, -5, 0, 6, 7, 10]) == [1, 2, 6, 7, 10]
    @test get_positive([-5, -2, -3, -4, -5]) == Int64[]
    @test get_positive([1, 2, -1, -2, -5, 0, 6, 7, -9, 10]) == [1, 2, 6, 7, 10]
    @test get_positive([-1, -2, -5, -9, -3, -3, -4, 6, 0, 6, 7, -9, 8, 10]) == [6, 6, 7, 8, 10]
    @test get_positive(Union{Float64, Int64}[-3, 0.5, -4, 2.5, 5, -2.2, -8, -4, -7, -10.5, 9.9, -10.5]) == Union{Float64, Int64}[0.5, 2.5, 5, 9.9]
    @test get_positive([11, 1, 2, -4, -5, 0, 1, 2, 6, 7, -9, 10]) == [11, 1, 2, 1, 2, 6, 7, 10]
    @test get_positive([0.5, -4.0, 2.5, 5.0, -8.0, -4.0, -7.0, 9.9, -11.18889279027017, -10.5, 2.5]) == [0.5, 2.5, 5.0, 9.9, 2.5]
    @test get_positive([1, 2, -3, -5, 0, 7, 6, 7, 2, -9, 10]) == [1, 2, 7, 6, 7, 2, 10]
    @test get_positive([6, -5, -4, -6, -3, 6, -1, -1, -5, -1]) == [6, 6]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -0.75, -2.25, -1, -2, -3, -4, -5, -6, 0]) == Union{Float64, Int64}[]
    @test get_positive([1, 2, -100, -1, -5, 0, 6, 7, 2]) == [1, 2, 6, 7, 2]
    @test get_positive([1, 2, -4, -5, 0, 2, 6, 7, -9, 7]) == [1, 2, 2, 6, 7, 7]
    @test get_positive([6, -5, -4, 8, -3, 6, -1, -5, -1]) == [6, 8, 6]
    @test get_positive([2, 1, 1, 1]) == [2, 1, 1, 1]
    @test get_positive([-1, -2, -5, -3, -4, -1, 6, 0, 6, 7, -9, 10, 5]) == [6, 6, 7, 10, 5]
    @test get_positive([1, 1, 1, 0, 1]) == [1, 1, 1, 1]
    @test get_positive([-1, -2, -5, -3, -3, -3, 2, -4, 6, 0, 6, 7, -9, 8, 10]) == [2, 6, 6, 7, 8, 10]
    @test get_positive([10, 1, 0, -1, -1, 0]) == [10, 1]
    @test get_positive([1, 2, -4, -5, 0, 3, 6, 7, 2, -9, 10]) == [1, 2, 3, 6, 7, 2, 10]
    @test get_positive([-2, 10, -4, 6, 0, 6, 7, -9, 10, -3, -4, -4]) == [10, 6, 6, 7, 10]
    @test get_positive([-1, -2, -3, 5, 10, -5, 7, -9, 7]) == [5, 10, 7, 7]
    @test get_positive([1, 2, -4, -5, 0, 6, -9, 10, 6, -4]) == [1, 2, 6, 10, 6]
    @test get_positive([1, 1, 0]) == [1, 1]
    @test get_positive([1, 2, -4, -5, 0, 3, 6, 7, 2, -9, 10, 2]) == [1, 2, 3, 6, 7, 2, 10, 2]
    @test get_positive([6, 8, -3, 6, -2, -1, 6, -4, -1, 8]) == [6, 8, 6, 6, 8]
    @test get_positive([1, 2, -4, -5, 0, 6, 7, -9, 10, 1, 0]) == [1, 2, 6, 7, 10, 1]
    @test get_positive([-1, -5, -5, -3, -4, 6, 6, 7, -9, 10, 7]) == [6, 6, 7, 10, 7]
    @test get_positive([1, -2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2]) == [1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -0.75, -2.25, -1, -2, -3, -4, -5, -3, -2.25, 0]) == Union{Float64, Int64}[]
    @test get_positive([1, -100, -1, -5, 0, 6, 7, 2]) == [1, 6, 7, 2]
    @test get_positive([0.5, -4.0, 2.5, 5.0, -11.18889279027017, -8.0, -4.0, -7.0, 9.9, -11.18889279027017, -10.5]) == [0.5, 2.5, 5.0, 9.9]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -0.75, -2.25, -1, -2, -4, -5, -3, -2.25, 0]) == Union{Float64, Int64}[]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -0.75, -2.25, -1, -2, -3, -4, -5, -6, 0, 0, -2.25]) == Union{Float64, Int64}[]
    @test get_positive([-2, -3, -4, 6, 0, 6, -5, 7, -9, 10, -3, -9, 6]) == [6, 6, 7, 10, 6]
    @test get_positive([6, -5, -4, -3, -2, -1, -5]) == [6]
    @test get_positive([1, 3, -1, -2, -5, 0, 6, 7, -9, 10, 6]) == [1, 3, 6, 7, 10, 6]
    @test get_positive([-1, -2, -5, -3, -4, 6, 0, 6, 7, 0, -9, 10, 5, -5]) == [6, 6, 7, 10, 5]
    @test get_positive([6, -5, -8, -4, 8, -8, -2, -1, -5, -7]) == [6, 8]
    @test get_positive([1, 2, -3, -1, -5, -1, 6, 7, 2, -9, 10]) == [1, 2, 6, 7, 2, 10]
    @test get_positive([0.5, 0.0, 2.5, 5.0, -2.2, -8.0, -0.75, 7.7, 9.9, -10.5]) == [0.5, 2.5, 5.0, 7.7, 9.9]
    @test get_positive([11, -3, -9, -9]) == [11]
    @test get_positive([11, -3, -9, -8, -9]) == [11]
    @test get_positive([-1, -2, -3, 0, -4, 6, 6, -8, 7, -9, 10, -2]) == [6, 6, 7, 10]
    @test get_positive([6, -5, 8, -3, 6, -2, -1, -4, -1, -1]) == [6, 8, 6]
    @test get_positive([1, 2, 3, -5, 0, 6, 7, -9, 10]) == [1, 2, 3, 6, 7, 10]
    @test get_positive([1, 2, -2, -5, 0, 6, 7, -9, -9, 10]) == [1, 2, 6, 7, 10]
    @test get_positive([-1, -2, -5, -4, -7, -3, 0, 6, 7, -9, 10, 5]) == [6, 7, 10, 5]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 2, 3, 1, 2, 2]) == [1, 1, 1, 1, 1, 2, 2, 2, 3, 1, 2, 2]
    @test get_positive([9, -8, -7]) == [9]
    @test get_positive([10, 2, -4, -5, 0, 2, 2, 6, 6, -9, 10, -5]) == [10, 2, 2, 2, 6, 6, 10]
    @test get_positive([8, 0]) == [8]
    @test get_positive([0.5, 0.0, 2.5, -3.144306649398891, 5.0, -2.2, -8.0, -0.75, 7.7, 9.9, -10.5]) == [0.5, 2.5, 5.0, 7.7, 9.9]
    @test get_positive([6, -5, -4, 8, -3, -100, 6, -1, -1, -5, -1]) == [6, 8, 6]
    @test get_positive([7, -5, -4, -3, -2, -1, -5]) == [7]
    @test get_positive([-1, -3, -5, -3, -4, 6, 0, 6, 7, -9, -100, 10, 5, 10, -9]) == [6, 6, 7, 10, 5, 10]
    @test get_positive([1, 2, -4, -5, 0, 3, 6, 7, 2, 10, 2]) == [1, 2, 3, 6, 7, 2, 10, 2]
    @test get_positive([-1, -2, -5, -3, -4, -1, 6, 11, 0, 6, 7, -9, 10, 5, 10]) == [6, 11, 6, 7, 10, 5, 10]
    @test get_positive([-1, -2, -5, -3, 2, -4, 6, -9, 6, 7, -9]) == [2, 6, 6, 7]
    @test get_positive([-2, 1]) == [1]
    @test get_positive([6, -5, -4, -1, -3, -4, -1, -5, -1]) == [6]
    @test get_positive([-2, -3, -4, 6, 0, 7, -9, 10, -3]) == [6, 7, 10]
    @test get_positive([1, 2, -4, -5, 0, 0, 6, 7, -9, 10, 6]) == [1, 2, 6, 7, 10, 6]
    @test get_positive([-100, -101, 1, 1, 1]) == [1, 1, 1]
    @test get_positive([-1, -100, -2, -5, -3, -4, 6, 0, 6, 7, -9, 10, 6]) == [6, 6, 7, 10, 6]
    @test get_positive([1, 2, -2, -5, 0, 6, 7, -9, -9, 10, 7]) == [1, 2, 6, 7, 10, 7]
    @test get_positive([9, -8, -8]) == [9]
    @test get_positive([-1, -2, -5, -4, -7, -3, 0, 6, 7, -9, 10, 6, -4]) == [6, 7, 10, 6]
    @test get_positive([6, 8, 7]) == [6, 8, 7]
    @test get_positive([1, 2, -7, -4, -4, -5, 0, 6, -9, 10, 6, -4]) == [1, 2, 6, 10, 6]
    @test get_positive([-5, -5, -3, 5, -1]) == [5]
    @test get_positive([-1, -2, -5, -4, -7, -3, 0, 6, 7, -9, 10, 5, -4]) == [6, 7, 10, 5]
    @test get_positive([-2, 10, -4, 1, 0, 6, 7, -9, 10, -3]) == [10, 1, 6, 7, 10]
    @test get_positive([11, 2, -4, -5, 0, 1, 2, 6, 7, -9, 10, 2]) == [11, 2, 1, 2, 6, 7, 10, 2]
    @test get_positive([-1, -2, -5, -3, -4, 6, 0, 6, 7, -9, 10, 0, 5, -9]) == [6, 6, 7, 10, 5]
    @test get_positive([1, 2, -4, -3, -5, 0, 0, 6, 7, -9, 10, 10, 1, 10]) == [1, 2, 6, 7, 10, 10, 1, 10]
    @test get_positive([-1, -2, -5, -4, 6, 0, 6, 7, -9, 10, 5, -7, -9]) == [6, 6, 7, 10, 5]
    @test get_positive([1, 2, -4, -5, 1, 2, 7, -9, 10]) == [1, 2, 1, 2, 7, 10]
    @test get_positive([1, 2, -100, -1, -5, 0, 6, 2, 7, 2]) == [1, 2, 6, 2, 7, 2]
    @test get_positive([1, 2, -1, -5, 0, 6, 7, -9, 11]) == [1, 2, 6, 7, 11]
    @test get_positive(Union{Float64, Int64}[-3, 0.5, -4, 2.5, 5, -2.2, -8, -4, -7, -10.5, 9.9, -10.5, -4]) == Union{Float64, Int64}[0.5, 2.5, 5, 9.9]
    @test get_positive([1, 3, -1, -2, -5, 0, 6, 7, -9, 10, 6, 3]) == [1, 3, 6, 7, 10, 6, 3]
    @test get_positive([1, 9]) == [1, 9]
    @test get_positive([-5, -2, -3, -5]) == Int64[]
    @test get_positive([1, 2, -1, -5, 0, 6, 10]) == [1, 2, 6, 10]
    @test get_positive([-5, -2, -3, -4, -5, -5]) == Int64[]
    @test get_positive([1, 2, -4, -5, 0, 6, -9, 10, -4, -4]) == [1, 2, 6, 10]
    @test get_positive(Union{Float64, Int64}[0, 7.7, -1.5, -0.75, -2.25, -1, -2, -4, -5, -3, -2.25, 0, -0.75]) == Union{Float64, Int64}[7.7]
    @test get_positive([11, -1, -2, -5, -3, -4, 6, 0, 6, 7, -3, 6, 10, 5, 10, -9]) == [11, 6, 6, 7, 6, 10, 5, 10]
    @test get_positive([1, -9, 2, 3, -4, -5, 0, 6, -9, -5, 10, -9]) == [1, 2, 3, 6, 10]
    @test get_positive([2, 3, 0, -5, 0, 6, -9]) == [2, 3, 6]
    @test get_positive([-1, -2, -5, -3, 8, -4, 6, 0, 11, -6, -9, 10, 7, 7, 10]) == [8, 6, 11, 10, 7, 7, 10]
    @test get_positive([0.5, 0.0, 2.5, 5.0, -2.2, -8.0, -0.75, 7.7, 9.9, -10.5, 5.0]) == [0.5, 2.5, 5.0, 7.7, 9.9, 5.0]
    @test get_positive([-100, -101, 1, 1, 1, 1]) == [1, 1, 1, 1]
    @test get_positive([-8, -7, -7]) == Int64[]
    @test get_positive([-5, -2, -3, -4, -5, -3]) == Int64[]
    @test get_positive([-1, -2, -5, -3, -4, 6, 0, 6, 7, -9, 10, 5, 10, -9, -1, 10]) == [6, 6, 7, 10, 5, 10, 10]
    @test get_positive([8, -4, -101, -7, -1, -1]) == [8]
    @test get_positive([10, 2, -4, -5, 0, 2, 6, 7, -9, 10]) == [10, 2, 2, 6, 7, 10]
    @test get_positive([11, 2, -4, -5, 0, 1, 2, 6, 7, -9, 11, 2]) == [11, 2, 1, 2, 6, 7, 11, 2]
    @test get_positive([1, -1, -1, -5, 0, 6, 7, 1, 10, -5]) == [1, 6, 7, 1, 10]
    @test get_positive([-4, -2, -2, -1]) == Int64[]
    @test get_positive([-5, -4, -3, 5]) == [5]
    @test get_positive([1, 3, -1, -2, -5, 0, 0, 6, 7, -9, 10, 6, 6, -9]) == [1, 3, 6, 7, 10, 6, 6]
    @test get_positive([-1, -5, -5, -3, -4, 6, 6, 5, 7, -9, 10, 7, -4]) == [6, 6, 5, 7, 10, 7]
    @test get_positive([8, -6, 0, 8]) == [8, 8]
    @test get_positive([-100, -101, 1, 1, 1, 1, -101]) == [1, 1, 1, 1]
    @test get_positive([0, 1, 2, -4, -3, -5, 0, 0, 6, 7, -10, 10, 10, 1, 10, 6, 6]) == [1, 2, 6, 7, 10, 10, 1, 10, 6, 6]
    @test get_positive([2, 1, 1, 2, 1, 1]) == [2, 1, 1, 2, 1, 1]
    @test get_positive([1, 3, -1, -2, -5, 0, 6, 7, 10, 6, 6, -9, -5]) == [1, 3, 6, 7, 10, 6, 6]
    @test get_positive([-2, -3, -3, -5, -2]) == Int64[]
    @test get_positive([-1, -2, -5, -3, -4, 6, 6, 7, -9, 10, 5, 10, -9]) == [6, 6, 7, 10, 5, 10]
    @test get_positive([1, 2, 3, -4, -2, 0, -3, 6, -9, -5, 10]) == [1, 2, 3, 6, 10]
    @test get_positive([1, 2, -4, 10, 0, -3, 0, 6, 7, -9, 10, 10]) == [1, 2, 10, 6, 7, 10, 10]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -0.75, -2.25, -2, -3, -4, -5, -6]) == Union{Float64, Int64}[]
    @test get_positive([6, 1, -4, 8, -3, 6, -1, -5, -1]) == [6, 1, 8, 6]
    @test get_positive([10, -5, 0, 2, 2, 6, 7, -9, 10]) == [10, 2, 2, 6, 7, 10]
    @test get_positive([-1, -2, -5, -3, -4, 6, 0, 6, -100, 7, 0, -9, 10, 5, -5, -1]) == [6, 6, 7, 10, 5]
    @test get_positive([6, -5, 11, -1, -3, -4, -1, -5, -1]) == [6, 11]
    @test get_positive([-1, -2, -5, -3, 6, 6, 7, -9, 6, 5, 10, -9]) == [6, 6, 7, 6, 5, 10]
    @test get_positive([1, 2, -4, -5, 0, 6, 7, 10, 9, 6]) == [1, 2, 6, 7, 10, 9, 6]
    @test get_positive([-1, -4, 6, 0, 6, 7, -9, 10, 0]) == [6, 6, 7, 10]
    @test get_positive([-1, -2, -3, -4, 6, 0, 6, 7, -9, 10, 6]) == [6, 6, 7, 10, 6]
    @test get_positive([8, -1, -2, -1]) == [8]
    @test get_positive([-1, -7]) == Int64[]
    @test get_positive([1, -100, -1, -2, -5, 0, -5, 6, 7, 2]) == [1, 6, 7, 2]
    @test get_positive([-8, -1, -3, -4, -5, -3]) == Int64[]
    @test get_positive([-1, 3, -5, -3, -4, 6, 6, 7, -9, 10, 5, 10, -9]) == [3, 6, 6, 7, 10, 5, 10]
    @test get_positive([-5, -5, -3, -4, 6, 6, 5, 7, -9, 10, 7, -4, -1]) == [6, 6, 5, 7, 10, 7]
    @test get_positive([-1, -2, -3, 5, -5, 7, -9, 10]) == [5, 7, 10]
    @test get_positive([-2, 10, -4, 6, 0, 6, 7, -9, 10, -3, -4, -4, -9]) == [10, 6, 6, 7, 10]
    @test get_positive([-1, -5, -5, -3, -4, 6, 6, 8, -9, -5, 10, 7]) == [6, 6, 8, 10, 7]
    @test get_positive([1, 3, -1, -2, -5, 0, 8, 6, 7, -9, 10, 6, 3]) == [1, 3, 8, 6, 7, 10, 6, 3]
    @test get_positive([2, 2, -4, -3, -5, -100, 0, 0, 6, 7, -9, 10, 10, 1]) == [2, 2, 6, 7, 10, 10, 1]
    @test get_positive([1, 1, 1, 1, 9, 1, 2, 2, 2, 2, 1, 2]) == [1, 1, 1, 1, 9, 1, 2, 2, 2, 2, 1, 2]
    @test get_positive([2, 1, 0, 1, 1]) == [2, 1, 1, 1]
    @test get_positive([-2, -3, -10, -4, 6, 0, 6, -5, -9, 10, -3, -9, -2]) == [6, 6, 10]
    @test get_positive([5, -1, -2, -5, -4, 6, 0, 6, 7, -9, 10, 5, -7, -9]) == [5, 6, 6, 7, 10, 5]
    @test get_positive([1, 2, -3, -5, 0, 6, 7, 2, -9, 10, 10]) == [1, 2, 6, 7, 2, 10, 10]
    @test get_positive([1, 2, -4, -5, 0, -4, 6, 7, 2, -9, 10]) == [1, 2, 6, 7, 2, 10]
    @test get_positive([1, 1, 1, 1, 2, 2, 2, 1, 2]) == [1, 1, 1, 1, 2, 2, 2, 1, 2]
    @test get_positive([-5, -4, 8, -3, 6, -2, -1, -5, -1]) == [8, 6]
    @test get_positive([-1, -2, -5, -3, -4, 6, 6, 7, -9, 10, 5, 10, -9, -2, 10, -9]) == [6, 6, 7, 10, 5, 10, 10]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -2.25, -2, -3, -5, -6]) == Union{Float64, Int64}[]
    @test get_positive([1, 3, -1, -2, -5, 0, 6, 7, -9, 10, 10, 6, 3]) == [1, 3, 6, 7, 10, 10, 6, 3]
    @test get_positive([2, -10, -7, 1, 1]) == [2, 1, 1]
    @test get_positive([-1, -2, -5, -3, -4, 6, 0, 6, 7, -9, -2, 5]) == [6, 6, 7, 5]
    @test get_positive([-1, -5, -5, -3, -4, 6, 6, 6, 5, 7, -9, 10, 7, -4]) == [6, 6, 6, 5, 7, 10, 7]
    @test get_positive([1, 2, -4, -5, -5, 0, 0, 6, -9, 10, 10]) == [1, 2, 6, 10, 10]
    @test get_positive([-2, -3, -4, 6, 0, 6, 7, -9, 10]) == [6, 6, 7, 10]
    @test get_positive([10, 2, -4, -4, -5, 0, 2, 2, 6, 7, -9, 10, 0]) == [10, 2, 2, 2, 6, 7, 10]
    @test get_positive(Bool[0, 1, 0, 0, 1]) == Bool[1, 1]
    @test get_positive([1, 2, -4, 1, -5, 0, 0, 6, 7, 9, -9, 10, 10]) == [1, 2, 1, 6, 7, 9, 10, 10]
    @test get_positive([1, 2, 2, -4, 1, -5, 0, 0, 6, 7, 9, -9, 10, 10]) == [1, 2, 2, 1, 6, 7, 9, 10, 10]
    @test get_positive([1, 5, 3, -1, -2, -5, 0, 6, 7, 10, 6, 6, -9, -5]) == [1, 5, 3, 6, 7, 10, 6, 6]
    @test get_positive([1, 2, -1, -5, 0, 6, 7, -9, 11, 0]) == [1, 2, 6, 7, 11]
    @test get_positive([6, 8, -5, 6, -2, -1, 6, -4, -1, 8]) == [6, 8, 6, 6, 8]
    @test get_positive([1, 1, 1, -8, 1, 2, 2, 2, 2, 2, 2, -100, 2]) == [1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2]
    @test get_positive([1, 7, 3, -4, -5, 0, 6, -9, -5, 10, -9]) == [1, 7, 3, 6, 10]
    @test get_positive([1, 2, -4, -3, -5, 0, 0, 6, 7, -9, 10, 10, 1, 7]) == [1, 2, 6, 7, 10, 10, 1, 7]
    @test get_positive([-1, -2, -5, 0, -9, -3, -3, -4, 6, 0, 6, 7, -9, 8, 10]) == [6, 6, 7, 8, 10]
    @test get_positive([1, 2, -4, -5, 0, 6, -9, 10, -4, -4, -4]) == [1, 2, 6, 10]
    @test get_positive([1, 2, 10, 1, -5, 0, 0, 6, 10, 9, -9, 10, 10, 0]) == [1, 2, 10, 1, 6, 10, 9, 10, 10]
    @test get_positive([-1, -2, -5, -3, -4, 6, 0, 6, 7, -2, 5]) == [6, 6, 7, 5]
    @test get_positive([-1, -2, -3, 6, 5, 10, -5, 6, 7, -9, 7]) == [6, 5, 10, 6, 7, 7]
    @test get_positive([-5, -4, -3, 5, -5]) == [5]
    @test get_positive([1, 2, -101, -1, -5, 0, 6, 7, -9, 11]) == [1, 2, 6, 7, 11]
    @test get_positive([-1, -3, -5, -3, -4, 6, 0, 6, 7, -9, 9, 10, 10, -9]) == [6, 6, 7, 9, 10, 10]
    @test get_positive([-5, -3, 5, -1]) == [5]
    @test get_positive([-1.25, -0.75, -2.25, -1.0, -2.0, -3.0, -4.0, -5.0, -6.0, 0.0]) == Float64[]
    @test get_positive([6, 8, -5, -4, 8, -3, -100, 6, -1, -1, -5, -1]) == [6, 8, 8, 6]
    @test get_positive([1, 2, -4, -5, 0, 6, -9, -1, 11, 6]) == [1, 2, 6, 11, 6]
    @test get_positive([-7, -1, -1]) == Int64[]
    @test get_positive([-8, -1, -3, -5, -3]) == Int64[]
    @test get_positive([-5, -3, -5]) == Int64[]
    @test get_positive([6, -5, 11, -1, -3, -4, -1, -5, -1, 11]) == [6, 11, 11]
    @test get_positive([-7, -1]) == Int64[]
    @test get_positive([-7, -8, -6]) == Int64[]
    @test get_positive([6, -5, 11, -1, -3, -1, -5, -1, 11]) == [6, 11, 11]
    @test get_positive([8, -1, 0]) == [8]
    @test get_positive([1, -1, -1, -5, 0, 6, 7, 1, 10, -5, -1]) == [1, 6, 7, 1, 10]
    @test get_positive(Union{Float64, Int64}[-3, 0.5, -4, 2.5, 5, -2.2, 0.3470794389448922, -8, -4, -7, -10.5, 9.9, -10.5]) == Union{Float64, Int64}[0.5, 2.5, 5, 0.3470794389448922, 9.9]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -0.75, -2.25, -1, -2, -3, -4, -5, -6, -0.75, -0.75]) == Union{Float64, Int64}[]
    @test get_positive([2, 9, -10, -7, 1, 1]) == [2, 9, 1, 1]
    @test get_positive([1, 2, -3, -5, 0, 6, 7, 2, -9, 10, 10, -5]) == [1, 2, 6, 7, 2, 10, 10]
    @test get_positive([6, 8, -5, 6, -2, -1, 6, -4, -1, 8, -1]) == [6, 8, 6, 6, 8]
    @test get_positive([7, -4, -3, -2, -1]) == [7]
    @test get_positive([6, -5, -4, -100, -2, -1, -5, -1]) == [6]
    @test get_positive([1, 2, -4, -5, 6, -9, 10, 6]) == [1, 2, 6, 10, 6]
    @test get_positive([1, 2, -100, 1, -5, 0, 0, 6, 7, 9, -9, 10, 10]) == [1, 2, 1, 6, 7, 9, 10, 10]
    @test get_positive([1, 2, -4, -5, 6, -9, 10, 6, -4, -9]) == [1, 2, 6, 10, 6]
    @test get_positive([6, -5, 11, -1, -3, -4, -1, -5, -1, 6]) == [6, 11, 6]
    @test get_positive([-2, 2]) == [2]
    @test get_positive([-1, -2, -3, -4, 6, 0, 6, 7, -9, 10, 5, -9]) == [6, 6, 7, 10, 5]
    @test get_positive([1, 2, -3, -5, 0, 6, 7, -9, 10]) == [1, 2, 6, 7, 10]
    @test get_positive([6, -5, -4, 8, -3, -2, -1, -5, -1, -1, -2]) == [6, 8]
    @test get_positive([1, 2, -1, -5, 0, 6, 10, 2]) == [1, 2, 6, 10, 2]
    @test get_positive(Union{Float64, Int64}[-3, 0.5, -4, 2.5, 5, -2.2, -8, -4, -7, -10.5, 9.9, -10.5, 2.5]) == Union{Float64, Int64}[0.5, 2.5, 5, 9.9, 2.5]
    @test get_positive([5, -1, -2, -5, -4, 6, 0, 6, -8, -9, 10, 5, -7, -9]) == [5, 6, 6, 10, 5]
    @test get_positive([6, -4, -3, -2, -1, -5, -1]) == [6]
    @test get_positive([1, -100, -5, 0, 6, 7, 2]) == [1, 6, 7, 2]
    @test get_positive([-5, -1, -3, -4, -5]) == Int64[]
    @test get_positive([-1, -2, -3, 5, -5, 2, 7, -9, 10, 10, 10]) == [5, 2, 7, 10, 10, 10]
    @test get_positive([8, -1, -2, -1, -1]) == [8]
    @test get_positive([-1, -2, -3, 0, -4, 6, 6, 7, -7, -9, 10, 6]) == [6, 6, 7, 10, 6]
    @test get_positive([-1, -2, -5, -3, -4, 6, -3, -5, 0, 6, 7, -9, 10, 5]) == [6, 6, 7, 10, 5]
    @test get_positive([11, -1, -2, -5, -3, -4, 6, 6, 0, 6, 7, -9, 10, 5, 10, -9]) == [11, 6, 6, 6, 7, 10, 5, 10]
    @test get_positive([1, 6, 2, -7, -4, -4, -5, 0, 6, -9, 10, 6, -4]) == [1, 6, 2, 6, 10, 6]
    @test get_positive([1, 6, -5, -4, 8, -3, -100, 6, -1, -1, -5, -1]) == [1, 6, 8, 6]
    @test get_positive([-1, -2, -5, -3, -4, -1, 6, 0, 6, 7, -8, 10, 5]) == [6, 6, 7, 10, 5]
    @test get_positive([1, 1, 1, -8, 1, 1, 11, 2, 2, 2, 2, 2, 2]) == [1, 1, 1, 1, 1, 11, 2, 2, 2, 2, 2, 2]
    @test get_positive([8, -1, -2, -2, -1]) == [8]
    @test get_positive([1, 6, 2, -7, -4, -4, 0, 6, -9, 10, 6, -4]) == [1, 6, 2, 6, 10, 6]
    @test get_positive([8, 6, 8, 7]) == [8, 6, 8, 7]
    @test get_positive([6, 8, 7, 6, 6]) == [6, 8, 7, 6, 6]
    @test get_positive([-2, 10, 6, 0, 6, 7, -9, 10, -3, -4, -4, -1]) == [10, 6, 6, 7, 10]
    @test get_positive([0.5, -4.0, 2.5, 5.0, -8.0, -4.0, -7.0, -11.18889279027017, -10.5, 2.5]) == [0.5, 2.5, 5.0, 2.5]
    @test get_positive([1, 2, -100, -1, -6, -5, 0, 6, 7, 2]) == [1, 2, 6, 7, 2]
    @test get_positive([1, 2, -3, -1, -101, -1, 6, 7, 2, -9, 10]) == [1, 2, 6, 7, 2, 10]
    @test get_positive([3, 1, 3, -1, -2, -5, 0, 0, 6, 7, -9, 10, 6, 6, -9]) == [3, 1, 3, 6, 7, 10, 6, 6]
    @test get_positive([-1, -2, -3, -4, 0, 6, 7, -9, 10, -3]) == [6, 7, 10]
    @test get_positive([1, 2, -3, -5, 0, 7, 6, 7, 10, -9, 10]) == [1, 2, 7, 6, 7, 10, 10]
    @test get_positive([1, -4, 8, -3, 6, -1, -5, -1]) == [1, 8, 6]
    @test get_positive([0, -9, 0]) == Int64[]
    @test get_positive([-7, 5]) == [5]
    @test get_positive([0.5, -4.0, 2.5, 5.0, -2.2, -8.0, -4.0, -7.0, 9.9, -11.18889279027017, -10.5, 2.5, 9.9]) == [0.5, 2.5, 5.0, 9.9, 2.5, 9.9]
    @test get_positive([-101, -9, -9, -9, -9]) == Int64[]
    @test get_positive([1, 2, -2, -5, 6, 7, -9, -9, 10, 7]) == [1, 2, 6, 7, 10, 7]
    @test get_positive([1, 2, -4, -5, 0, 6, 7, -1, -9, 10, 10]) == [1, 2, 6, 7, 10, 10]
    @test get_positive([-7, -1, -3, -4, -5]) == Int64[]
    @test get_positive([5, -1, -2, -5, -100, 6, 0, 6, -8, -9, 10, 5, -7, -9]) == [5, 6, 6, 10, 5]
    @test get_positive([-1, -2, -3, 0, 6, 6, 7, -9, 10]) == [6, 6, 7, 10]
    @test get_positive([1, -100, -5, 6, 7, 2, -100]) == [1, 6, 7, 2]
    @test get_positive([1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, -10]) == [1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2]
    @test get_positive([1, 2, 1, 2, 1]) == [1, 2, 1, 2, 1]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.6712853697787629, -0.75, -2.25, -1, -2, -4, -9, -5, -3, -2.25, 0]) == Union{Float64, Int64}[]
    @test get_positive([1, 2, 1, 2, -7, 1]) == [1, 2, 1, 2, 1]
    @test get_positive([6, -5, -4, 8, -3, -100, 6, -1, -1, -5, -1, -4]) == [6, 8, 6]
    @test get_positive([-100, 1]) == [1]
    @test get_positive([1, 1, 1, -5, 1, 1, 2, 2, 2, 2, 2, 1]) == [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1]
    @test get_positive([6, 8, -5, -10, -2, -1, 6, -4, -1, 8]) == [6, 8, 6, 8]
    @test get_positive([1, 2, 2, -4, 1, -5, 0, 0, 3, 6, 7, 9, -9, 10, 10]) == [1, 2, 2, 1, 3, 6, 7, 9, 10, 10]
    @test get_positive([1, 2, -4, -5, 0, 6, -9, 10, 6, 10]) == [1, 2, 6, 10, 6, 10]
    @test get_positive([-1, -2, -5, -3, -4, 6, 7, 7, -9, 10, 5, 10, -9]) == [6, 7, 7, 10, 5, 10]
    @test get_positive([11, -1, -2, -5, -3, -4, 5, 6, 0, 6, 7, -9, -9, 5, 10, -9]) == [11, 5, 6, 6, 7, 5, 10]
    @test get_positive([-8, -4, -3, 5, 0]) == [5]
    @test get_positive([-1, -2, -3, 5, -5, 7, -9, 10, -3]) == [5, 7, 10]
    @test get_positive([2, 1, 7, 1]) == [2, 1, 7, 1]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 2, 3, 1, 2, 2, 2]) == [1, 1, 1, 1, 1, 2, 2, 2, 3, 1, 2, 2, 2]
    @test get_positive([-1, -2, -3, 0, -4, 6, 7, -7, -9, 10, 6]) == [6, 7, 10, 6]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 1]) == [1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 1]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 2, 4, 1, 2, 2, 2]) == [1, 1, 1, 1, 1, 2, 2, 2, 4, 1, 2, 2, 2]
    @test get_positive([-1, -2, -5, -3, -4, 0, 6, 7, -9, 10, 0, 5, -9]) == [6, 7, 10, 5]
    @test get_positive([-1, 0, -7, -1, -1]) == Int64[]
    @test get_positive([1, 2, -4, -5, 0, 7, -100, -9, 10, -4]) == [1, 2, 7, 10]
    @test get_positive([-101, 1, 1, 1, 1, -101]) == [1, 1, 1, 1]
    @test get_positive([0, -1, -2, -3, -4, -5, -3]) == Int64[]
    @test get_positive([-6, 0, 8]) == [8]
    @test get_positive([-8, -7, -4]) == Int64[]
    @test get_positive([6, -5, -4, 8, 8, -2, -100, 6, -100, -1, -1, -5, -1, 8, -100]) == [6, 8, 8, 6, 8]
    @test get_positive([-1, -5, -5, -3, -4, 6, 0, 7, -9, 10, 7, -3, -9]) == [6, 7, 10, 7]
    @test get_positive([3, -1, -2, -5, 0, 6, -5, 7, -9, 10, 10, 6, 3]) == [3, 6, 7, 10, 10, 6, 3]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -2.25, -2, -3, -5, -6, -3]) == Union{Float64, Int64}[]
    @test get_positive([1, 2, -4, -5, 8, 6, 7, 7, -9, 10, 1, 0, 6]) == [1, 2, 8, 6, 7, 7, 10, 1, 6]
    @test get_positive([1, 2, -1, 3, -5, 0, 6, 7, -9, 11, 0]) == [1, 2, 3, 6, 7, 11]
    @test get_positive([3, 1, 3, -1, -5, 0, 0, 6, 7, -9, 10, 6, 6, -9]) == [3, 1, 3, 6, 7, 10, 6, 6]
    @test get_positive([-1, 2, -9, -4, -1, 7, -100, 1, 0, 2]) == [2, 7, 1, 2]
    @test get_positive([-2, 10, -4, 6, 0, 6, -7, 7, -9, 10, -3, -4, 1, 0]) == [10, 6, 6, 7, 10, 1]
    @test get_positive([6, 8, -5, -10, -2, -1, 6, -4, -1, 8, -1]) == [6, 8, 6, 8]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -2.25, -2, 2, -5, -6, -3]) == Union{Float64, Int64}[2]
    @test get_positive([1, 6, -7, -100, -4, -4, -4, 0, 6, -9, 10, 6, -4]) == [1, 6, 6, 10, 6]
    @test get_positive([-1, -2, -5, -2, -4, 6, 6, 1, 7, -9, 10, 5, 10, -9]) == [6, 6, 1, 7, 10, 5, 10]
    @test get_positive([-7, -5]) == Int64[]
    @test get_positive([8, -1, -2, 1, -2, -1]) == [8, 1]
    @test get_positive(Union{Float64, Int64}[0, 7.7, -1.5, 7, -0.75, -2.25, -1, -2, -4, -5, -3, -2.25, 0, -0.75]) == Union{Float64, Int64}[7.7, 7]
    @test get_positive([1, 9, -3, 2, -4, -5, 0, -100, -9, 10, -4]) == [1, 9, 2, 10]
    @test get_positive([1, -1, -1, -5, 0, 6, 7, 1, 10, -5, -1, -1]) == [1, 6, 7, 1, 10]
    @test get_positive([-1, -2, -3, -4, 0, 6, 7, -9, 10, -3, 0]) == [6, 7, 10]
    @test get_positive(Union{Float64, Int64}[-3, 0.5, -4, 2.5, 5, -2.2, 0.3470794389448922, -8, -4, -7, 9.9, -10.5]) == Union{Float64, Int64}[0.5, 2.5, 5, 0.3470794389448922, 9.9]
    @test get_positive([1, 2, 2]) == [1, 2, 2]
    @test get_positive([7, 2, -4, -5, 0, 6, 7, -9, 10, 1, 0, 2, 0]) == [7, 2, 6, 7, 10, 1, 2]
    @test get_positive([-1, 2, -9, -4, -1, 7, -100, 1, 0, 2, -9, -4]) == [2, 7, 1, 2]
    @test get_positive([1, 2, -4, -5, 0, 0, 6, 7, -9, 10, 10, 3]) == [1, 2, 6, 7, 10, 10, 3]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -2, -3, -5, -6]) == Union{Float64, Int64}[]
    @test get_positive([1, 2, -4, -5, -3, 0, 6, -9, 10, -4, -4]) == [1, 2, 6, 10]
    @test get_positive([-1, -2, -5, -3, -4, 6, 0, 6, 7, -9, 10, 5, 10, -9, -4]) == [6, 6, 7, 10, 5, 10]
    @test get_positive([1, 3, -1, -2, -5, 8, 6, 7, -9, 10, 6, 3, 10]) == [1, 3, 8, 6, 7, 10, 6, 3, 10]
    @test get_positive([1, 6, -7, -9, -100, -4, -4, -4, 0, 6, -9, 10, 6, -4, 0]) == [1, 6, 6, 10, 6]
    @test get_positive([1, 2, -4, -5, 0, -4, 6, 7, 2, 10]) == [1, 2, 6, 7, 2, 10]
    @test get_positive([-8, 9, -8, -7]) == [9]
    @test get_positive([-5, 6, 5]) == [6, 5]
    @test get_positive([-1, -5, -5, -3, -4, 6, 0, 6, 7, 10, 7]) == [6, 6, 7, 10, 7]
    @test get_positive([7, 5, 4]) == [7, 5, 4]
    @test get_positive([3, -1, -2, -5, 0, 6, -5, 7, -9, 10, 0, 6, 3]) == [3, 6, 7, 10, 6, 3]
    @test get_positive([8, -6, 0, 8, -6]) == [8, 8]
    @test get_positive([6, 8, -5, 6, -2, -1, 6, -4, -1, 8, -5]) == [6, 8, 6, 6, 8]
    @test get_positive([1, 2, -4, 1, -5, 0, 0, 6, 7, 9, -9, 10, 10, 10]) == [1, 2, 1, 6, 7, 9, 10, 10, 10]
    @test get_positive([-1, -2, -2, -5, -3, 2, -4, 6, -9, 6, 7, -9]) == [2, 6, 6, 7]
    @test get_positive([-2, -3, -4, -5, -3]) == Int64[]
    @test get_positive([0.5, -4.0, 2.5, 5.0, -2.2, -8.0, -7.0, 9.9, -11.18889279027017, -10.5]) == [0.5, 2.5, 5.0, 9.9]
    @test get_positive([6, -9, -4, 8, -2, 6, -1, -5, -1, 6]) == [6, 8, 6, 6]
    @test get_positive([-7, -10, -1, -1]) == Int64[]
    @test get_positive([8, 6, 7]) == [8, 6, 7]
    @test get_positive(Union{Float64, Int64}[0, -1.5, -2.25, -2, 2, -5, -6, -3, -2.25]) == Union{Float64, Int64}[2]
    @test get_positive([8, -1, -2, -1, -1, -2, -1]) == [8]
    @test get_positive([10, -4, -5, 0, 2, 6, 7, -9, 10]) == [10, 2, 6, 7, 10]
    @test get_positive([-8, -3, -5, -3]) == Int64[]
    @test get_positive([1, 2, -4, -5, 8, 6, 7, 7, -9, 10, 1, 0, 6, 1]) == [1, 2, 8, 6, 7, 7, 10, 1, 6, 1]
    @test get_positive([6, 10, -3, -5, 11, -1, -3, -4, -1, -5, -1, 11]) == [6, 10, 11, 11]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 2, 1, 2, -1, 1, 1, 1]) == [1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 1]
    @test get_positive([1, -3, 2, -4, -3, -5, 0, 0, 6, 7, -9, 10, 10, 1, 10, -3]) == [1, 2, 6, 7, 10, 10, 1, 10]
    @test get_positive([1, 2, -4, -4, 1, -5, 0, 0, 6, 7, -9, 10, 10]) == [1, 2, 1, 6, 7, 10, 10]
    @test get_positive([6, 8, 6, -2, -1, 6, -4, -1, 8, -5]) == [6, 8, 6, 6, 8]
    @test get_positive([1, -100, -5, 2, 6, 7, 2, -100]) == [1, 2, 6, 7, 2]
    @test get_positive([10, 2, -4, -5, 0, 6, 2, 2, 6, 6, -9, 10, -5, 2]) == [10, 2, 6, 2, 2, 6, 6, 10, 2]
    @test get_positive([2, -10, -7, 1, 1, 1]) == [2, 1, 1, 1]
    @test get_positive([-2, -8]) == Int64[]
    @test get_positive([-2, -3, -8]) == Int64[]
    @test get_positive([1, 2, -1, 9, -5, 0, 6, -100, -9, 10]) == [1, 2, 9, 6, 10]
    @test get_positive([1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, -10, 2]) == [1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2]
    @test get_positive([-3, -5]) == Int64[]
    @test get_positive([-1, 2, -9, -4, -1, 7, -100, 1, 0, 2, -9, -4, -4]) == [2, 7, 1, 2]
    @test get_positive([1, 1, 1, 1, 1, 1, 2, 3, 0, 2, 1, 2, -10]) == [1, 1, 1, 1, 1, 1, 2, 3, 2, 1, 2]
    @test get_positive([1, 2, -2, -5, 0, 6, -1, 7, -9, -9, 10]) == [1, 2, 6, 7, 10]
    @test get_positive([11, 5, 4]) == [11, 5, 4]
    @test get_positive([-8, -1, -3, -5, -3, -8]) == Int64[]
    @test get_positive([-1, -2, 6, 5, 10, -5, 6, 7, -8, 7]) == [6, 5, 10, 6, 7, 7]
    @test get_positive([1, 2, -2, -5, 0, 6, 7, 4, -9, 10]) == [1, 2, 6, 7, 4, 10]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -0.75, -2.25, -1, -2, -3, -4, -5, -6, 0, -2.25]) == Union{Float64, Int64}[]
    @test get_positive([-1, -2, -5, -3, 6, 6, 7, -9, -1, 5, 10, -9]) == [6, 6, 7, 5, 10]
    @test get_positive([6, 1, -4, 8, -3, 7, 6, -1, -5, -1]) == [6, 1, 8, 7, 6]
    @test get_positive([0, 1, 2, -4, -3, -5, 0, 0, 6, 7, -10, 10, 10, 1, 10, 6]) == [1, 2, 6, 7, 10, 10, 1, 10, 6]
    @test get_positive([-1, -2, -3, 0, 6, 6, 7, -9, 10, -4]) == [6, 6, 7, 10]
    @test get_positive(Bool[0, 1, 0, 0, 1, 1]) == Bool[1, 1, 1]
    @test get_positive([-1, -5, -5, -3, -4, 6, 0, 6, 7, 10, 7, -5, 0]) == [6, 6, 7, 10, 7]
    @test get_positive([-6, -5, -4, 8, 8, -2, -100, 6, -100, -1, -1, -5, -1, 8, -100, -4]) == [8, 8, 6, 8]
    @test get_positive([-1, -2, -3, -4, 5, 0, 6, 7, -9, 10, 10]) == [5, 6, 7, 10, 10]
    @test get_positive([0.5, 0.0, 2.5, 5.0, -2.2, -8.0, -0.75, 7.7, 9.9, -10.5, 5.0, -8.0]) == [0.5, 2.5, 5.0, 7.7, 9.9, 5.0]
    @test get_positive([8, -1, -2, -1, -1, -2, -1, -1]) == [8]
    @test get_positive([-6, -5, -4, 8, 8, -2, -100, 6, -100, -1, -1, -5, -1, 8, -100, -4, -2]) == [8, 8, 6, 8]
    @test get_positive([-1, -2, -5, -2, -4, 6, 6, 7, -9, 10, 5, 10, -9, -2, 10, -9]) == [6, 6, 7, 10, 5, 10, 10]
    @test get_positive([1, -100, -5, 0, 6, 7]) == [1, 6, 7]
    @test get_positive([2, 1, -10, 0, 1, 1]) == [2, 1, 1, 1]
    @test get_positive([-1, -2, -5, -3, 0, -4, 6, 0, 6, 7, -9, 10, 5, 10, -9, -1, 10, 6]) == [6, 6, 7, 10, 5, 10, 10, 6]
    @test get_positive([-7, -1, -1, 11, -1]) == [11]
    @test get_positive([1, 2, -100, -1, -5, 0, 6, 7]) == [1, 2, 6, 7]
    @test get_positive([10, 2, -4, -5, -2, 0, 6, 2, 2, 6, 6, -9, 10, -5, 2]) == [10, 2, 6, 2, 2, 6, 6, 10, 2]
    @test get_positive([7, 2, -4, -3, -5, -2, 0, 0, 6, 7, -9, 10, 10, 1, 10]) == [7, 2, 6, 7, 10, 10, 1, 10]
    @test get_positive([2, -4, 1, -5, -1, 0, 0, 6, 7, 9, -9, 10, 10, 10]) == [2, 1, 6, 7, 9, 10, 10, 10]
    @test get_positive([6, -5, -1, -4, -100, -2, -1, -5, -1]) == [6]
    @test get_positive([-1, -3, -4, 6, 0, 6, 7, -9, 10, 6, -9]) == [6, 6, 7, 10, 6]
    @test get_positive([-1, -2, -3, -4, 0, 6, 7, -9, 10, 6]) == [6, 7, 10, 6]
    @test get_positive([-1, 2, -9, -4, -1, 7, -100, 1, 2, -9, -4]) == [2, 7, 1, 2]
    @test get_positive([1, 2, -3, -5, 0, 6, 6, 2, -9, 10, 10, -5]) == [1, 2, 6, 6, 2, 10, 10]
    @test get_positive([8, -1, -2, 6]) == [8, 6]
    @test get_positive([-1, -2, -3, 5, 0, -5, 7, -9, 7]) == [5, 7, 7]
    @test get_positive([10, -4, 6, 0, 6, 7, -9, 10, -3, -4, -4]) == [10, 6, 6, 7, 10]
    @test get_positive(Union{Float64, Int64}[-3, 0.5, -4, 2.5, -10.5, -3.144306649398891, 5, -2.2, 0.5, -8, -4, -7, 9.9, -10.5]) == Union{Float64, Int64}[0.5, 2.5, 5, 0.5, 9.9]
    @test get_positive([1, 3, -1, -2, -5, 8, 6, 7, -9, 10, 6, 10]) == [1, 3, 8, 6, 7, 10, 6, 10]
    @test get_positive([-1, -4, -2, -5, -3, -4, 6, 0, 6, 7, -9, 10, -5, 0, 5, -9]) == [6, 6, 7, 10, 5]
    @test get_positive([8, -1]) == [8]
    @test get_positive([-1, -100, -2, -1, -3, -4, 6, 0, 6, 7, -9, -3, 10, 6]) == [6, 6, 7, 10, 6]
    @test get_positive([-1, -3, -5, -3, -8]) == Int64[]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -0.75, 9.9, -2.25, -1, -2, -3, -4, -5, 7, 0]) == Union{Float64, Int64}[9.9, 7]
    @test get_positive([2, -4, -5, 0, 2, 6, 7, -9, 7, 7]) == [2, 2, 6, 7, 7, 7]
    @test get_positive([1, 2, -4, -5, 9, 0, -4, 6, 7, 2, -9, 10]) == [1, 2, 9, 6, 7, 2, 10]
    @test get_positive([0, -1, -3, -4, -5, -4, -1]) == Int64[]
    @test get_positive([-1, -2, -5, 11, -3, -4, 6, -3, -5, 0, 6, 7, -9, 10, 5]) == [11, 6, 6, 7, 10, 5]
    @test get_positive([-2.25, -4.0, 2.5, 5.0, -8.0, -4.0, -7.0, -11.18889279027017, -10.5, 2.5, -11.18889279027017]) == [2.5, 5.0, 2.5]
    @test get_positive([-2, -3, -5, -2]) == Int64[]
    @test get_positive([-1, -2, -5, -9, -1, -3, -3, -4, 6, 0, 6, 7, -9, 8, 10]) == [6, 6, 7, 8, 10]
    @test get_positive([10, 1, 0, -1, -1]) == [10, 1]
    @test get_positive([-1, -2, -5, -3, 8, -5, 6, 0, 11, -6, -9, 10, 7, 7]) == [8, 6, 11, 10, 7, 7]
    @test get_positive([11, -1, -2, -5, -3, -4, 6, 0, 6, 7, -9, 5, 10, -9, 0]) == [11, 6, 6, 7, 5, 10]
    @test get_positive([1, 1, 1, -8, -10, 2, 2, 2, 2, 2, 2, -100, 2, -8]) == [1, 1, 1, 2, 2, 2, 2, 2, 2, 2]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1]) == [1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1]
    @test get_positive([6, 8, -3, 6, -2, -1, 6, -4, -1, 8, 8]) == [6, 8, 6, 6, 8, 8]
    @test get_positive([-1, -5, -5, -3, -4, 6, 6, 6, 5, 7, -9, 10, 7, -4, 7]) == [6, 6, 6, 5, 7, 10, 7, 7]
    @test get_positive([-1, -2, -5, -4, -7, 5, -3, 0, 6, 7, -9, 10, 6, -4]) == [5, 6, 7, 10, 6]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 2, -7, 2, 1, 2]) == [1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2]
    @test get_positive([1, 2, -4, -5, 0, 6, 7, 2, -9]) == [1, 2, 6, 7, 2]
    @test get_positive([5, -1, -2, -5, -100, 6, 0, 6, 10, -9, 10, 5, -7, -9, 0]) == [5, 6, 6, 10, 10, 5]
    @test get_positive([1, 3, -1, -2, 7, 0, 6, 7, 6, 6, -9, -5]) == [1, 3, 7, 6, 7, 6, 6]
    @test get_positive([11, -1, -2, -5, -3, -4, 6, 0, 6, 7, -9, 10, 5, 10, -9, -9]) == [11, 6, 6, 7, 10, 5, 10]
    @test get_positive([10, 2, -4, -5, -2, 5, 0, 6, 2, 2, 6, 6, -9, 10, -5, 2, -9]) == [10, 2, 5, 6, 2, 2, 6, 6, 10, 2]
    @test get_positive([11, -1, -2, -5, -3, -4, 6, 0, 7, -2, 5, 10, -9, 0]) == [11, 6, 7, 5, 10]
    @test get_positive([1, -100, -5, 6, 7, 2, -101, -100]) == [1, 6, 7, 2]
    @test get_positive([1, 1, 1, 0, 1, 0]) == [1, 1, 1, 1]
    @test get_positive(Bool[0, 1, 0, 1, 1, 1]) == Bool[1, 1, 1, 1]
    @test get_positive([0, -100, -5, -8, 7, 2, -100]) == [7, 2]
    @test get_positive([-5, -4, -3, -2, -1, 0]) == Int64[]
    @test get_positive([1, 2, 3, 4, 5, 6]) == [1, 2, 3, 4, 5, 6]
    @test get_positive([0, 1, 2, 0, 3, 4, 5, 0, 0, 6, 0, 7]) == [1, 2, 3, 4, 5, 6, 7]
    @test get_positive([1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5]
    @test get_positive([-1, -2, -3, -4, -5]) == Int64[]
    @test get_positive([0, 0, 0, 0, 0]) == Int64[]
    @test get_positive([1.5, 2.7, -3.6, 0.0, 5.0]) == [1.5, 2.7, 5.0]
    @test get_positive([1.2, 2.5, 3.7]) == [1.2, 2.5, 3.7]
    @test get_positive([-2, -1]) == Int64[]
    @test get_positive([-2, 2, -1]) == [2]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2]) == [1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2]
    @test get_positive([-2, -1, -1]) == Int64[]
    @test get_positive([1, 2, -4, -5, 0, 7, -9, 10, 0]) == [1, 2, 7, 10]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 1, -3, -3, 2, 2]) == [1, 1, 1, 1, 1, 2, 2, 1, 2, 2]
    @test get_positive([-89.04346588476734, 9.9, 32.97170491287429, -2.25]) == [9.9, 32.97170491287429]
    @test get_positive([9.9, 33.195768044846155, -2.25]) == [9.9, 33.195768044846155]
    @test get_positive([0, -1, -1]) == Int64[]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 2, 2, -3, -3, 2, 2]) == [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
    @test get_positive([1, 1, 1, 1, 1, 2, -1, 1, -3, -3, 2, 2]) == [1, 1, 1, 1, 1, 2, 1, 2, 2]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -2.25, -1, -6, -4, -3, -4, -5, -6, -3]) == Union{Float64, Int64}[]
    @test get_positive([-1, -1, -1]) == Int64[]
    @test get_positive([98, 99]) == [98, 99]
    @test get_positive([-89.04346588476734, 32.97170491287429, -2.25]) == [32.97170491287429]
    @test get_positive([-5, -4, -3, -2, -1, -5]) == Int64[]
    @test get_positive([7]) == [7]
    @test get_positive([9.9, 25.221353337136023, 33.195768044846155, -2.25]) == [9.9, 25.221353337136023, 33.195768044846155]
    @test get_positive([-2, 99, -1]) == [99]
    @test get_positive([0.5, 0.0, -4.0, 2.5, 5.0, -2.2, -8.0, 7.7, 9.9, -10.5, 9.9]) == [0.5, 2.5, 5.0, 7.7, 9.9, 9.9]
    @test get_positive([9.9, 0.5, -2.25]) == [9.9, 0.5]
    @test get_positive([1, 1, 1, -2, 1, 99, 2, 2, 2, 2, -3, 1, -3, 2, 2]) == [1, 1, 1, 1, 99, 2, 2, 2, 2, 1, 2, 2]
    @test get_positive([-89.04346588476734, -2.651030586877352, 33.195768044846155, 32.97170491287429, -2.25]) == [33.195768044846155, 32.97170491287429]
    @test get_positive([-1, -2, 0, -3, -4, -5]) == Int64[]
    @test get_positive([9.9, 25.12472520208241, 33.195768044846155, -2.25]) == [9.9, 25.12472520208241, 33.195768044846155]
    @test get_positive([1, 2, 1, 1, 1, 2, -1, 1, -3, 3, -3, 2, 2]) == [1, 2, 1, 1, 1, 2, 1, 3, 2, 2]
    @test get_positive([-1, -2, -4, 5, 0, 6, 7, -9, 9]) == [5, 6, 7, 9]
    @test get_positive([0, -1, -2, -3, -4, 9]) == [9]
    @test get_positive([-1, -2, -3, -4, 5, 0, 6, 7, -9, 10, -9]) == [5, 6, 7, 10]
    @test get_positive([9.9, 25.221353337136023, 33.195768044846155, -2.25, -2.25, -2.25]) == [9.9, 25.221353337136023, 33.195768044846155]
    @test get_positive([-5, 3, -2, -1, -5]) == [3]
    @test get_positive([-5, -3, -2, -1]) == Int64[]
    @test get_positive([0, -1, -6, -3, -4, 9]) == [9]
    @test get_positive([0, -1, -5, -3, -4, 9]) == [9]
    @test get_positive([2, -1, -2]) == [2]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 2, -3, -3, 2, 2, 2]) == [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
    @test get_positive([-2, 99]) == [99]
    @test get_positive([0, -2, -3, -4, -5]) == Int64[]
    @test get_positive([1, 2, -4, -5, 0, 7, -9, 10, 0, 1]) == [1, 2, 7, 10, 1]
    @test get_positive([9.9, -2.6958053769612267, 33.195768044846155, -2.25]) == [9.9, 33.195768044846155]
    @test get_positive([2, -4, -5, 0, 7, -9, 10, 0]) == [2, 7, 10]
    @test get_positive([0, -1, -1, -1, 5, -1]) == [5]
    @test get_positive([33.195768044846155, -2.25]) == [33.195768044846155]
    @test get_positive(Bool[0, 1, 1, 0, 1, 1]) == Bool[1, 1, 1, 1]
    @test get_positive([1, 2, -4, -5, 0, 7, -9, 10, 0, 1, -5]) == [1, 2, 7, 10, 1]
    @test get_positive([-3, -1, -1, 0, 5, -1]) == [5]
    @test get_positive([-1, -2, -3, 6, -4, 5, 0, 6, 7, -9, 10]) == [6, 5, 6, 7, 10]
    @test get_positive([-1, -1]) == Int64[]
    @test get_positive([0, 99, -1, 6, -3, -4, -5]) == [99, 6]
    @test get_positive([-2, 2, -1, -1]) == [2]
    @test get_positive([0, 6]) == [6]
    @test get_positive([1, -1, 0]) == [1]
    @test get_positive([0.5, 0.0, -4.0, 2.5, 5.0, -2.2, -2.651030586877352, -8.0, 7.7, 9.9, -10.5, 9.9]) == [0.5, 2.5, 5.0, 7.7, 9.9, 9.9]
    @test get_positive([-5, -9, -4, -2, -1, -5]) == Int64[]
    @test get_positive([1, -1, 0, 0]) == [1]
    @test get_positive([1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2]) == [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2]
    @test get_positive([-5, 3, -2, -1, -5, 3]) == [3, 3]
    @test get_positive([98, 0, 99, -1, 6, -9, -5]) == [98, 99, 6]
    @test get_positive([0, -2, -3, 2, -5]) == [2]
    @test get_positive([9.9, 25.221353337136023, 24.93175152910768, 33.195768044846155, -2.25]) == [9.9, 25.221353337136023, 24.93175152910768, 33.195768044846155]
    @test get_positive([-5, -5, -9, -4, -2, -1, -5]) == Int64[]
    @test get_positive(Union{Float64, Int64}[0, -4, 2.5, 5, -2.2, -8, 7.7, 9.9, -10.5, 7.7]) == Union{Float64, Int64}[2.5, 5, 7.7, 9.9, 7.7]
    @test get_positive([9.9, -2.6958053769612267, 9.9]) == [9.9, 9.9]
    @test get_positive([9.9, 24.93175152910768, 33.195768044846155, -2.25]) == [9.9, 24.93175152910768, 33.195768044846155]
    @test get_positive([0, -1, 7, -2, -3, -4, -2, 9]) == [7, 9]
    @test get_positive([1, 2, -4, -5, 0, 7, -9, 10, 0, 2, 1]) == [1, 2, 7, 10, 2, 1]
    @test get_positive([9.9, 25.221353337136023, 24.93175152910768, 33.195768044846155, -2.25, 33.195768044846155]) == [9.9, 25.221353337136023, 24.93175152910768, 33.195768044846155, 33.195768044846155]
    @test get_positive([9.9, -2.6958053769612267, 25.12472520208241, 9.9]) == [9.9, 25.12472520208241, 9.9]
    @test get_positive([-89.04346588476734, 32.97170491287429, -2.6958053769612267, 7.7]) == [32.97170491287429, 7.7]
    @test get_positive([-1, -2, -2, -3, 6, -4, 5, 0, 6, 7, -9, 10]) == [6, 5, 6, 7, 10]
    @test get_positive([-5, -9, -4, -2, -1, -5, -5]) == Int64[]
    @test get_positive([9.9, 25.12472520208241, 33.195768044846155, -2.25, 33.195768044846155, 25.12472520208241, -2.25]) == [9.9, 25.12472520208241, 33.195768044846155, 33.195768044846155, 25.12472520208241]
    @test get_positive([9.9, 25.12472520208241, 33.195768044846155, -2.25, 9.9]) == [9.9, 25.12472520208241, 33.195768044846155, 9.9]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1]) == [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1]
    @test get_positive([-1, 1, -3, -4, 5, 0, 6, 7, -9, 10]) == [1, 5, 6, 7, 10]
    @test get_positive([0, -1, -2, -9, -3, -6, -4, 9]) == [9]
    @test get_positive([-3, -1, -1]) == Int64[]
    @test get_positive([-5, -9, -4, -2, -5]) == Int64[]
    @test get_positive([7.878953248636265, 25.12472520208241, 33.195768044846155, -2.25, 33.195768044846155]) == [7.878953248636265, 25.12472520208241, 33.195768044846155, 33.195768044846155]
    @test get_positive([1, 2, -4, -5, 0, 7, -9, 10, 0, 3, 1, 0, -4]) == [1, 2, 7, 10, 3, 1]
    @test get_positive([1, -3, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]) == [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
    @test get_positive([-3, -1, -1, -1]) == Int64[]
    @test get_positive([0, -3, -8, -5]) == Int64[]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -0.75, -2.25, -1, -2, -3, 10, -5, -6]) == Union{Float64, Int64}[10]
    @test get_positive([1, 2, -4, -5, 0, 7, -9, 10]) == [1, 2, 7, 10]
    @test get_positive([9.9, 25.221353337136023, 24.93175152910768, 33.195768044846155, -3.1836537136945844, -1.5]) == [9.9, 25.221353337136023, 24.93175152910768, 33.195768044846155]
    @test get_positive([0.5, 0.0, -4.0, -13.662203687087855, 2.5, 5.0, -2.2, -8.0, 7.7, 9.9, -10.5, 9.9, -13.662203687087855]) == [0.5, 2.5, 5.0, 7.7, 9.9, 9.9]
    @test get_positive([0, -3, -5]) == Int64[]
    @test get_positive([24.93175152910768, 33.195768044846155, -2.25]) == [24.93175152910768, 33.195768044846155]
    @test get_positive([-4, 1]) == [1]
    @test get_positive([-3, -8, -5, -5]) == Int64[]
    @test get_positive([-89.04346588476734, -2.25, -2.6958053769612267, 7.7]) == [7.7]
    @test get_positive([1, 2, -5, -5, 0, 6, 7, -9, 10]) == [1, 2, 6, 7, 10]
    @test get_positive([9.9, 25.221353337136023, 24.93175152910768, -3.1836537136945844, -3.1836537136945844, -0.75, -1.5]) == [9.9, 25.221353337136023, 24.93175152910768]
    @test get_positive([1, 2, -4, -5, 6, 7, -9, 10, 2, 1, 2]) == [1, 2, 6, 7, 10, 2, 1, 2]
    @test get_positive([1, 1, -6, 1, 1, 2, 2, 2, 2, 2, 2]) == [1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
    @test get_positive([-9, -5, -4, -3, -2, -1, -5]) == Int64[]
    @test get_positive([5, -3, -5]) == [5]
    @test get_positive(Bool[0, 1, 1, 0, 0, 1]) == Bool[1, 1, 1]
    @test get_positive([1, 1, 1, 1, 1, 6, 1, 2, 2, 2, 2, 1, 2]) == [1, 1, 1, 1, 1, 6, 1, 2, 2, 2, 2, 1, 2]
    @test get_positive([99, 3, -2, -1, -5]) == [99, 3]
    @test get_positive([1, 1, 1, 6, 1, 1, 2, 1, 2, 2, 2]) == [1, 1, 1, 6, 1, 1, 2, 1, 2, 2, 2]
    @test get_positive([1, 1, 1, 1, 99, 2, 2, 2, -3, 2, 2]) == [1, 1, 1, 1, 99, 2, 2, 2, 2, 2]
    @test get_positive([0.5, 0.0, -4.0, 5.0, -2.6307909667819085, -2.651030586877352, -8.0, 7.7, 9.9, -10.5, 9.9]) == [0.5, 5.0, 7.7, 9.9, 9.9]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -0.75, -2.25, -1, 3, -2, -3, 10, -5, -6]) == Union{Float64, Int64}[3, 10]
    @test get_positive([1, 0, -1, -1]) == [1]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -2.25, -1, -6, -4, -3, -4, -5, -7, -3]) == Union{Float64, Int64}[]
    @test get_positive(Union{Float64, Int64}[0, -2.651030586877352, -4, 2.5, 5, -2.2, -2.651030586877352, -8, 7.7, 9.9, -10.5, 9.9, -2.2]) == Union{Float64, Int64}[2.5, 5, 7.7, 9.9, 9.9]
    @test get_positive([0.5, 0.0, -4.0, 2.5, 5.0, -2.2, -2.651030586877352, -8.0, 7.7, 9.9, -10.5, 9.9, 9.9]) == [0.5, 2.5, 5.0, 7.7, 9.9, 9.9, 9.9]
    @test get_positive([-4, 2, -4, 0, 7, -9, 10, 0]) == [2, 7, 10]
    @test get_positive([0, -2, -3, -4, -5, -3, -4]) == Int64[]
    @test get_positive([0.5, -4.0, 2.5, 5.0, -2.2, -2.651030586877352, -8.0, 7.7, 9.9, -10.5, 9.9]) == [0.5, 2.5, 5.0, 7.7, 9.9, 9.9]
    @test get_positive([-5, 3, -2, -1, -5, 4]) == [3, 4]
    @test get_positive([1, 2, 1, 1, 1, 1, 2, -1, 1, -3, 3, -3, 2, 2]) == [1, 2, 1, 1, 1, 1, 2, 1, 3, 2, 2]
    @test get_positive([-3, -1, 0, -1, 0, 5]) == [5]
    @test get_positive([1, 1, 1, 1, 1, 6, 1, 2, 2, 2, 1, 2]) == [1, 1, 1, 1, 1, 6, 1, 2, 2, 2, 1, 2]
    @test get_positive([-2.651030586877352, -4.0, 2.5, 5.0, -2.651030586877352, -8.0, 8.193677988449515, 7.7, 9.9, -10.5, 9.9, -2.2]) == [2.5, 5.0, 8.193677988449515, 7.7, 9.9, 9.9]
    @test get_positive([1, 2, -4, -5, 0, 7, -9, 10, 0, 98, 3, 1, 0, -4]) == [1, 2, 7, 10, 98, 3, 1]
    @test get_positive([1, 2, -4, -5, 0, 7, -9, -2, 10, 0, 98, 3, 1, 0, -4, 3]) == [1, 2, 7, 10, 98, 3, 1, 3]
    @test get_positive([0, -1, 0, 5, -1]) == [5]
    @test get_positive([9.9, -2.6958053769612267, 25.12472520208241, 0.5, -2.6958053769612267]) == [9.9, 25.12472520208241, 0.5]
    @test get_positive(Union{Float64, Int64}[-6, 0, -1.25, -1.5, -0.75, -2.25, -1, -2, -3, -4, -5, -6]) == Union{Float64, Int64}[]
    @test get_positive([9.9, 25.221353337136023, 33.195768044846155, -2.25, -2.25, -2.25, 9.9]) == [9.9, 25.221353337136023, 33.195768044846155, 9.9]
    @test get_positive([1, 2, -4, 0, 7, -9, 10, 0, 2, 1]) == [1, 2, 7, 10, 2, 1]
    @test get_positive([0, -1, -1, 0, 0]) == Int64[]
    @test get_positive([1, 1, 1, 1, 2, 2, 1, 2, 2, 2]) == [1, 1, 1, 1, 2, 2, 1, 2, 2, 2]
    @test get_positive([1, 1, 1, -2, 1, 2, -1, 1, -3, -3, 2, 1, 2, 1]) == [1, 1, 1, 1, 2, 1, 2, 1, 2, 1]
    @test get_positive([0, -3, -4, -5, -3, -4]) == Int64[]
    @test get_positive([98, 0, 99, -1, 6, -9, -6]) == [98, 99, 6]
    @test get_positive([2, 3, -2, -1, -5, 4]) == [2, 3, 4]
    @test get_positive([1, 1, 1, 1, 99, 2, 2, 2, -3, 1, 2]) == [1, 1, 1, 1, 99, 2, 2, 2, 1, 2]
    @test get_positive([0, -1, 0, 5, -1, 0]) == [5]
    @test get_positive([9.9, -2.6958053769612267, 33.195768044846155, -1.9199320509072952]) == [9.9, 33.195768044846155]
    @test get_positive([9.9, 25.221353337136023, 24.93175152910768, -3.1836537136945844, -3.1836537136945844, -0.42322814636615796]) == [9.9, 25.221353337136023, 24.93175152910768]
    @test get_positive([9.9, 25.221353337136023, 24.93175152910768, -0.42322814636615796, 33.195768044846155, -2.6307909667819085, -2.25]) == [9.9, 25.221353337136023, 24.93175152910768, 33.195768044846155]
    @test get_positive([2, -4, -5, 0, 7, -9, 10, 0, 1, -5, 1, 7]) == [2, 7, 10, 1, 1, 7]
    @test get_positive([0, -1, -3, 9]) == [9]
    @test get_positive([0, -2, 0, -3, -4, -5]) == Int64[]
    @test get_positive([1, 2, -4, -5, 6, 7, -9, 10, 2, 1, 2, 2]) == [1, 2, 6, 7, 10, 2, 1, 2, 2]
    @test get_positive([-5, -4, -3, -2, -1, -1]) == Int64[]
    @test get_positive([5, 3, -2, -1, -5, 4]) == [5, 3, 4]
    @test get_positive([1, 1, 1, 1, 99, 0, 2, 2, 2, -3, -5, 2, 1, 2, 1]) == [1, 1, 1, 1, 99, 2, 2, 2, 2, 1, 2, 1]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -2.25, -1, -6, -4, -3, -4, -5, -6, -3, -4]) == Union{Float64, Int64}[]
    @test get_positive([0.5, 0.0, 24.93175152910768, -4.0, 2.5, 5.0, -2.2, -2.651030586877352, -8.0, 7.7, 9.9, -10.5, 9.9, -8.0]) == [0.5, 24.93175152910768, 2.5, 5.0, 7.7, 9.9, 9.9]
    @test get_positive([-6]) == Int64[]
    @test get_positive([-3, -8, -5, -5, -8]) == Int64[]
    @test get_positive([98, 0, 99, -1, 6, 4, -9, -6]) == [98, 99, 6, 4]
    @test get_positive([-5, -9, -2, -5]) == Int64[]
    @test get_positive([1, 1, 1, 1, 2, 2, 2, 2, 2]) == [1, 1, 1, 1, 2, 2, 2, 2, 2]
    @test get_positive([2, 3, -1, -5, 4]) == [2, 3, 4]
    @test get_positive([1, 1, 6, 1, 1, 2, 1, 2, 2, 2]) == [1, 1, 6, 1, 1, 2, 1, 2, 2, 2]
    @test get_positive([3, 0, -1, -2, -9, -3, 4, -6, -4, 7, 9]) == [3, 4, 7, 9]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]) == [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
    @test get_positive([3, -1, -2, 2]) == [3, 2]
    @test get_positive([5, 3, -6, -2, -1, -5, 4, -1]) == [5, 3, 4]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -0.75, -2.25, -1, -3, -4, -5, -6]) == Union{Float64, Int64}[]
    @test get_positive([2, -1, -1, -2]) == [2]
    @test get_positive([-2.25, -2.25, 33.195768044846155]) == [33.195768044846155]
    @test get_positive([-1, -3]) == Int64[]
    @test get_positive([-2, 99, -1, -2, -2]) == [99]
    @test get_positive([6, -1, -3]) == [6]
    @test get_positive([-1, 0, -1, -1]) == Int64[]
    @test get_positive([7, 99, 3, -2, -1, -5, -5]) == [7, 99, 3]
    @test get_positive([-2, -1, -2]) == Int64[]
    @test get_positive([-1.3426789806479305, 32.97170491287429, -2.25]) == [32.97170491287429]
    @test get_positive([3, 0, -1, -2, -9, -3, 4, -6, -4, 7, 9, 4]) == [3, 4, 7, 9, 4]
    @test get_positive([3, -1, -2, -2, 2]) == [3, 2]
    @test get_positive([1, 1, 1, 1, 1, 6, 1, 2, 2, 2, 2, 2, 1, 2]) == [1, 1, 1, 1, 1, 6, 1, 2, 2, 2, 2, 2, 1, 2]
    @test get_positive([-5, -6, 99, -1, 99]) == [99, 99]
    @test get_positive([-6, 98, 0, 99, -2, 6, -9, -6]) == [98, 99, 6]
    @test get_positive([1, 1, 6, 1, 1, 2, 1, 2, 2, 2, 2]) == [1, 1, 6, 1, 1, 2, 1, 2, 2, 2, 2]
    @test get_positive([1, 6, 1, 1, 2, 1, 2, 2, 2, 2]) == [1, 6, 1, 1, 2, 1, 2, 2, 2, 2]
    @test get_positive([9.9, 24.93175152910768, -3.1836537136945844, -3.1836537136945844, -0.42322814636615796]) == [9.9, 24.93175152910768]
    @test get_positive([1, -1, 0, -1]) == [1]
    @test get_positive([-5, -5, -9, -4, -9, -2, -1, -5, -5]) == Int64[]
    @test get_positive([9.9, 25.12472520208241, -2.6958053769612267, 33.195768044846155, -1.9199320509072952]) == [9.9, 25.12472520208241, 33.195768044846155]
    @test get_positive([0, -8, -3, -4, -5, -3, -4]) == Int64[]
    @test get_positive([1, 2, -4, -5, 0, -9, 10, 0, 98, 3, 1, 0, -4]) == [1, 2, 10, 98, 3, 1]
    @test get_positive([-5, -5, -9, -9, -2, -1, -5, -5, -9]) == Int64[]
    @test get_positive([0, 1, 2, -4, -5, 0, 7, -9, -2, 10, 0, 98, 3, 1, 0, -4, 3]) == [1, 2, 7, 10, 98, 3, 1, 3]
    @test get_positive([21.28666897792971, 9.9, 25.12472520208241, 33.195768044846155, -2.25, 33.195768044846155, 25.12472520208241]) == [21.28666897792971, 9.9, 25.12472520208241, 33.195768044846155, 33.195768044846155, 25.12472520208241]
    @test get_positive([2, -1, -1]) == [2]
    @test get_positive([0, -3, -4, -5, -3, -4, -3]) == Int64[]
    @test get_positive([0.5, 0.0, -4.0, 2.5, 5.0, -2.2, -8.0, 7.7, 9.9, -10.5, -10.338878645170468, -8.0]) == [0.5, 2.5, 5.0, 7.7, 9.9]
    @test get_positive([1, -1, 1, 1, 1, 1, 2, -1, 1, -3, -3, 2, 2]) == [1, 1, 1, 1, 1, 2, 1, 2, 2]
    @test get_positive([1, 1, 1, 1, 1, 1, -3, 2, 2, 2, 1, 2]) == [1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2]
    @test get_positive([9.9, 25.221353337136023, 33.195768044846155, -2.25, 33.195768044846155]) == [9.9, 25.221353337136023, 33.195768044846155, 33.195768044846155]
    @test get_positive([0.5, 2.5, 5.0, -2.2, -2.651030586877352, -8.0, 7.7, 9.9, -10.5, 9.9]) == [0.5, 2.5, 5.0, 7.7, 9.9, 9.9]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -2.25, -1, -6, -4, -4, -5, 4, -3]) == Union{Float64, Int64}[4]
    @test get_positive([3, -1, 2, -2, 2]) == [3, 2, 2]
    @test get_positive([0, -1, 10]) == [10]
    @test get_positive(Union{Float64, Int64}[-6, 0, -1.25, -1.5, -0.75, -1, -2, -3, -4, -5, -6]) == Union{Float64, Int64}[]
    @test get_positive([-5, 3, -4, -4, -1, -5, 3]) == [3, 3]
    @test get_positive([-1, -4, 5, 0, 6, 7, -9, 9]) == [5, 6, 7, 9]
    @test get_positive(Union{Float64, Int64}[-1, -1.25, -1.5, -2.25, -1, -6, -4, -3, -4, -5, -7, -3]) == Union{Float64, Int64}[]
    @test get_positive([-2.651030586877352, -4.0, 2.5, 5.0, -2.651030586877352, -8.0, 8.193677988449515, 7.7, 9.9, -10.5, -0.42322814636615796, -2.2]) == [2.5, 5.0, 8.193677988449515, 7.7, 9.9]
    @test get_positive([-5, -9, -4, -2, -1, -2, -5]) == Int64[]
    @test get_positive([7, 99, 3, -2, -5, -1, -5, -5]) == [7, 99, 3]
    @test get_positive([-4, -3, -2, -1]) == Int64[]
    @test get_positive([24.93175152910768, -2.25]) == [24.93175152910768]
    @test get_positive([-9, -9, -4, -2, -1, -5]) == Int64[]
    @test get_positive([-2, 2, -2]) == [2]
    @test get_positive([1, 2, 1, 1, 2, 1, 2, -1, 1, -3, 3, -3, 2, 2]) == [1, 2, 1, 1, 2, 1, 2, 1, 3, 2, 2]
    @test get_positive([1, 1, 1, 1, 1, 1, -3, 2, 2, 2, 2]) == [1, 1, 1, 1, 1, 1, 2, 2, 2, 2]
    @test get_positive([-2.651030586877352, 37.590357356685196, 33.195768044846155, -2.25]) == [37.590357356685196, 33.195768044846155]
    @test get_positive([0, -9, -1, 7, -3, -3, -4, -2]) == [7]
    @test get_positive([-4, 0, -1, -2, -3, -4, -5]) == Int64[]
    @test get_positive([-5, -6, 99, -2, 99]) == [99, 99]
    @test get_positive([-2]) == Int64[]
    @test get_positive([0, -2, -3, 2, -5, -3, -2]) == [2]
    @test get_positive([9.9, -2.4785868920126473, 9.9]) == [9.9, 9.9]
    @test get_positive([9.9, 25.221353337136023, 24.93175152910768, 12.829932365585156, 33.195768044846155, -3.1836537136945844, -1.5]) == [9.9, 25.221353337136023, 24.93175152910768, 12.829932365585156, 33.195768044846155]
    @test get_positive([98, -2, 99]) == [98, 99]
    @test get_positive([-5, -9, -4, -2, 0, -5, -5]) == Int64[]
    @test get_positive([0, -1, 7, -2, -3, -4, -7, -2, 9]) == [7, 9]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 1, -3, -3, 2, 2, 2]) == [1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -0.75, -2.25, -1, -3, -4, -6]) == Union{Float64, Int64}[]
    @test get_positive([6, -1]) == [6]
    @test get_positive([2, -4, 0, 7, -9, 10, 0]) == [2, 7, 10]
    @test get_positive([-5, 3, -2, 4, -5]) == [3, 4]
    @test get_positive([5.803598881698951, 25.221353337136023, 33.195768044846155, -2.25, -2.25, -2.25]) == [5.803598881698951, 25.221353337136023, 33.195768044846155]
    @test get_positive([-1, -2, -3, 6, -4, 5, 0, 6, 7, -9, 10, -1]) == [6, 5, 6, 7, 10]
    @test get_positive([-5, -9, -2, -5, -5]) == Int64[]
    @test get_positive([-5, -9, -4, -2, -1, -2, -5, -1]) == Int64[]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2]) == [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2]
    @test get_positive([-5, -9, -2, -10, -5]) == Int64[]
    @test get_positive([0, -6, -1, -1, 0, 0]) == Int64[]
    @test get_positive([98, 0, 99, -9, 6, -9, -5]) == [98, 99, 6]
    @test get_positive([9.9, -2.25, 9.9]) == [9.9, 9.9]
    @test get_positive(Union{Float64, Int64}[0, -1.25, -1.5, -2.25, -1, -6, -4, -4, -5, 4, -3, -5, -4, -5]) == Union{Float64, Int64}[4]
    @test get_positive([0.5, 0.0, -1.6451572106484336, -4.0, 2.5, 5.0, -2.2, -8.0, 7.7, 9.9, -10.5, 9.9, -13.662203687087855]) == [0.5, 2.5, 5.0, 7.7, 9.9, 9.9]
    @test get_positive([9.9, 25.221353337136023, 24.93175152910768, 33.195768044846155, -2.25, -10.338878645170468, 33.195768044846155]) == [9.9, 25.221353337136023, 24.93175152910768, 33.195768044846155, 33.195768044846155]
    @test get_positive([3, 0, -1, -2, -9, -3, 4, -6, -4, 7, 9, 0]) == [3, 4, 7, 9]
    @test get_positive([9.9, 25.221353337136023, 33.195768044846155, -2.25, -2.25, -2.25, 25.221353337136023]) == [9.9, 25.221353337136023, 33.195768044846155, 25.221353337136023]
    @test get_positive([-5, -5, -9, -4, -6, -2, -1, -5]) == Int64[]
    @test get_positive([0.5, 0.0, 10.538283343362641, 24.93175152910768, -4.0, 2.5, 5.0, -2.2, -2.651030586877352, -8.0, 7.7, 9.9, -10.5, 9.9, -8.0, 7.7]) == [0.5, 10.538283343362641, 24.93175152910768, 2.5, 5.0, 7.7, 9.9, 9.9, 7.7]
    @test get_positive([0, -1, -2, -3, -4, 98, 9]) == [98, 9]
    @test get_positive([-9, -4, -2, 98, -1, -5, -5, -9]) == [98]
    @test get_positive([-2, 98, -2]) == [98]
    @test get_positive([-1.492221190549314, 0.0, -1.25, -1.5, -0.75, -2.25, -1.0, 3.0, -4.0, -3.0, 10.0, -5.0, -6.0]) == [3.0, 10.0]
    @test get_positive([-2.651030586877352, 9.9, 25.221353337136023, 24.93175152910768, -0.42322814636615796, 33.195768044846155, -2.6307909667819085, -2.25]) == [9.9, 25.221353337136023, 24.93175152910768, 33.195768044846155]
    @test get_positive([-9, -4, 4, -2, 98, -1, -5, -5, -9]) == [4, 98]
    @test get_positive([1, 2, -10, -4, 6, -5, 0, 7, -9, 10, 0, 1, -5]) == [1, 2, 6, 7, 10, 1]
    @test get_positive([1, 0, -1, 0, 0]) == [1]
    @test get_positive([0.5, 0.0, -4.0, 2.5, 5.0, -2.2, -8.0, 7.7, 9.9, 11.253319035677885, -10.5, 10.800982930222133]) == [0.5, 2.5, 5.0, 7.7, 9.9, 11.253319035677885, 10.800982930222133]
    @test get_positive(Union{Float64, Int64}[0, -1.5, -2.25, -1, 3, -2, -3, 10, -5, -6]) == Union{Float64, Int64}[3, 10]
    @test get_positive([0.5, 0.0, -4.0, 2.5, 5.0, -2.2, -8.0, 7.7, 9.9, -10.5, -2.2, 0.5]) == [0.5, 2.5, 5.0, 7.7, 9.9, 0.5]
    @test get_positive([20.235836471463873, -89.04346588476734, -2.651030586877352, 33.195768044846155, 32.97170491287429, -2.25]) == [20.235836471463873, 33.195768044846155, 32.97170491287429]
    @test get_positive([9.9, 25.221353337136023, 24.93175152910768, -0.42322814636615796, 33.195768044846155, -0.5037419809615695, -2.6307909667819085, -2.25]) == [9.9, 25.221353337136023, 24.93175152910768, 33.195768044846155]
    @test get_positive([6, -1, -3, -3]) == [6]
    @test get_positive([1, 1, -6, 1, 1, 2, 2, 2, 2, 2, 2, 2]) == [1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2]
    @test get_positive([7, 98, 99]) == [7, 98, 99]
    @test get_positive([1, 1, 1, -2, 1, 2, -1, 1, -3, -3, 2, 2, 2, 1]) == [1, 1, 1, 1, 2, 1, 2, 2, 2, 1]
    @test get_positive([5.803598881698951, 25.221353337136023, -2.25, 8.193677988449515, -2.25]) == [5.803598881698951, 25.221353337136023, 8.193677988449515]
    @test get_positive([1, 2, 2, -3, 0, 7, -9, 10, 0, 1]) == [1, 2, 2, 7, 10, 1]
    @test get_positive([-4, 0, -1, -2, -1, -3, -4, -5]) == Int64[]
    @test get_positive([-3, -2, -1]) == Int64[]
    @test get_positive([1, 1, 6, 1, 2, 1, 2, 2, 2]) == [1, 1, 6, 1, 2, 1, 2, 2, 2]
    @test get_positive([-5, -9, -4, -2, -5, -4]) == Int64[]
    @test get_positive([1, 0, 1, 1, 1, 2, 2, 1, -3, -3, 2, 2, 2]) == [1, 1, 1, 1, 2, 2, 1, 2, 2, 2]
    @test get_positive([-5, 3, -4, -1, -5, 3]) == [3, 3]
    @test get_positive([0, -9, -1, 7, -3, -3, -4, 10]) == [7, 10]
    @test get_positive([1, -1, -1]) == [1]
    @test get_positive([0, -1, -1, 7, -2, -3, -4, -7, -2, 9]) == [7, 9]
    @test get_positive([2, -2, -1, -1]) == [2]
    @test get_positive([-5, -9, 6, -5, -5]) == [6]
    @test get_positive([0, 0, -1, -1, -1]) == Int64[]
    @test get_positive([2, 4, -1]) == [2, 4]
    @test get_positive([2, -1, -1, -1, -1]) == [2]
    @test get_positive([1, 1, 1, 1, 1, 6, 1, 2, 2, 2, 4, 1, 2]) == [1, 1, 1, 1, 1, 6, 1, 2, 2, 2, 4, 1, 2]
    @test get_positive([0, -2, -3, 2, -5, 3, -3, -2, 2]) == [2, 3, 2]
    @test get_positive([-2, 7]) == [7]
    @test get_positive([1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2]) == [1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2]
    @test get_positive([-1, -1, -1, -1]) == Int64[]
    @test get_positive([3, 0, -1, -2, -9, -3, 4, -6, -4, 7, 9, 2, 4]) == [3, 4, 7, 9, 2, 4]
    @test get_positive(Bool[0, 1, 0, 1, 0, 1, 1]) == Bool[1, 1, 1, 1]
    @test get_positive([3, 0, -1, -2, -9, -3, 4, -4, 9, 0]) == [3, 4, 9]
    @test get_positive([1, 3, 6, 1, 1, 2, 1, 2, 2, 2, 2, 3]) == [1, 3, 6, 1, 1, 2, 1, 2, 2, 2, 2, 3]
    @test get_positive([0, -1, 98, -1, 5, -1]) == [98, 5]
    @test get_positive([-5, 3, -1, -5, 4]) == [3, 4]
    @test get_positive([-3]) == Int64[]
    @test get_positive([5.803598881698951, 25.221353337136023, 33.195768044846155, -2.25, -2.25]) == [5.803598881698951, 25.221353337136023, 33.195768044846155]
    @test get_positive([1, 2, 1, 1, 1, 1, 2, -1, 1, -3, 3, -3, 2, 2, 2]) == [1, 2, 1, 1, 1, 1, 2, 1, 3, 2, 2, 2]
    @test get_positive([9.9, 33.195768044846155, 10.538283343362641, -2.25]) == [9.9, 33.195768044846155, 10.538283343362641]
    @test get_positive([-2, 4, 5]) == [4, 5]
    @test get_positive([-1, -2, -4, 5, 0, 6, 7, -9, 9, -9]) == [5, 6, 7, 9]
    @test get_positive([-89.04346588476734, -2.6958053769612267]) == Float64[]
    @test get_positive([-1, -2, -4, 5, 0, 6, 7, -9, 9, -4]) == [5, 6, 7, 9]
    @test get_positive(Union{Float64, Int64}[-6, 0, -1.25, -1.5, -0.75, -1, -3, -4, -5, -6]) == Union{Float64, Int64}[]
    @test get_positive([0, -1, -2, 0, -9, -3, -6, -4, 9]) == [9]
    @test get_positive([9.9, -2.8683444012540678, 25.12472520208241, 9.9, 12.997289062694836]) == [9.9, 25.12472520208241, 9.9, 12.997289062694836]
    @test get_positive([1, 1, 1, 99, 1, 1, 6, 1, 2, 2, 2, 1, 2]) == [1, 1, 1, 99, 1, 1, 6, 1, 2, 2, 2, 1, 2]
    @test get_positive([0, -3, -3]) == Int64[]
    @test get_positive([0, -1, -6, -3, -4, 9, -3]) == [9]
    @test get_positive([1, 1, -6, 1, 1, 2, 2, 2, 10, 2, 2]) == [1, 1, 1, 1, 2, 2, 2, 10, 2, 2]
    @test get_positive([0, -1, -1, -1, 99, 5, -1]) == [99, 5]
    @test get_positive([-1, 1, 4, -3, -4, 5, 0, 6, 7, 4, 10]) == [1, 4, 5, 6, 7, 4, 10]
    @test get_positive([9.9, -2.8683444012540678, 25.12472520208241, 9.9]) == [9.9, 25.12472520208241, 9.9]
    @test get_positive([7, 97]) == [7, 97]
    @test get_positive([2, -1]) == [2]
    @test get_positive([-5, 4, -2, -1, -5]) == [4]
    @test get_positive([-5, -2, -10, 4, -4]) == [4]
    @test get_positive([-10.5, 25.12472520208241, -1.5, -2.25]) == [25.12472520208241]
    @test get_positive([9.9, 25.221353337136023, 25.376288083829433, -3.1836537136945844, -1.5]) == [9.9, 25.221353337136023, 25.376288083829433]
    @test get_positive([21.28666897792971, 25.221353337136023, 24.93175152910768, 33.195768044846155, -3.1836537136945844, -1.5]) == [21.28666897792971, 25.221353337136023, 24.93175152910768, 33.195768044846155]
    @test get_positive([10.791699079028088, 25.221353337136023, 25.376288083829433, -3.1836537136945844, -2.6958053769612267, -1.5]) == [10.791699079028088, 25.221353337136023, 25.376288083829433]
    @test get_positive([0, -6, -1, -1, 0, 0, 0]) == Int64[]
    @test get_positive([-2.25, -2.25, 33.195768044846155, -2.25]) == [33.195768044846155]
    @test get_positive([-1, -2, -4, 5, 7, 0, 6, 7, -9, 9, -4]) == [5, 7, 6, 7, 9]
    @test get_positive([0.5, -1.0, 24.93175152910768, -4.0, 2.5, 5.0, -2.2, -2.651030586877352, -8.0, 7.7, 9.9, -10.5, -8.0, 9.9]) == [0.5, 24.93175152910768, 2.5, 5.0, 7.7, 9.9, 9.9]
    @test get_positive([0, -2, 0, -3, -4, -5, 0]) == Int64[]
    @test get_positive([1, 2, -4, -5, 0, 7, -9, -6, 0, 2, 1]) == [1, 2, 7, 2, 1]
    @test get_positive([-5, 3, -2, 97, -1, -5, 4]) == [3, 97, 4]
    @test get_positive([0, -2, -3, 2, -5, 3, -3, -2, 2, 0]) == [2, 3, 2]
    @test get_positive([0, -1, -1, 0, 0, 0]) == Int64[]
    @test get_positive([-5, -5, -10, -9, -4, -6, -2, -1, -5]) == Int64[]
    @test get_positive([2, -4, -5, 0, 7, -9, 10, 0, 7]) == [2, 7, 10, 7]
    @test get_positive(Union{Float64, Int64}[-6, 0, -1.25, -2, -1.5, -0.75, -2.25, -1, -2, -3, -4, -5, -6]) == Union{Float64, Int64}[]
    @test get_positive([-2, 1, 2, -10, -4, 6, -5, 0, 7, -9, 10, 0, 1, -5]) == [1, 2, 6, 7, 10, 1]
    @test get_positive([6, -7, -1, -3, -4, -3]) == [6]
    @test get_positive([1, 2, -4, -5, 6, 7, -9, 10, 2, 1, 2, 10]) == [1, 2, 6, 7, 10, 2, 1, 2, 10]
    @test get_positive([-9, -4, 7, 4, -2, 98, -1, -8, -5, -5, -9, -5]) == [7, 4, 98]
    @test get_positive([1, 2, 1, 1, 1, 1, 2, -1, -3, 3, -3, 2, 2, 2]) == [1, 2, 1, 1, 1, 1, 2, 3, 2, 2, 2]
    @test get_positive([1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2]) == [1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2]
    @test get_positive([-5, -6, -4, -2, -1, -2, -5]) == Int64[]
    @test get_positive([-5, -9, -4, -2, 1, -5, -5]) == [1]
    @test get_positive([1, 1, -6, 1, 2, 2, 2, 2, 2, 2]) == [1, 1, 1, 2, 2, 2, 2, 2, 2]
    @test get_positive([1, 3, 1, 1, 2, 2, 2, 2]) == [1, 3, 1, 1, 2, 2, 2, 2]
    @test get_positive([-3, -8, -5, 97, -8]) == [97]
    @test get_positive(Union{Float64, Int64}[0, 10.538283343362641, -1.25, -1.5, -0.75, -2.25, -1, -2, 2, -4, -4, -5, -6]) == Union{Float64, Int64}[10.538283343362641, 2]
    @test get_positive([1, -9, 1, 1, 1, 2, 2, 1, -3, -3, 2, 2, 2]) == [1, 1, 1, 1, 2, 2, 1, 2, 2, 2]
    @test get_positive([1, 1, 1, 1, -7, 1, 1, -3, 2, 2, 2, 2]) == [1, 1, 1, 1, 1, 1, 2, 2, 2, 2]
    @test get_positive([0, -9, -1, 7, -3, -3, -4, 10, -4]) == [7, 10]
    @test get_positive([3, -2, 2]) == [3, 2]
    @test get_positive([-2.6958053769612267, 33.195768044846155, -2.25]) == [33.195768044846155]
    @test get_positive([1, 2, -10, -4, 6, -5, 0, 7, -9, 10, 0, 1, -5, 1]) == [1, 2, 6, 7, 10, 1, 1]
    @test get_positive([9.9, 25.221353337136023, 33.195768044846155, -2.25, 25.12472520208241, -2.25]) == [9.9, 25.221353337136023, 33.195768044846155, 25.12472520208241]
    @test get_positive([-3, -1]) == Int64[]
    @test get_positive([0, -8, -3, -4, -10, -3, -4]) == Int64[]
    @test get_positive([1, 1, 1, 1, 1, 2, 2, 1, -3, -3, 2, 2, 1]) == [1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1]
    @test get_positive([0.5, 2.5, 5.0, -2.2, -2.651030586877352, -8.0, 9.9, -10.5, 9.9]) == [0.5, 2.5, 5.0, 9.9, 9.9]
    @test get_positive([9.9, 25.12472520208241, 25.12472520208241, 29.75618118087544, 33.195768044846155, -2.25, 33.195768044846155, 25.12472520208241, -2.25]) == [9.9, 25.12472520208241, 25.12472520208241, 29.75618118087544, 33.195768044846155, 33.195768044846155, 25.12472520208241]
    @test get_positive(Union{Float64, Int64}[-6, 0, 0.5, -1.5, -0.75, -1, -3, -4, -5, -6]) == Union{Float64, Int64}[0.5]
    @test get_positive([-5, -9, -2, -10, -4, -9]) == Int64[]
    @test get_positive([7, -1, -2]) == [7]
    @test get_positive([0, -1, -5, -3, -4, 9, -5, -5, 0]) == [9]
    @test get_positive([-5, -4, -3, 0, -5, -1, -1]) == Int64[]
    @test get_positive([1, 1, 1, 1, 99, 1, 2, 2, 1, -3, -3, 2, 2, 2, 2]) == [1, 1, 1, 1, 99, 1, 2, 2, 1, 2, 2, 2, 2]
    @test get_positive([0, -1, -2, -1, -9, -3, -6, -4, -4, 0]) == Int64[]
    @test get_positive([6, 99, 3, -2, -5, -5]) == [6, 99, 3]
    @test get_positive([1, 1, 1, 1, 2, -7, 1, 2, 6, 5, -1, 1, -3, -3, 2, 2]) == [1, 1, 1, 1, 2, 1, 2, 6, 5, 1, 2, 2]
    @test get_positive([1, 1, 1, 1, 1, 2, 1, -3, -3, 2, 2, 1]) == [1, 1, 1, 1, 1, 2, 1, 2, 2, 1]
    @test get_positive([21.28666897792971, 9.9, 21.859816644520016, 25.12472520208241, 33.195768044846155, -2.25, 33.195768044846155, 25.12472520208241, 33.195768044846155]) == [21.28666897792971, 9.9, 21.859816644520016, 25.12472520208241, 33.195768044846155, 33.195768044846155, 25.12472520208241, 33.195768044846155]
    @test get_positive([24.93175152910768, -2.25, 24.93175152910768, -2.25]) == [24.93175152910768, 24.93175152910768]
    @test get_positive([7, -7, 99, 3, -2, -1, -5, -5]) == [7, 99, 3]
    @test get_positive([0.5, -1.6451572106484336, -4.0, 2.5, -8.0, 7.7, 9.9, -10.5, 9.9, -13.662203687087855]) == [0.5, 2.5, 7.7, 9.9, 9.9]
    @test get_positive([0.5, -1.0, 24.93175152910768, -4.0, 2.5, 5.0, -2.651030586877352, -8.0, 7.7, 9.9, -10.5, -8.0, 9.9]) == [0.5, 24.93175152910768, 2.5, 5.0, 7.7, 9.9, 9.9]
    @test get_positive([-1, -2, -4, 5, 7, 0, 6, 7, -9, -4]) == [5, 7, 6, 7]
    @test get_positive([1, 2, -4, -5, 6, 7, -9, 10]) == [1, 2, 6, 7, 10]
    @test get_positive([9.9, 25.221353337136023, 24.93175152910768, -0.42322814636615796, 33.195768044846155, -0.5037419809615695, -2.25]) == [9.9, 25.221353337136023, 24.93175152910768, 33.195768044846155]
    @test get_positive([-1, -10]) == Int64[]
    @test get_positive([1, 3, 6, 1, 1, 2, 1, 2, 2, 2, 2, 3, 1]) == [1, 3, 6, 1, 1, 2, 1, 2, 2, 2, 2, 3, 1]
    @test get_positive([1, 1, 1, 1, 1, 98, 1, -3, 2, 2, 2]) == [1, 1, 1, 1, 1, 98, 1, 2, 2, 2]
    @test get_positive([98, -1]) == [98]
    @test get_positive([-2.6958053769612267, -3.1836537136945844, 33.195768044846155, -2.25]) == [33.195768044846155]
    @test get_positive([0, -1, -1, 7, -2, -3, -4, -7, -2, 9, 7]) == [7, 9, 7]
    @test get_positive([7.878953248636265, 7.1018462924316985, 25.12472520208241, 33.195768044846155, -2.25, 33.195768044846155, 33.195768044846155, 33.195768044846155]) == [7.878953248636265, 7.1018462924316985, 25.12472520208241, 33.195768044846155, 33.195768044846155, 33.195768044846155, 33.195768044846155]
    @test get_positive([1, 1, 1, 1, 2, 2, 2, 2, 2, 2]) == [1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
    @test get_positive([98, -2, 99, 99]) == [98, 99, 99]
    @test get_positive([-1.3426789806479305, 32.97170491287429, -2.25, 32.97170491287429]) == [32.97170491287429, 32.97170491287429]
    @test get_positive([2, 0, -1, -2, -9, -3, 4, -6, -4, 7, 9]) == [2, 4, 7, 9]
    @test get_positive([-1, -2, -3, -4, 5, -1, 6, 7, 10]) == [5, 6, 7, 10]
    @test get_positive([1, 2, -4, -5, 0, 7, -10, -6, 0, 2, 1]) == [1, 2, 7, 2, 1]
    @test get_positive([9.9, 33.195768044846155, 5.803598881698951]) == [9.9, 33.195768044846155, 5.803598881698951]
    @test get_positive([-3, 5, -2, -5]) == [5]
    @test get_positive([7, 98, 99, 99]) == [7, 98, 99, 99]
    @test get_positive([7, 1, 99]) == [7, 1, 99]
    @test get_positive([-5, -9, -4, -2]) == Int64[]
    @test get_positive([1, 1, 6, 1, 1, 2, 1, 2, 2, 2, 0, 2]) == [1, 1, 6, 1, 1, 2, 1, 2, 2, 2, 2]
    @test get_positive([0.5, 0.0, -4.0, 2.5, 5.0, -2.2, -8.0, 7.7, -10.5, -10.338878645170468, -8.0]) == [0.5, 2.5, 5.0, 7.7]
    @test get_positive([0.5, 0.0, -4.0, -13.662203687087855, 2.5, 5.0, -1.2888053553154275, -8.0, 7.7, 9.9, -10.5, 9.9, -13.662203687087855, 9.9]) == [0.5, 2.5, 5.0, 7.7, 9.9, 9.9, 9.9]
    @test get_positive([0, -1, -1, -1, 5, -9]) == [5]
    @test get_positive([-5, -2, -10, 4, -4, -10]) == [4]
    @test get_positive([0.5, -1.6451572106484336, -4.0, 2.5, 5.0, 7.7, 9.9, -10.5, 9.9, -13.662203687087855]) == [0.5, 2.5, 5.0, 7.7, 9.9, 9.9]
end
