Here is a Julia function that implements the specified behavior:
```julia
function search(numbers::Vector)::Int
    # Create a dictionary to store the frequency of each number
    freq = Dict{Int, Int}()
    for num in numbers
        freq[num] = get(freq, num, 0) + 1
    end

    # Find the greatest integer that meets the condition
    result = -1
    for (num, count) in freq
        if count >= num && num > result
            result = num
        end
    end

    return result
end
```
Here's an explanation of the code:

1. We create a dictionary `freq` to store the frequency of each number in the input vector.
2. We iterate over the input vector and update the frequency of each number in the dictionary.
3. We iterate over the dictionary and check if the frequency of each number is greater than or equal to the number itself. If it is, and the number is greater than the current result, we update the result.
4. Finally, we return the result, which is the greatest integer that meets the condition, or -1 if no such integer exists.

You can test this function using the examples provided in the docstring:
```julia
julia> search([4, 1, 2, 2, 3, 1])
2

julia> search([1, 2, 2, 3, 3, 3, 4, 4, 4])
3

julia> search([5, 5, 4, 4, 4])
-1
```