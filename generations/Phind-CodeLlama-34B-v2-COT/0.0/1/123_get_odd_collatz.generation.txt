

# Outline

1. Initialize an empty vector of BigInt to store the odd numbers in the Collatz sequence.
2. Check if the input number is even or odd.
3. If the input number is even, add it to the vector and then divide it by 2.
4. If the input number is odd, add it to the vector and then multiply it by 3 and add 1.
5. Repeat steps 2-4 until the input number is 1.
6. Sort the vector in increasing order.
7. Return the sorted vector.

# Code

```julia
function get_odd_collatz(n::Int)::Vector{BigInt}
    odd_numbers = BigInt[]
    while n != 1
        if n % 2 == 0
            push!(odd_numbers, n)
            n = n รท 2
        else
            push!(odd_numbers, n)
            n = 3n + 1
        end
    end
    push!(odd_numbers, n)  # Add 1 to the list
    sort!(odd_numbers)  # Sort the list in increasing order
    return odd_numbers
end
```