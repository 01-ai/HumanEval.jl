### Step-by-Step Outline:

1. Define the function `exchange` that takes two vectors of integers, `lst1` and `lst2`, as input.
2. Check if `lst1` already contains only even numbers. If so, return "YES".
3. Count the number of odd numbers in `lst1` and the number of even numbers in `lst2`.
4. If the number of odd numbers in `lst1` is less than or equal to the number of even numbers in `lst2`, then it is possible to exchange the odd numbers in `lst1` with the same number of even numbers from `lst2`. In this case, return "YES".
5. If the number of odd numbers in `lst1` is greater than the number of even numbers in `lst2`, then it is not possible to make all elements of `lst1` even by exchanging. In this case, return "NO".

### Julia Code:

```julia
function exchange(lst1::Vector{Int}, lst2::Vector{Int})::String
    # Step 2: Check if lst1 already contains only even numbers
    if all(isodd, lst1) == false
        return "YES"
    end

    # Step 3: Count the number of odd numbers in lst1 and even numbers in lst2
    odd_count_lst1 = count(isodd, lst1)
    even_count_lst2 = count(isodd, lst2)

    # Step 4: Check if it is possible to exchange the numbers
    if odd_count_lst1 <= even_count_lst2
        return "YES"
    else
        # Step 5: If not possible, return "NO"
        return "NO"
    end
end
```

Now, let's implement the function in Julia.