```julia
function even_odd_count(num::Int)::Tuple{Int, Int}
    num = abs(num)  # Consider the absolute value to handle negative numbers
    even_count = 0
    odd_count = 0
    
    while num > 0
        digit = num % 10  # Get the last digit
        if digit % 2 == 0
            even_count += 1
        else
            odd_count += 1
        end
        num = num รท 10  # Remove the last digit
    end
    
    return (even_count, odd_count)
end
```

This function works by first taking the absolute value of the input number to handle both positive and negative integers uniformly. It then iterates through each digit of the number by repeatedly taking the remainder when divided by 10 (to get the last digit) and then dividing the number by 10 (to remove the last digit). For each digit, it checks if it is even or odd and increments the respective counter. Finally, it returns a tuple containing the counts of even and odd digits.