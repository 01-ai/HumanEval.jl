### Step-by-Step Outline

1. **Check if the input string is empty**: Before proceeding with the hashing, we need to check if the input string `text` is empty. If it is, the function should return `nothing`.

2. **Compute the MD5 hash**: If the input string is not empty, we proceed to compute its MD5 hash. This involves using the `md5` function from the `MD5` module on the input string.

3. **Convert the MD5 hash to a hexadecimal string**: The `md5` function returns a hash object, which we need to convert into a hexadecimal string representation. This is the format that is commonly used to represent MD5 hashes.

4. **Return the hexadecimal string**: Finally, return the hexadecimal string representation of the MD5 hash.

### Julia Code Implementation

```julia
using MD5

function string_to_md5(text::String)::Union{Nothing, String}
    # Step 1: Check if the input string is empty
    if isempty(text)
        return nothing
    end

    # Step 2: Compute the MD5 hash of the input string
    hash = md5(text)

    # Step 3: Convert the MD5 hash to a hexadecimal string
    hash_hex = bytes2hex(hash)

    # Step 4: Return the hexadecimal string
    return hash_hex
end
```

This function follows the outlined steps to check if the input is empty, compute the MD5 hash if it's not, convert the hash to a hexadecimal string, and then return that string.