

Here is a simple solution in Julia:

```julia
function is_multiply_prime(a::Int)::Bool
    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]
    for i in 1:length(primes)
        for j in i:length(primes)
            for k in j:length(primes)
                if primes[i] * primes[j] * primes[k] == a
                    return true
                end
            end
        end
    end
    return false
end
```

This function works by checking all possible combinations of three primes. If it finds a combination that multiplies to `a`, it returns `true`. If it doesn't find any combination, it returns `false`.

Please note that this function is not efficient for large numbers. It's complexity is O(n^3) where n is the number of primes. For large numbers, you would need to use a more efficient algorithm, such as the Sieve of Eratosthenes. 