```julia
function numerical_letter_grade(grades::Vector{Float64})::Vector{String}
    letter_grades = Vector{String}(undef, length(grades))
    for (i, grade) in enumerate(grades)
        if grade > 4.0
            letter_grades[i] = "A+"
        elseif grade > 3.7
            letter_grades[i] = "A"
        elseif grade > 3.3
            letter_grades[i] = "A-"
        elseif grade > 3.0
            letter_grades[i] = "B+"
        elseif grade > 2.7
            letter_grades[i] = "B"
        elseif grade > 2.3
            letter_grades[i] = "B-"
        elseif grade > 2.0
            letter_grades[i] = "C+"
        elseif grade > 1.7
            letter_grades[i] = "C"
        elseif grade > 1.3
            letter_grades[i] = "C-"
        elseif grade > 1.0
            letter_grades[i] = "D+"
        elseif grade > 0.7
            letter_grades[i] = "D"
        elseif grade > 0.0
            letter_grades[i] = "D-"
        else
            letter_grades[i] = "E"
        end
    end
    return letter_grades
end
```

This Julia function `numerical_letter_grade` takes a vector of GPAs as input and returns a vector of letter grades based on the specified grading scale. It iterates through each GPA, compares it against the grading scale, and assigns the corresponding letter grade.