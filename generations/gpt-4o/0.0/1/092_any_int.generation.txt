Here's the implementation of the `any_int` function in Julia:

```julia
function any_int(x::Number, y::Number, z::Number)::Bool
    # Check if all inputs are integers
    if !(isa(x, Int) && isa(y, Int) && isa(z, Int))
        return false
    end
    
    # Check if one of the numbers is equal to the sum of the other two
    return x == y + z || y == x + z || z == x + y
end
```

This function first checks if all the inputs are integers. If any of the inputs are not integers, it returns `false`. If all inputs are integers, it then checks if any one of the numbers is equal to the sum of the other two and returns `true` if this condition is met, otherwise it returns `false`.

Here are the examples provided in the docstring:

```julia
julia> any_int(5, 2, 7)
true

julia> any_int(3, 2, 2)
false

julia> any_int(3, -2, 1)
true

julia> any_int(3.6, -2.2, 2)
false
```