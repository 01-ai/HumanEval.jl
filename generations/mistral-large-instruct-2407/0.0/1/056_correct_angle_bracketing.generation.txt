 Certainly! Below is the implementation of the `correct_angle_bracketing` function in Julia based on the given docstring:

```julia
"""
    correct_angle_bracketing(brackets::String)::Bool

Brackets is a string of "<" and ">". Return true if every opening bracket has a
corresponding closing bracket.

# Examples

```jldoctest
julia> correct_angle_bracketing("<")
false

julia> correct_angle_bracketing("<>")
true

julia> correct_angle_bracketing("<<><>>")
true

julia> correct_angle_bracketing("><<>")
false
```
"""
function correct_angle_bracketing(brackets::String)::Bool
    count = 0
    for char in brackets
        if char == '<'
            count += 1
        elseif char == '>'
            count -= 1
        end
        if count < 0
            return false
        end
    end
    return count == 0
end
```

### Explanation:
1. **Initialization**: We initialize a counter `count` to keep track of the balance between opening (`<`) and closing (`>`) brackets.
2. **Iteration**: We iterate through each character in the string `brackets`.
   - If the character is `<`, we increment the counter.
   - If the character is `>`, we decrement the counter.
   - If at any point the counter becomes negative, it means there is a closing bracket without a corresponding opening bracket, so we return `false`.
3. **Final Check**: After the loop, if the counter is zero, it means every opening bracket has a corresponding closing bracket, so we return `true`. Otherwise, we return `false`.

This function ensures that the brackets are correctly balanced according to the rules specified.