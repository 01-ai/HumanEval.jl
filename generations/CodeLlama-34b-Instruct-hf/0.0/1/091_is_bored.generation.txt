  Here's an implementation of the `is_bored` function in Julia:
```
function is_bored(s::String)::Int
    # Split the string into sentences
    sentences = split(s, ['.', '?', '!'])

    # Count the number of sentences that start with "I"
    count = 0
    for sentence in sentences
        if startswith(sentence, "I")
            count += 1
        end
    end

    return count
end
```
Here's an explanation of the code:

1. The function takes a string `s` as input and returns an integer indicating the number of boredoms in the string.
2. The string is split into sentences using the `split` function, which takes a string and a list of delimiters as input. In this case, the delimiters are `.`, `?`, and `!`.
3. The `sentences` variable is a list of strings, where each string represents a sentence in the input string.
4. The `count` variable is initialized to 0.
5. The `for` loop iterates over each sentence in the `sentences` list.
6. The `startswith` function is used to check if the sentence starts with the word "I". If it does, the `count` variable is incremented by 1.
7. The `return` statement returns the `count` variable, which represents the number of boredoms in the input string.

Here's an example usage of the `is_bored` function:
```
julia> is_bored("The sky is blue. The sun is shining. I love this weather")
1
```
In this example, the input string contains one sentence that starts with "I", so the function returns 1.