@testitem "101_words_string_HumanEvalPlus_v0_1_9_test.jl" tags=[:HumanEvalPlus_v0_1_9] begin
    include(joinpath(ENV["GENERATION_DIR"], "101_words_string.jl"))
    @test words_string(",,,,") == String[]
    @test words_string(" ") == String[]
    @test words_string("Elephant,giraffe,,lion,zebra") == ["Elephant", "giraffe", "lion", "zebra"]
    @test words_string("Hi,there is,a lot,of,space   ,     ,") == ["Hi", "there", "is", "a", "lot", "of", "space"]
    @test words_string("        ") == String[]
    @test words_string("apple,") == ["apple"]
    @test words_string("cat dog, fish") == ["cat", "dog", "fish"]
    @test words_string("hello,  world") == ["hello", "world"]
    @test words_string("One,two ,  three , four") == ["One", "two", "three", "four"]
    @test words_string("The quick brown fox jumps over the lazy dog") == ["The", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog"]
    @test words_string("hello,  oworld") == ["hello", "oworld"]
    @test words_string("         ") == String[]
    @test words_string("The quick brown f the lazy dog") == ["The", "quick", "brown", "f", "the", "lazy", "dog"]
    @test words_string("          ") == String[]
    @test words_string("The quickbrown f the lazy dog") == ["The", "quickbrown", "f", "the", "lazy", "dog"]
    @test words_string("   ") == String[]
    @test words_string("") == String[]
    @test words_string("The quickbrowny f the lazy dog") == ["The", "quickbrowny", "f", "the", "lazy", "dog"]
    @test words_string("The quTick brown f the lazy dog") == ["The", "quTick", "brown", "f", "the", "lazy", "dog"]
    @test words_string("The quick brown fox jumps over tohe lazy dog") == ["The", "quick", "brown", "fox", "jumps", "over", "tohe", "lazy", "dog"]
    @test words_string("The quickbrown y dog") == ["The", "quickbrown", "y", "dog"]
    @test words_string("One,two ,  three , fouOne,two ,  three , fourr") == ["One", "two", "three", "fouOne", "two", "three", "fourr"]
    @test words_string("cagt dog, fish") == ["cagt", "dog", "fish"]
    @test words_string("Elephant,gieraffe,,lion,zebra") == ["Elephant", "gieraffe", "lion", "zebra"]
    @test words_string(",,") == String[]
    @test words_string("The quickbrown  dog") == ["The", "quickbrown", "dog"]
    @test words_string(",The quTick brown f the lazy dog,") == ["The", "quTick", "brown", "f", "the", "lazy", "dog"]
    @test words_string("cat dofish") == ["cat", "dofish"]
    @test words_string("hehello,  oworldllo,  oworld") == ["hehello", "oworldllo", "oworld"]
    @test words_string(" cat dofish       ") == ["cat", "dofish"]
    @test words_string(",         ,The quickbrown  dog") == ["The", "quickbrown", "dog"]
    @test words_string("The quTick brown f One,two ,  three , fourthe lazy dog") == ["The", "quTick", "brown", "f", "One", "two", "three", "fourthe", "lazy", "dog"]
    @test words_string(",The quTick bThe quick brown fox jumps over tohe lazy dogrown f the lazy dog,") == ["The", "quTick", "bThe", "quick", "brown", "fox", "jumps", "over", "tohe", "lazy", "dogrown", "f", "the", "lazy", "dog"]
    @test words_string("The quTickf the lazy dog") == ["The", "quTickf", "the", "lazy", "dog"]
    @test words_string("app cat dofish       e,") == ["app", "cat", "dofish", "e"]
    @test words_string("The quTicat dog, fishckf the lazy dog") == ["The", "quTicat", "dog", "fishckf", "the", "lazy", "dog"]
    @test words_string("The quTicat dog, fishckf the lazy doyg") == ["The", "quTicat", "dog", "fishckf", "the", "lazy", "doyg"]
    @test words_string(",,,,,") == String[]
    @test words_string("         appl e,") == ["appl", "e"]
    @test words_string("The qucfTickf the lazy dog") == ["The", "qucfTickf", "the", "lazy", "dog"]
    @test words_string("XUI") == ["XUI"]
    @test words_string("hllo,  wold") == ["hllo", "wold"]
    @test words_string("One,two ,  three , fouOne,thello,  oworldwo ,  three , fourr") == ["One", "two", "three", "fouOne", "thello", "oworldwo", "three", "fourr"]
    @test words_string("app,The quTick brown f the lazy dog, cat dofish       e,") == ["app", "The", "quTick", "brown", "f", "the", "lazy", "dog", "cat", "dofish", "e"]
    @test words_string(" The quTickf the lazy dog  ") == ["The", "quTickf", "the", "lazy", "dog"]
    @test words_string("cat dofis") == ["cat", "dofis"]
    @test words_string("Theh quTicat dog, fishckf the lazy doyg") == ["Theh", "quTicat", "dog", "fishckf", "the", "lazy", "doyg"]
    @test words_string("The quTickTheh quTicat dog, fishckf the lazy doyg brown f the lazy dog") == ["The", "quTickTheh", "quTicat", "dog", "fishckf", "the", "lazy", "doyg", "brown", "f", "the", "lazy", "dog"]
    @test words_string("Tx jumps over tohe lazy dog") == ["Tx", "jumps", "over", "tohe", "lazy", "dog"]
    @test words_string("The quick brown f,The quTick br own f the lazy dog,ox jumps over tohe lazy dog") == ["The", "quick", "brown", "f", "The", "quTick", "br", "own", "f", "the", "lazy", "dog", "ox", "jumps", "over", "tohe", "lazy", "dog"]
    @test words_string("cat dhofishOne,two ,  three , four") == ["cat", "dhofishOne", "two", "three", "four"]
    @test words_string("The quick brown fox jumps over tohe lazy dog      ") == ["The", "quick", "brown", "fox", "jumps", "over", "tohe", "lazy", "dog"]
    @test words_string("cT he quTick brown f One,two ,  three , fourthe lazy dogt dofis") == ["cT", "he", "quTick", "brown", "f", "One", "two", "three", "fourthe", "lazy", "dogt", "dofis"]
    @test words_string(",,,") == String[]
    @test words_string("The quTick brownThe quickbrown y dog f One,two ,  three , fourthe lazy dog") == ["The", "quTick", "brownThe", "quickbrown", "y", "dog", "f", "One", "two", "three", "fourthe", "lazy", "dog"]
    @test words_string("The quTicat dog, fishckf the l         appl e,azy dog") == ["The", "quTicat", "dog", "fishckf", "the", "l", "appl", "e", "azy", "dog"]
    @test words_string("The quTick brown f the lazy The quicThe quick brown f,The quTick br own f the lazy dog,ox jumps over tohe lazy dogk brown f,The quTick brgdog") == ["The", "quTick", "brown", "f", "the", "lazy", "The", "quicThe", "quick", "brown", "f", "The", "quTick", "br", "own", "f", "the", "lazy", "dog", "ox", "jumps", "over", "tohe", "lazy", "dogk", "brown", "f", "The", "quTick", "brgdog"]
    @test words_string("The hquickbg") == ["The", "hquickbg"]
    @test words_string("Tx xjumps over tohe lazy dog") == ["Tx", "xjumps", "over", "tohe", "lazy", "dog"]
    @test words_string("The quTick brownThe quickbrown y dog f One,two ,  three , fourthe flazy dog") == ["The", "quTick", "brownThe", "quickbrown", "y", "dog", "f", "One", "two", "three", "fourthe", "flazy", "dog"]
    @test words_string("Elephant,         appl e,giraffe,,lion,zebra") == ["Elephant", "appl", "e", "giraffe", "lion", "zebra"]
    @test words_string("The quTicat dog, fishckf the l         appl e,azy dogI") == ["The", "quTicat", "dog", "fishckf", "the", "l", "appl", "e", "azy", "dogI"]
    @test words_string("   Theh quTicat dog, fishckf the lazy doyg      ") == ["Theh", "quTicat", "dog", "fishckf", "the", "lazy", "doyg"]
    @test words_string(" he quTickf the lazy dog  ") == ["he", "quTickf", "the", "lazy", "dog"]
    @test words_string("Theh quTicat dog, fishckf the lazy The qucfTickf the lazy dogdoyg") == ["Theh", "quTicat", "dog", "fishckf", "the", "lazy", "The", "qucfTickf", "the", "lazy", "dogdoyg"]
    @test words_string("cat dfofish") == ["cat", "dfofish"]
    @test words_string("XI") == ["XI"]
    @test words_string("Hi,there is,a lot,of,space  cT he quTick brown f One,two ,  three , fourthe lazy dogt dofis ,     ,") == ["Hi", "there", "is", "a", "lot", "of", "space", "cT", "he", "quTick", "brown", "f", "One", "two", "three", "fourthe", "lazy", "dogt", "dofis"]
    @test words_string("eesrvDWbLL") == ["eesrvDWbLL"]
    @test words_string("The quick bThe quick brown f the lazy dogrown fox jumps over tohe lazy dog") == ["The", "quick", "bThe", "quick", "brown", "f", "the", "lazy", "dogrown", "fox", "jumps", "over", "tohe", "lazy", "dog"]
    @test words_string("cagt dogfish") == ["cagt", "dogfish"]
    @test words_string(" hOne,two ,  three , foure quTickf the lazy dog  ") == ["hOne", "two", "three", "foure", "quTickf", "the", "lazy", "dog"]
    @test words_string("The qkuickbrown y dog") == ["The", "qkuickbrown", "y", "dog"]
    @test words_string(",The quTick bT,,,,he quick brown fox jumps over tohe lazy dogrown f the lazy dog,") == ["The", "quTick", "bT", "he", "quick", "brown", "fox", "jumps", "over", "tohe", "lazy", "dogrown", "f", "the", "lazy", "dog"]
    @test words_string("  ") == String[]
    @test words_string("app cat dofish       e,Elephant,gieraffe,,lion,zebra") == ["app", "cat", "dofish", "e", "Elephant", "gieraffe", "lion", "zebra"]
    @test words_string("The quTick brown f the lazy The quThe quickbrown f the lazy dogicThe quick brown f,The quTick br own f the lazy dog,ox jumps over tohe lazy dogk brown f,The quTick brgdog") == ["The", "quTick", "brown", "f", "the", "lazy", "The", "quThe", "quickbrown", "f", "the", "lazy", "dogicThe", "quick", "brown", "f", "The", "quTick", "br", "own", "f", "the", "lazy", "dog", "ox", "jumps", "over", "tohe", "lazy", "dogk", "brown", "f", "The", "quTick", "brgdog"]
    @test words_string("   Theh quTicat dog, fishckf the lazy doyg     ") == ["Theh", "quTicat", "dog", "fishckf", "the", "lazy", "doyg"]
    @test words_string(",         ,The quickbrown  dobg") == ["The", "quickbrown", "dobg"]
    @test words_string("The quTiThe queri tohe lazy dogk brown f,The quTick brgdogckf the lazy dog") == ["The", "quTiThe", "queri", "tohe", "lazy", "dogk", "brown", "f", "The", "quTick", "brgdogckf", "the", "lazy", "dog"]
    @test words_string(" The quTickf the lazy dog The quick brown f the lazy dog ") == ["The", "quTickf", "the", "lazy", "dog", "The", "quick", "brown", "f", "the", "lazy", "dog"]
    @test words_string("The qu  dog") == ["The", "qu", "dog"]
    @test words_string("hello, l oworld") == ["hello", "l", "oworld"]
    @test words_string(",The quTick bT,,,,he quick bro,wn fox jumps over tohe lazy dogrown f the lazy dog,") == ["The", "quTick", "bT", "he", "quick", "bro", "wn", "fox", "jumps", "over", "tohe", "lazy", "dogrown", "f", "the", "lazy", "dog"]
    @test words_string("Elephant,         appl e,girTx xjumps over tohe lazy dogaffe,,lion,zebra") == ["Elephant", "appl", "e", "girTx", "xjumps", "over", "tohe", "lazy", "dogaffe", "lion", "zebra"]
    @test words_string("       ") == String[]
    @test words_string("The quick ybrown f the lazy dog") == ["The", "quick", "ybrown", "f", "the", "lazy", "dog"]
    @test words_string("One,two ,  three , fouOne,two ,  thre fourr") == ["One", "two", "three", "fouOne", "two", "thre", "fourr"]
    @test words_string("cat dhofishne,two ,  three , four") == ["cat", "dhofishne", "two", "three", "four"]
    @test words_string("cat dofiElephant,         a,ppl e,girTx xjumps over tohe lazy dogaffe,,lion,zebras") == ["cat", "dofiElephant", "a", "ppl", "e", "girTx", "xjumps", "over", "tohe", "lazy", "dogaffe", "lion", "zebras"]
    @test words_string("TThe quTick brown f One,two ,  three , fourthe lazy doghe qck brown f the he quTickf the lazy dog   lazy dog") == ["TThe", "quTick", "brown", "f", "One", "two", "three", "fourthe", "lazy", "doghe", "qck", "brown", "f", "the", "he", "quTickf", "the", "lazy", "dog", "lazy", "dog"]
    @test words_string("hello,  woXUIrld") == ["hello", "woXUIrld"]
    @test words_string(" hOne,two ,  three , foure quTickf thef lazy dog  ") == ["hOne", "two", "three", "foure", "quTickf", "thef", "lazy", "dog"]
    @test words_string("Hi,there is,a lot,of,space  cT he quTick brown f One,two ,  three , fourthe lazy dogyt dofis ,     ,") == ["Hi", "there", "is", "a", "lot", "of", "space", "cT", "he", "quTick", "brown", "f", "One", "two", "three", "fourthe", "lazy", "dogyt", "dofis"]
    @test words_string("Theh quTicat diog, fishckf the lhazy The qucfTickf the lazy dogdoyg") == ["Theh", "quTicat", "diog", "fishckf", "the", "lhazy", "The", "qucfTickf", "the", "lazy", "dogdoyg"]
    @test words_string("cat dog,  fish") == ["cat", "dog", "fish"]
    @test words_string("         apple,") == ["apple"]
    @test words_string("hHi,there is,a lot,of,space  cT he quTick brown f One,two ,  three , fourthe lazy dogt dofis ,     ,llo,  wold") == ["hHi", "there", "is", "a", "lot", "of", "space", "cT", "he", "quTick", "brown", "f", "One", "two", "three", "fourthe", "lazy", "dogt", "dofis", "llo", "wold"]
    @test words_string("hwoXUhIrld") == ["hwoXUhIrld"]
    @test words_string("Hi, my    name   is John. How     are    you?   ") == ["Hi", "my", "name", "is", "John.", "How", "are", "you?"]
    @test words_string("The,quick,brown,fox,jumps,over,the,lazy,dog.") == ["The", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("Two spaces after,  one space before  , and no spaces in between") == ["Two", "spaces", "after", "one", "space", "before", "and", "no", "spaces", "in", "between"]
    @test words_string(",,,,,,No words, here,,,,,,") == ["No", "words", "here"]
    @test words_string("   A  random    string    with     no    commas     or   spaces") == ["A", "random", "string", "with", "no", "commas", "or", "spaces"]
    @test words_string("Amazing, how a sentence can change, meaning just by, adding or removing, commas!") == ["Amazing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "adding", "or", "removing", "commas!"]
    @test words_string("Multi\nline\nstring\nHello,\nworld!\n") == ["Multi\nline\nstring\nHello", "\nworld!\n"]
    @test words_string("President, John, F, Kennedy") == ["President", "John", "F", "Kennedy"]
    @test words_string("The quick brown fox jumps over the lazy dog.") == ["The", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("ThisStringHasNoSpaces") == ["ThisStringHasNoSpaces"]
    @test words_string("Muluti") == ["Muluti"]
    @test words_string("   A  random    string    wiorth     no    commas     or   spaces") == ["A", "random", "string", "wiorth", "no", "commas", "or", "spaces"]
    @test words_string("eB") == ["eB"]
    @test words_string("   A  random    string    with      no    commas     or   spaces") == ["A", "random", "string", "with", "no", "commas", "or", "spaces"]
    @test words_string("Multi\nline\n\nstring\nHello,\nworld!\n") == ["Multi\nline\n\nstring\nHello", "\nworld!\n"]
    @test words_string("Amazing, how a sentence can changee, meaning just by, adding or removing, commas!") == ["Amazing", "how", "a", "sentence", "can", "changee", "meaning", "just", "by", "adding", "or", "removing", "commas!"]
    @test words_string("The quick brown fox jumps over the lazydog.") == ["The", "quick", "brown", "fox", "jumps", "over", "the", "lazydog."]
    @test words_string("The quick brown fox jumps over th e lazy dog.") == ["The", "quick", "brown", "fox", "jumps", "over", "th", "e", "lazy", "dog."]
    @test words_string("The quick browner th e lazy dochangee,g.") == ["The", "quick", "browner", "th", "e", "lazy", "dochangee", "g."]
    @test words_string("B") == ["B"]
    @test words_string("change,") == ["change"]
    @test words_string("is") == ["is"]
    @test words_string("Multi\nline!\nstring\nHello,i\nworld!\n") == ["Multi\nline!\nstring\nHello", "i\nworld!\n"]
    @test words_string("th") == ["th"]
    @test words_string("line") == ["line"]
    @test words_string("you?") == ["you?"]
    @test words_string("The quick brown fox jumps over change,the lazydog.") == ["The", "quick", "brown", "fox", "jumps", "over", "change", "the", "lazydog."]
    @test words_string("Mullti") == ["Mullti"]
    @test words_string("   A  random    string    with      no    commas     or    spaces") == ["A", "random", "string", "with", "no", "commas", "or", "spaces"]
    @test words_string("yMulti\nline!\nstring\nHello,i\nworld!\n?") == ["yMulti\nline!\nstring\nHello", "i\nworld!\n?"]
    @test words_string("line!") == ["line!"]
    @test words_string("Hi, my    name   is   A  random    string    wiorth     no    commas     or   spaces John. How     are    you?   ") == ["Hi", "my", "name", "is", "A", "random", "string", "wiorth", "no", "commas", "or", "spaces", "John.", "How", "are", "you?"]
    @test words_string("space") == ["space"]
    @test words_string("The quick brown fox jumps over tarelazy dog.") == ["The", "quick", "brown", "fox", "jumps", "over", "tarelazy", "dog."]
    @test words_string("The quick browner th e lazy do changee,g.") == ["The", "quick", "browner", "th", "e", "lazy", "do", "changee", "g."]
    @test words_string("BeB") == ["BeB"]
    @test words_string("jumps") == ["jumps"]
    @test words_string("   A  random    string    with      no    commas    r or   spaces") == ["A", "random", "string", "with", "no", "commas", "r", "or", "spaces"]
    @test words_string("Hello,i") == ["Hello", "i"]
    @test words_string("The quick brown fox jumpwiorths over tarelazy dog.") == ["The", "quick", "brown", "fox", "jumpwiorths", "over", "tarelazy", "dog."]
    @test words_string("onwords,e") == ["onwords", "e"]
    @test words_string("The quick brown fox jumps ovMultier tarelazy dog.") == ["The", "quick", "brown", "fox", "jumps", "ovMultier", "tarelazy", "dog."]
    @test words_string("Amazing, how a sentence can change, meaning ovMultierjust by, adding or removing, commas!") == ["Amazing", "how", "a", "sentence", "can", "change", "meaning", "ovMultierjust", "by", "adding", "or", "removing", "commas!"]
    @test words_string("just") == ["just"]
    @test words_string("   A  random    string    wiorth     no    commases") == ["A", "random", "string", "wiorth", "no", "commases"]
    @test words_string("Hi, my    name   is JohThe,quick,brown,fox,jumps,over,the,lazy,dog. you?   ") == ["Hi", "my", "name", "is", "JohThe", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog.", "you?"]
    @test words_string("Helllol,") == ["Helllol"]
    @test words_string("Hicommases, my    name   is John. How     are    you?   ") == ["Hicommases", "my", "name", "is", "John.", "How", "are", "you?"]
    @test words_string("The quick b rown fox jumps over the lazy dog.") == ["The", "quick", "b", "rown", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("   A  random    string    wiorth     no    commas     or   spacesth") == ["A", "random", "string", "wiorth", "no", "commas", "or", "spacesth"]
    @test words_string("The qmpwiorths over tarelazy dog.") == ["The", "qmpwiorths", "over", "tarelazy", "dog."]
    @test words_string("NWUyMDWJAr") == ["NWUyMDWJAr"]
    @test words_string("   A  random    string    with      no    commas     or   spacesNWUyMDWJAr") == ["A", "random", "string", "with", "no", "commas", "or", "spacesNWUyMDWJAr"]
    @test words_string("HellloThe quick brown fox jumps over tarelazy dog.") == ["HellloThe", "quick", "brown", "fox", "jumps", "over", "tarelazy", "dog."]
    @test words_string("spacesNWUyMDDWJAr") == ["spacesNWUyMDDWJAr"]
    @test words_string("ladzydog.") == ["ladzydog."]
    @test words_string("Amazing, how a sentence can change, meaning just by, adding or removing, commasAmazing, how a sentence can change, meaning just by, addingThe quick browner th e lazy dochangee,g. or removing, commas!!") == ["Amazing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "adding", "or", "removing", "commasAmazing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "addingThe", "quick", "browner", "th", "e", "lazy", "dochangee", "g.", "or", "removing", "commas!!"]
    @test words_string("The quick b rown fox jumps over the lazy dog.commases") == ["The", "quick", "b", "rown", "fox", "jumps", "over", "the", "lazy", "dog.commases"]
    @test words_string("iis") == ["iis"]
    @test words_string("dog.commases") == ["dog.commases"]
    @test words_string("justt") == ["justt"]
    @test words_string("spaces") == ["spaces"]
    @test words_string("   A  rand om    string    with      no    commas     or with") == ["A", "rand", "om", "string", "with", "no", "commas", "or", "with"]
    @test words_string("Multi\nline\nstring\nHi,rld!\n") == ["Multi\nline\nstring\nHi", "rld!\n"]
    @test words_string("John.") == ["John."]
    @test words_string("The quick browneer th e lazy dochangee,g.") == ["The", "quick", "browneer", "th", "e", "lazy", "dochangee", "g."]
    @test words_string("The quick browner th e lazy randdocPresident, John, F, Kennedyhangee,.") == ["The", "quick", "browner", "th", "e", "lazy", "randdocPresident", "John", "F", "Kennedyhangee", "."]
    @test words_string("HellloThe quickx brown fox jumps over tarelazy tarelazydog.") == ["HellloThe", "quickx", "brown", "fox", "jumps", "over", "tarelazy", "tarelazydog."]
    @test words_string("Hi, my    name   is J you?   ") == ["Hi", "my", "name", "is", "J", "you?"]
    @test words_string("after,") == ["after"]
    @test words_string("TwoB") == ["TwoB"]
    @test words_string("quickx") == ["quickx"]
    @test words_string("   A  random    string    wiorth     no    commas") == ["A", "random", "string", "wiorth", "no", "commas"]
    @test words_string("TheHi, my    name   is John. How     are    you?    quick brown fox jumpwiorths over tarelazy dog.") == ["TheHi", "my", "name", "is", "John.", "How", "are", "you?", "quick", "brown", "fox", "jumpwiorths", "over", "tarelazy", "dog."]
    @test words_string("the") == ["the"]
    @test words_string("yldadzydoJohn,") == ["yldadzydoJohn"]
    @test words_string("in") == ["in"]
    @test words_string("cmyTwwoe,") == ["cmyTwwoe"]
    @test words_string("The qmpwiorths over tarelazy dog.changee,g.") == ["The", "qmpwiorths", "over", "tarelazy", "dog.changee", "g."]
    @test words_string("Multi\nline\nstring\nHwords,\n") == ["Multi\nline\nstring\nHwords", "\n"]
    @test words_string("The quick browner th e lazqy dochangee,g.") == ["The", "quick", "browner", "th", "e", "lazqy", "dochangee", "g."]
    @test words_string("H   A  rand om    string    with      no    commas     or withicommases, my    name   is John. How     are    you?   ") == ["H", "A", "rand", "om", "string", "with", "no", "commas", "or", "withicommases", "my", "name", "is", "John.", "How", "are", "you?"]
    @test words_string("Hicommases, my    name   is are    you?   ") == ["Hicommases", "my", "name", "is", "are", "you?"]
    @test words_string("The quick b rown fox jumps oveor the lazy dog.") == ["The", "quick", "b", "rown", "fox", "jumps", "oveor", "the", "lazy", "dog."]
    @test words_string("    A  random    string    with      no    comtmas     or    spaces") == ["A", "random", "string", "with", "no", "comtmas", "or", "spaces"]
    @test words_string("cThe quick browner th e lazy dochangee,g.ommas") == ["cThe", "quick", "browner", "th", "e", "lazy", "dochangee", "g.ommas"]
    @test words_string("jumpwiorths") == ["jumpwiorths"]
    @test words_string("Two spaces after,  one space before  , and no speaces in between") == ["Two", "spaces", "after", "one", "space", "before", "and", "no", "speaces", "in", "between"]
    @test words_string("Hi,rld!") == ["Hi", "rld!"]
    @test words_string("spacesThe quick browneer Uth e lazy dochangee,g.NWUyMDDWJAr") == ["spacesThe", "quick", "browneer", "Uth", "e", "lazy", "dochangee", "g.NWUyMDDWJAr"]
    @test words_string("The") == ["The"]
    @test words_string("MAmazing, how a sentencse can change, meaning just by, adding or removing, commas!uluti") == ["MAmazing", "how", "a", "sentencse", "can", "change", "meaning", "just", "by", "adding", "or", "removing", "commas!uluti"]
    @test words_string("dog.commaTheHi, my    name   is John. How     are    yo   A  random    string    with      no    commas    r or   spacesu?    quick brown fox jumpwiorths over tsarelazy dog.ses") == ["dog.commaTheHi", "my", "name", "is", "John.", "How", "are", "yo", "A", "random", "string", "with", "no", "commas", "r", "or", "spacesu?", "quick", "brown", "fox", "jumpwiorths", "over", "tsarelazy", "dog.ses"]
    @test words_string(",ThisStringHasNNoSpaces,,,,,No words, here,,,,,,") == ["ThisStringHasNNoSpaces", "No", "words", "here"]
    @test words_string("TheHi, my    name   is John. How     are    you?    quick brown fox jumpwiorths over tareadding") == ["TheHi", "my", "name", "is", "John.", "How", "are", "you?", "quick", "brown", "fox", "jumpwiorths", "over", "tareadding"]
    @test words_string("MAmazing, how a sentencse cant by, adding or removing, commas!uluti") == ["MAmazing", "how", "a", "sentencse", "cant", "by", "adding", "or", "removing", "commas!uluti"]
    @test words_string("ThTHello,e") == ["ThTHello", "e"]
    @test words_string("The qmpwiorths ovchange,theer tarelazy dogwords,ngee,g.") == ["The", "qmpwiorths", "ovchange", "theer", "tarelazy", "dogwords", "ngee", "g."]
    @test words_string("ujumps") == ["ujumps"]
    @test words_string("do") == ["do"]
    @test words_string("Hi, my    nam e   is J you?   ") == ["Hi", "my", "nam", "e", "is", "J", "you?"]
    @test words_string("on") == ["on"]
    @test words_string("Multi\nl\nstring\nHello,\nworld!\n") == ["Multi\nl\nstring\nHello", "\nworld!\n"]
    @test words_string("Multi\nline\nstrin   A  random    string    wiorth     no    commas     or   spacesthg\nHi,rld!\n") == ["Multi\nline\nstrin", "A", "random", "string", "wiorth", "no", "commas", "or", "spacesthg\nHi", "rld!\n"]
    @test words_string("yldadzydoJowithhn,") == ["yldadzydoJowithhn"]
    @test words_string("lninie!") == ["lninie!"]
    @test words_string("Hi, my    name   is John. How     oare    you?   ") == ["Hi", "my", "name", "is", "John.", "How", "oare", "you?"]
    @test words_string("lniniie!") == ["lniniie!"]
    @test words_string("or") == ["or"]
    @test words_string("The quick browner th e lazy randdocPresident, John, F,n Kennedyhangee,.") == ["The", "quick", "browner", "th", "e", "lazy", "randdocPresident", "John", "F", "n", "Kennedyhangee", "."]
    @test words_string("are") == ["are"]
    @test words_string("H") == ["H"]
    @test words_string("   A  random    string    wiorth     no    c ommas     or   spaces") == ["A", "random", "string", "wiorth", "no", "c", "ommas", "or", "spaces"]
    @test words_string("by,") == ["by"]
    @test words_string("Hi, my    name   is J you   ") == ["Hi", "my", "name", "is", "J", "you"]
    @test words_string("The quick brown fox jumpzs over th e lazy dog.") == ["The", "quick", "brown", "fox", "jumpzs", "over", "th", "e", "lazy", "dog."]
    @test words_string("HellloThe quiUthx jumps over tarelazy dog.") == ["HellloThe", "quiUthx", "jumps", "over", "tarelazy", "dog."]
    @test words_string("uThe quick brown fox jumpzs over th e lazy dog.jumps") == ["uThe", "quick", "brown", "fox", "jumpzs", "over", "th", "e", "lazy", "dog.jumps"]
    @test words_string("chhownge,") == ["chhownge"]
    @test words_string("linee") == ["linee"]
    @test words_string("   A  random    string    with      no    commwords,as     or   spaces") == ["A", "random", "string", "with", "no", "commwords", "as", "or", "spaces"]
    @test words_string("nlniniie!") == ["nlniniie!"]
    @test words_string(" A  ") == ["A"]
    @test words_string("you??") == ["you??"]
    @test words_string("jumpwiordog.ths") == ["jumpwiordog.ths"]
    @test words_string("Two spaces after,  one space before s , and no speaces in between") == ["Two", "spaces", "after", "one", "space", "before", "s", "and", "no", "speaces", "in", "between"]
    @test words_string("ThTH   A  random    string    with      no    commas     or   spacesello,e") == ["ThTH", "A", "random", "string", "with", "no", "commas", "or", "spacesello", "e"]
    @test words_string("BB") == ["BB"]
    @test words_string("The quick b rown fox jumps oazy dog.") == ["The", "quick", "b", "rown", "fox", "jumps", "oazy", "dog."]
    @test words_string("om") == ["om"]
    @test words_string("ThTHrownello,e") == ["ThTHrownello", "e"]
    @test words_string("dog.commaTheHi, my    name   is John. How     are    yo   A  random    string    with      no    comma  quick brown fdog.ses") == ["dog.commaTheHi", "my", "name", "is", "John.", "How", "are", "yo", "A", "random", "string", "with", "no", "comma", "quick", "brown", "fdog.ses"]
    @test words_string("spacesu?") == ["spacesu?"]
    @test words_string("yldadzydcommas!uluti,") == ["yldadzydcommas!uluti"]
    @test words_string("Multi\nline\nstrin   A  random    string    wiorth     no    commas     or   spacesthg\nHi,rtld!\nH") == ["Multi\nline\nstrin", "A", "random", "string", "wiorth", "no", "commas", "or", "spacesthg\nHi", "rtld!\nH"]
    @test words_string("The quick brown fox jumg.") == ["The", "quick", "brown", "fox", "jumg."]
    @test words_string("chhowngec,") == ["chhowngec"]
    @test words_string("rdandom") == ["rdandom"]
    @test words_string("wiorth") == ["wiorth"]
    @test words_string("meaning") == ["meaning"]
    @test words_string(",,,,,,No words, her,e,,,,,,") == ["No", "words", "her", "e"]
    @test words_string("Amazing, how a sentence can change, meaning just by, addinhg or removing, comma!") == ["Amazing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "addinhg", "or", "removing", "comma!"]
    @test words_string("rdmandom") == ["rdmandom"]
    @test words_string("John,") == ["John"]
    @test words_string("rown") == ["rown"]
    @test words_string("Multi\nline\nstrHwords,\n") == ["Multi\nline\nstrHwords", "\n"]
    @test words_string("TheHi, my    name   is John. How     are    you?    quick brown fox jumpwiorths over tareaddHi, my    nam e   is J you?   ing") == ["TheHi", "my", "name", "is", "John.", "How", "are", "you?", "quick", "brown", "fox", "jumpwiorths", "over", "tareaddHi", "my", "nam", "e", "is", "J", "you?", "ing"]
    @test words_string("ynldadzydoJohn,") == ["ynldadzydoJohn"]
    @test words_string("and") == ["and"]
    @test words_string("dog.H") == ["dog.H"]
    @test words_string("s") == ["s"]
    @test words_string("jusAmazing, how a sentence can cnamehange, meaning ovMultierjust by, adding or removing, commas!tt") == ["jusAmazing", "how", "a", "sentence", "can", "cnamehange", "meaning", "ovMultierjust", "by", "adding", "or", "removing", "commas!tt"]
    @test words_string("dog.commaTheHi, my    name   is John. How     are    yo   A  random    string    with      no    comma  quick brown cThefdog.ses") == ["dog.commaTheHi", "my", "name", "is", "John.", "How", "are", "yo", "A", "random", "string", "with", "no", "comma", "quick", "brown", "cThefdog.ses"]
    @test words_string("sentence") == ["sentence"]
    @test words_string("n.") == ["n."]
    @test words_string("cheange,") == ["cheange"]
    @test words_string("no") == ["no"]
    @test words_string("Homicommases, my    name   is are    you?   ") == ["Homicommases", "my", "name", "is", "are", "you?"]
    @test words_string("brown") == ["brown"]
    @test words_string("TThTH") == ["TThTH"]
    @test words_string("changee,g.") == ["changee", "g."]
    @test words_string(",,,,,,No") == ["No"]
    @test words_string("spacesNDWUyMDDWJAr") == ["spacesNDWUyMDDWJAr"]
    @test words_string("Multid\nline\nstring\nHello,\nworld!\n") == ["Multid\nline\nstring\nHello", "\nworld!\n"]
    @test words_string("you?o?") == ["you?o?"]
    @test words_string("   A  random    string    wiorth  ThTHello,e   no    c ommas     or   spaces") == ["A", "random", "string", "wiorth", "ThTHello", "e", "no", "c", "ommas", "or", "spaces"]
    @test words_string("eBThTHello,e") == ["eBThTHello", "e"]
    @test words_string("cheangeg,") == ["cheangeg"]
    @test words_string("yo") == ["yo"]
    @test words_string("showu?") == ["showu?"]
    @test words_string("spsaces") == ["spsaces"]
    @test words_string("H    A  rand om    string    with      no    commas     or withicommases, my    name   is John. How     are    you?   ") == ["H", "A", "rand", "om", "string", "with", "no", "commas", "or", "withicommases", "my", "name", "is", "John.", "How", "are", "you?"]
    @test words_string("dog.comyldadzydcommas!uluti,mases") == ["dog.comyldadzydcommas!uluti", "mases"]
    @test words_string("The quick brown fox jAmazing, how a sentence can change, meaning just by, adding or removing, commasAmazing, how a sentence can change, meaning just by, addingThe quick browner th e lazy dochangee,g. or removing, commas!!umg.cheangeg,") == ["The", "quick", "brown", "fox", "jAmazing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "adding", "or", "removing", "commasAmazing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "addingThe", "quick", "browner", "th", "e", "lazy", "dochangee", "g.", "or", "removing", "commas!!umg.cheangeg"]
    @test words_string("BrandomeB") == ["BrandomeB"]
    @test words_string("   A  random    string    with       no    commas     or   spaces") == ["A", "random", "string", "with", "no", "commas", "or", "spaces"]
    @test words_string("The qu ick b rown fox jumps over the lazy dog.commases") == ["The", "qu", "ick", "b", "rown", "fox", "jumps", "over", "the", "lazy", "dog.commases"]
    @test words_string("Bra") == ["Bra"]
    @test words_string("iiis") == ["iiis"]
    @test words_string("rdmandoom") == ["rdmandoom"]
    @test words_string("words,") == ["words"]
    @test words_string("spacesNDWUyMDDWJAspacesNDWUyMDDWJArr") == ["spacesNDWUyMDDWJAspacesNDWUyMDDWJArr"]
    @test words_string("Multi\nlinjumpzs\nworld!\n") == ["Multi\nlinjumpzs\nworld!\n"]
    @test words_string("i") == ["i"]
    @test words_string("browns") == ["browns"]
    @test words_string("how") == ["how"]
    @test words_string("cThe quchange,theick browner th e lazy dochangee,g.ommas") == ["cThe", "quchange", "theick", "browner", "th", "e", "lazy", "dochangee", "g.ommas"]
    @test words_string("change.e,g.") == ["change.e", "g."]
    @test words_string("rThe quick brown fox jumps over change,the lazydog.dmandoom") == ["rThe", "quick", "brown", "fox", "jumps", "over", "change", "the", "lazydog.dmandoom"]
    @test words_string("lninile!") == ["lninile!"]
    @test words_string("Multi\nline\nstrin   A jumpwiordog.ths random    string    wiorth     no    commas     or   spacesthg\nHi,rtld!\nH") == ["Multi\nline\nstrin", "A", "jumpwiordog.ths", "random", "string", "wiorth", "no", "commas", "or", "spacesthg\nHi", "rtld!\nH"]
    @test words_string("sshowu?") == ["sshowu?"]
    @test words_string("   A  random    string    wiorth  ThTHello,e comma!  no    c ommas     or   spaces") == ["A", "random", "string", "wiorth", "ThTHello", "e", "comma!", "no", "c", "ommas", "or", "spaces"]
    @test words_string("jumpzs") == ["jumpzs"]
    @test words_string("quiUthx") == ["quiUthx"]
    @test words_string("o") == ["o"]
    @test words_string("commas!!") == ["commas!!"]
    @test words_string("commas!") == ["commas!"]
    @test words_string("   A  random    string    with     no    commas     or   spacesNWUyMDWJAr") == ["A", "random", "string", "with", "no", "commas", "or", "spacesNWUyMDWJAr"]
    @test words_string("cThe quick browniiiser th angee,g.ommas") == ["cThe", "quick", "browniiiser", "th", "angee", "g.ommas"]
    @test words_string("l   A  random    string    wiorth     no    commas     or   spacesth") == ["l", "A", "random", "string", "wiorth", "no", "commas", "or", "spacesth"]
    @test words_string("sentesnce") == ["sentesnce"]
    @test words_string("brn") == ["brn"]
    @test words_string("cThe theick browner th e lazy dochangee,gn.ommasThTH") == ["cThe", "theick", "browner", "th", "e", "lazy", "dochangee", "gn.ommasThTH"]
    @test words_string("cnamehange,") == ["cnamehange"]
    @test words_string("oveor") == ["oveor"]
    @test words_string("taMultireaddHi,") == ["taMultireaddHi"]
    @test words_string("rdmandoHello,") == ["rdmandoHello"]
    @test words_string("Multi\nline\nstring\nHi,rd!\n") == ["Multi\nline\nstring\nHi", "rd!\n"]
    @test words_string("commasAmazing,") == ["commasAmazing"]
    @test words_string("BBThe qmpwiorths over tarelazy dog.changee,g.") == ["BBThe", "qmpwiorths", "over", "tarelazy", "dog.changee", "g."]
    @test words_string("spacesNDWUThe qmpwiorths over tarelazy dog.changee,g.yMDDWJAr") == ["spacesNDWUThe", "qmpwiorths", "over", "tarelazy", "dog.changee", "g.yMDDWJAr"]
    @test words_string("FLoaost") == ["FLoaost"]
    @test words_string("before") == ["before"]
    @test words_string("namouu?") == ["namouu?"]
    @test words_string("   A  random    string    with      no    c") == ["A", "random", "string", "with", "no", "c"]
    @test words_string("The qmpwiorlazy dog.") == ["The", "qmpwiorlazy", "dog."]
    @test words_string("sadding") == ["sadding"]
    @test words_string("uThe quick brown fox jumpzs oveth e lazy dog.jumps") == ["uThe", "quick", "brown", "fox", "jumpzs", "oveth", "e", "lazy", "dog.jumps"]
    @test words_string("Hi, my    name   is John. How   i  oare    you?   ") == ["Hi", "my", "name", "is", "John.", "How", "i", "oare", "you?"]
    @test words_string("cThe quick browner th e lazy dochangee,g.omm,as") == ["cThe", "quick", "browner", "th", "e", "lazy", "dochangee", "g.omm", "as"]
    @test words_string("tarelazy") == ["tarelazy"]
    @test words_string("inor") == ["inor"]
    @test words_string("wBBTheith") == ["wBBTheith"]
    @test words_string("spaace") == ["spaace"]
    @test words_string("Multi\nline\nstTherHwords,r\n") == ["Multi\nline\nstTherHwords", "r\n"]
    @test words_string("orHi,") == ["orHi"]
    @test words_string("yo   A  random    string    wiorth     no    commas???") == ["yo", "A", "random", "string", "wiorth", "no", "commas???"]
    @test words_string("quick") == ["quick"]
    @test words_string("H    A  rand om    string    with      no    commas     or withicommases, my    name   is John. How  spaace   are    you?u   ") == ["H", "A", "rand", "om", "string", "with", "no", "commas", "or", "withicommases", "my", "name", "is", "John.", "How", "spaace", "are", "you?u"]
    @test words_string("adding") == ["adding"]
    @test words_string("jumThe qu ick b rown fox jumps over the lazy dog.commasespzzs") == ["jumThe", "qu", "ick", "b", "rown", "fox", "jumps", "over", "the", "lazy", "dog.commasespzzs"]
    @test words_string("The quick b rown fox quickjumps over the lazy dog.") == ["The", "quick", "b", "rown", "fox", "quickjumps", "over", "the", "lazy", "dog."]
    @test words_string("spFLoaostacesNDWUyMDDWJAr") == ["spFLoaostacesNDWUyMDDWJAr"]
    @test words_string("oazy") == ["oazy"]
    @test words_string("dochangee,g.ommas") == ["dochangee", "g.ommas"]
    @test words_string("sho?wu?") == ["sho?wu?"]
    @test words_string("tTwo spaces after,  one space before  , and no spaces in betweenh") == ["tTwo", "spaces", "after", "one", "space", "before", "and", "no", "spaces", "in", "betweenh"]
    @test words_string("yMulti\nline!\nstrin!g\nHello,i\nworld!\n?") == ["yMulti\nline!\nstrin!g\nHello", "i\nworld!\n?"]
    @test words_string("Two spaces aaf,ter,  one space before  , and no speaces in between") == ["Two", "spaces", "aaf", "ter", "one", "space", "before", "and", "no", "speaces", "in", "between"]
    @test words_string("o   A  random    string    wiorth     no    commases") == ["o", "A", "random", "string", "wiorth", "no", "commases"]
    @test words_string("brlineen") == ["brlineen"]
    @test words_string("The quick brown fox jumps over tqhe lazydog.") == ["The", "quick", "brown", "fox", "jumps", "over", "tqhe", "lazydog."]
    @test words_string("JohThe,quick,brown,fox,jumps,over,the,lazy,dog.") == ["JohThe", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("dochangee,g.") == ["dochangee", "g."]
    @test words_string("The,quick,brown,foxdogwords,ngee,g.er,the,lazy,dog.") == ["The", "quick", "brown", "foxdogwords", "ngee", "g.er", "the", "lazy", "dog."]
    @test words_string("juust") == ["juust"]
    @test words_string("   A  random    string    with     n o    commas     or   spaces") == ["A", "random", "string", "with", "n", "o", "commas", "or", "spaces"]
    @test words_string("   A  random    string    wiorth  ThTHelo,e comma!  no    c ommas browner    or   spaces") == ["A", "random", "string", "wiorth", "ThTHelo", "e", "comma!", "no", "c", "ommas", "browner", "or", "spaces"]
    @test words_string("spacesu?,,,No") == ["spacesu?", "No"]
    @test words_string("ii") == ["ii"]
    @test words_string("Homicommases, my    name   is are    you") == ["Homicommases", "my", "name", "is", "are", "you"]
    @test words_string("brlJohn.bineen") == ["brlJohn.bineen"]
    @test words_string("youlniniie!?o?") == ["youlniniie!?o?"]
    @test words_string("sadspacesNWUyMDWHellloThe quickx brown fox jumps over tarelazy tarelazydog.JArding") == ["sadspacesNWUyMDWHellloThe", "quickx", "brown", "fox", "jumps", "over", "tarelazy", "tarelazydog.JArding"]
    @test words_string("s!!") == ["s!!"]
    @test words_string("beore") == ["beore"]
    @test words_string("spa   A  random    string    wiorth     no    c ommas     or   spacesace") == ["spa", "A", "random", "string", "wiorth", "no", "c", "ommas", "or", "spacesace"]
    @test words_string("iThe quick brown fox jumps ovMultier tarelazy dog.") == ["iThe", "quick", "brown", "fox", "jumps", "ovMultier", "tarelazy", "dog."]
    @test words_string("n") == ["n"]
    @test words_string("l   A  random    string    wiorth     no    commas     or   spaesth") == ["l", "A", "random", "string", "wiorth", "no", "commas", "or", "spaesth"]
    @test words_string("The quick brown fox jAmazing, how a sentence can change, meaning just by, adding or removing, commasAmazing, how a sentence can change, meaning just by, addingThe quick browner th e ulazy dochangee,g. or removing, commas!!umg.cheangeg,") == ["The", "quick", "brown", "fox", "jAmazing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "adding", "or", "removing", "commasAmazing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "addingThe", "quick", "browner", "th", "e", "ulazy", "dochangee", "g.", "or", "removing", "commas!!umg.cheangeg"]
    @test words_string("change,jumpwiths") == ["change", "jumpwiths"]
    @test words_string("   A  random    string    with      no    commas     or   spaceTheHi, mry    name   is John. How     are    you?    quick brown fox jumpwiorths over tareaddHi, my    nam e   is J you?   ingsNWUyMDWJAr") == ["A", "random", "string", "with", "no", "commas", "or", "spaceTheHi", "mry", "name", "is", "John.", "How", "are", "you?", "quick", "brown", "fox", "jumpwiorths", "over", "tareaddHi", "my", "nam", "e", "is", "J", "you?", "ingsNWUyMDWJAr"]
    @test words_string("cochange,themmas!!") == ["cochange", "themmas!!"]
    @test words_string("tTwo spaces after,and no spaces in betweenh") == ["tTwo", "spaces", "after", "and", "no", "spaces", "in", "betweenh"]
    @test words_string("MAmazing,") == ["MAmazing"]
    @test words_string("The quick browspacesNWUyMDDWJArn fox jumps over th e lazy dog.") == ["The", "quick", "browspacesNWUyMDDWJArn", "fox", "jumps", "over", "th", "e", "lazy", "dog."]
    @test words_string("?") == ["?"]
    @test words_string("   A  rand om   i string    with      no    commas     or with") == ["A", "rand", "om", "i", "string", "with", "no", "commas", "or", "with"]
    @test words_string("dog.commaTheHi, my    name   is John. How     are    yo   A  random    string    withrown      fno    comma  quick brown fdog.ses") == ["dog.commaTheHi", "my", "name", "is", "John.", "How", "are", "yo", "A", "random", "string", "withrown", "fno", "comma", "quick", "brown", "fdog.ses"]
    @test words_string("ulazy") == ["ulazy"]
    @test words_string("tTwo") == ["tTwo"]
    @test words_string("rdmaoom") == ["rdmaoom"]
    @test words_string("HelloH,i") == ["HelloH", "i"]
    @test words_string("arBBThe qmpwiorths over tarelazy dog.changee,g.e") == ["arBBThe", "qmpwiorths", "over", "tarelazy", "dog.changee", "g.e"]
    @test words_string("Mulluti") == ["Mulluti"]
    @test words_string("Two spaces after,  one space before  , and no speaces in sbetween") == ["Two", "spaces", "after", "one", "space", "before", "and", "no", "speaces", "in", "sbetween"]
    @test words_string("e") == ["e"]
    @test words_string("onon") == ["onon"]
    @test words_string("seHellloThe quiUthx jumps over tarelazy dog.ntesnce") == ["seHellloThe", "quiUthx", "jumps", "over", "tarelazy", "dog.ntesnce"]
    @test words_string("ooazy") == ["ooazy"]
    @test words_string("   A  random    string    with      no    commwords,as     The qmpwiorths over tarelazy dog.changee,g.or   spaces") == ["A", "random", "string", "with", "no", "commwords", "as", "The", "qmpwiorths", "over", "tarelazy", "dog.changee", "g.or", "spaces"]
    @test words_string("oare") == ["oare"]
    @test words_string("Hhe") == ["Hhe"]
    @test words_string("Multi\nline\nstrin   A jumpwiordog.ths random    string    wiorth     no    commas     or   spacesthg\nHig,rtld!\nH") == ["Multi\nline\nstrin", "A", "jumpwiordog.ths", "random", "string", "wiorth", "no", "commas", "or", "spacesthg\nHig", "rtld!\nH"]
    @test words_string("yo   A  random    string c   wiorth     no    commas???") == ["yo", "A", "random", "string", "c", "wiorth", "no", "commas???"]
    @test words_string("   A  random    string    with  ddHi, my    nam e   is J you?   ingsNWUyMDWJAr") == ["A", "random", "string", "with", "ddHi", "my", "nam", "e", "is", "J", "you?", "ingsNWUyMDWJAr"]
    @test words_string("random") == ["random"]
    @test words_string("H   A  rand om    string    with      no     commas     or Hwithicommases, my    name   is John. How     are    you?   ") == ["H", "A", "rand", "om", "string", "with", "no", "commas", "or", "Hwithicommases", "my", "name", "is", "John.", "How", "are", "you?"]
    @test words_string("dog.commaTheHi, my    name   is John. How     are    yo   A  random    string    with      no h   comma  quick brown cThefdog.ses") == ["dog.commaTheHi", "my", "name", "is", "John.", "How", "are", "yo", "A", "random", "string", "with", "no", "h", "comma", "quick", "brown", "cThefdog.ses"]
    @test words_string("nrandon") == ["nrandon"]
    @test words_string("sbetween") == ["sbetween"]
    @test words_string("dog.commaTheHi, my    name   is John. How     are    yo  s A  random    string    with      no    commas    r or   spacesu?    quick brown fox jumpwiorths over tsarelazy dog.ses") == ["dog.commaTheHi", "my", "name", "is", "John.", "How", "are", "yo", "s", "A", "random", "string", "with", "no", "commas", "r", "or", "spacesu?", "quick", "brown", "fox", "jumpwiorths", "over", "tsarelazy", "dog.ses"]
    @test words_string("jumThe") == ["jumThe"]
    @test words_string("FLspacesTheoaost") == ["FLspacesTheoaost"]
    @test words_string(" e  A  rand ocommas     or with") == ["e", "A", "rand", "ocommas", "or", "with"]
    @test words_string("President,") == ["President"]
    @test words_string("Hello,") == ["Hello"]
    @test words_string("jumg.") == ["jumg."]
    @test words_string("ocommams") == ["ocommams"]
    @test words_string("commas???lniniie!") == ["commas???lniniie!"]
    @test words_string("angee,g.ommas") == ["angee", "g.ommas"]
    @test words_string("broowns") == ["broowns"]
    @test words_string("FWR") == ["FWR"]
    @test words_string("quicckx") == ["quicckx"]
    @test words_string("The quick browsl   A  random    string    wiorth     no    commas     or   spacesthpacesNWUyMDDWJArn fox jumps over th e lazy dog.") == ["The", "quick", "browsl", "A", "random", "string", "wiorth", "no", "commas", "or", "spacesthpacesNWUyMDDWJArn", "fox", "jumps", "over", "th", "e", "lazy", "dog."]
    @test words_string(",,,,,,,No words, here,,,,,,") == ["No", "words", "here"]
    @test words_string("   A  random    string    with      no    commwords,as     odr   spaces") == ["A", "random", "string", "with", "no", "commwords", "as", "odr", "spaces"]
    @test words_string("President,yldadzydoJowithhn, John, F, her,e,,,,,,Kennedy") == ["President", "yldadzydoJowithhn", "John", "F", "her", "e", "Kennedy"]
    @test words_string("yldadzydog.jumpslydoJowithhn,") == ["yldadzydog.jumpslydoJowithhn"]
    @test words_string("Hellloll,") == ["Hellloll"]
    @test words_string("Two spaces after,  one spaces beforfe  , and no spaces in beMulti\nline\nstring\nHwords,\ntween") == ["Two", "spaces", "after", "one", "spaces", "beforfe", "and", "no", "spaces", "in", "beMulti\nline\nstring\nHwords", "\ntween"]
    @test words_string("   A  random    string    wiorth  ThTHelo,e comma!  no   c ommas browner    or   spaces") == ["A", "random", "string", "wiorth", "ThTHelo", "e", "comma!", "no", "c", "ommas", "browner", "or", "spaces"]
    @test words_string("br   A  random    string    with      no    dcoowns") == ["br", "A", "random", "string", "with", "no", "dcoowns"]
    @test words_string(",") == String[]
    @test words_string("nn") == ["nn"]
    @test words_string("H    A  rand om    string    with      no   her,e,,,,,, commas     or withicommases, my    name   is John. How  spaace   are    you?u   ") == ["H", "A", "rand", "om", "string", "with", "no", "her", "e", "commas", "or", "withicommases", "my", "name", "is", "John.", "How", "spaace", "are", "you?u"]
    @test words_string("commasMullti!!") == ["commasMullti!!"]
    @test words_string("The quick brown fox jAmazing, how a sentence can change, meaning just by, adding or removing, commasAmazing, how a sentence can change, meaning just by, addingThe quick browner th e ulazy dochangmas!!umg.cheangeg,") == ["The", "quick", "brown", "fox", "jAmazing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "adding", "or", "removing", "commasAmazing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "addingThe", "quick", "browner", "th", "e", "ulazy", "dochangmas!!umg.cheangeg"]
    @test words_string("cThe theick browner th e lazy l   A  random    string    wiorth     no    commas     or   spaesthdochanngee,gn.ommasThTH") == ["cThe", "theick", "browner", "th", "e", "lazy", "l", "A", "random", "string", "wiorth", "no", "commas", "or", "spaesthdochanngee", "gn.ommasThTH"]
    @test words_string("The qfuick brown fox jumg.") == ["The", "qfuick", "brown", "fox", "jumg."]
    @test words_string("commas!!umg.cheangeg,") == ["commas!!umg.cheangeg"]
    @test words_string("taHelloH,iMultireaddHi,") == ["taHelloH", "iMultireaddHi"]
    @test words_string("youlniniie!?o?   A  random    string    with      no    commwords,as     or   spaces") == ["youlniniie!?o?", "A", "random", "string", "with", "no", "commwords", "as", "or", "spaces"]
    @test words_string("John.inor") == ["John.inor"]
    @test words_string("oyo") == ["oyo"]
    @test words_string("The quick brown fox jumps over the lazyy dog.") == ["The", "quick", "brown", "fox", "jumps", "over", "the", "lazyy", "dog."]
    @test words_string("TheHi, my    name   is John. How     are    y ou?    quick brown fox jumpwiorths over tareaddHi, my    nam e   is J you?   ing") == ["TheHi", "my", "name", "is", "John.", "How", "are", "y", "ou?", "quick", "brown", "fox", "jumpwiorths", "over", "tareaddHi", "my", "nam", "e", "is", "J", "you?", "ing"]
    @test words_string("ThTHelo,e") == ["ThTHelo", "e"]
    @test words_string("The quick brown fox jAmazing, how a sentence can change, meaning just by, adding or removing, commasAmazing, how a sThe,quick,brown,foxdogwords,ngee,g.er,the,lazy,dog.entence can change, meaning just by, addingThe quick browner th e ulazy dochangmas!!umg .cheangeg,") == ["The", "quick", "brown", "fox", "jAmazing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "adding", "or", "removing", "commasAmazing", "how", "a", "sThe", "quick", "brown", "foxdogwords", "ngee", "g.er", "the", "lazy", "dog.entence", "can", "change", "meaning", "just", "by", "addingThe", "quick", "browner", "th", "e", "ulazy", "dochangmas!!umg", ".cheangeg"]
    @test words_string("The qmpwiorths ovchange,withs,ngee,g.") == ["The", "qmpwiorths", "ovchange", "withs", "ngee", "g."]
    @test words_string("oyoo") == ["oyoo"]
    @test words_string("Hi,rd!") == ["Hi", "rd!"]
    @test words_string("Two spaces after,  one space before  , andspFLoaostacesNDWUyMDDWJArspeaces in between") == ["Two", "spaces", "after", "one", "space", "before", "andspFLoaostacesNDWUyMDDWJArspeaces", "in", "between"]
    @test words_string("The quick b rown fox jumps over the lazy dmases") == ["The", "quick", "b", "rown", "fox", "jumps", "over", "the", "lazy", "dmases"]
    @test words_string("yldadzydog.jumpslydoJowthhnu,") == ["yldadzydog.jumpslydoJowthhnu"]
    @test words_string("spaesth") == ["spaesth"]
    @test words_string("The qmpwiorths ovchange,withs,ngee,g.Hi,rd!") == ["The", "qmpwiorths", "ovchange", "withs", "ngee", "g.Hi", "rd!"]
    @test words_string("cThe quick browner th e lazy dochangee,g.omjumThe qu ick b rown fox jumps over the lazy dog.commasespzzsmas") == ["cThe", "quick", "browner", "th", "e", "lazy", "dochangee", "g.omjumThe", "qu", "ick", "b", "rown", "fox", "jumps", "over", "the", "lazy", "dog.commasespzzsmas"]
    @test words_string("HigarBBThe qmpwiorths over tarelazy dog.changee,g.e,rtld!") == ["HigarBBThe", "qmpwiorths", "over", "tarelazy", "dog.changee", "g.e", "rtld!"]
    @test words_string("adnd") == ["adnd"]
    @test words_string("jarBBTheuust") == ["jarBBTheuust"]
    @test words_string("jummps") == ["jummps"]
    @test words_string("F,n") == ["F", "n"]
    @test words_string("dog.commaTheHi, my    name   is John. How     are    yo  s A  random    string    with      no    commas    r or   spacesu?    quick brown fox jumpwiorths over tsases") == ["dog.commaTheHi", "my", "name", "is", "John.", "How", "are", "yo", "s", "A", "random", "string", "with", "no", "commas", "r", "or", "spacesu?", "quick", "brown", "fox", "jumpwiorths", "over", "tsases"]
    @test words_string("dog.cogmmases") == ["dog.cogmmases"]
    @test words_string("   A  random    string    wiorth  ThTHespacesNDWUyMDDWJAspacesNDWUyMDDWJArrlo,e comma!  no   c ommas browner    or   spaces") == ["A", "random", "string", "wiorth", "ThTHespacesNDWUyMDDWJAspacesNDWUyMDDWJArrlo", "e", "comma!", "no", "c", "ommas", "browner", "or", "spaces"]
    @test words_string("linee!") == ["linee!"]
    @test words_string("Hicommases,") == ["Hicommases"]
    @test words_string("nTLxTIkG") == ["nTLxTIkG"]
    @test words_string("cTehe quick browner th e lazy dochangee,g.ommas") == ["cTehe", "quick", "browner", "th", "e", "lazy", "dochangee", "g.ommas"]
    @test words_string("dog.commaTheHi, my    name   is John. How     are    yo  s A  random    string  ThTHuick brown fox jumpwiorths over tsases") == ["dog.commaTheHi", "my", "name", "is", "John.", "How", "are", "yo", "s", "A", "random", "string", "ThTHuick", "brown", "fox", "jumpwiorths", "over", "tsases"]
    @test words_string("TheHi, my    name   is John. How     are    you?    quick brown fox jumpwiortyhs over tarelazy dog.") == ["TheHi", "my", "name", "is", "John.", "How", "are", "you?", "quick", "brown", "fox", "jumpwiortyhs", "over", "tarelazy", "dog."]
    @test words_string("cnamehangrandome,") == ["cnamehangrandome"]
    @test words_string("cThe quick browner th e lazy docahangee,g.omjumThe qu ick b rown fox jumps over the lazy dog.commasespzzsmas") == ["cThe", "quick", "browner", "th", "e", "lazy", "docahangee", "g.omjumThe", "qu", "ick", "b", "rown", "fox", "jumps", "over", "the", "lazy", "dog.commasespzzsmas"]
    @test words_string("ce") == ["ce"]
    @test words_string("sa") == ["sa"]
    @test words_string("oo") == ["oo"]
    @test words_string("MAmazing, how a sentencse can change, meaningb just by, addin!ulunti") == ["MAmazing", "how", "a", "sentencse", "can", "change", "meaningb", "just", "by", "addin!ulunti"]
    @test words_string("TheHi, my    name   is John. How     are    aryou?    quick brown fox jumpwiortyhs over tarelazy dog.") == ["TheHi", "my", "name", "is", "John.", "How", "are", "aryou?", "quick", "brown", "fox", "jumpwiortyhs", "over", "tarelazy", "dog."]
    @test words_string("ddHi,") == ["ddHi"]
    @test words_string("   A  random    string    with      no    commwords,as The quick browneer th e lazy dochangee,g.    The qmpwiorths over tarelazy dog.changee,g.or   spaces") == ["A", "random", "string", "with", "no", "commwords", "as", "The", "quick", "browneer", "th", "e", "lazy", "dochangee", "g.", "The", "qmpwiorths", "over", "tarelazy", "dog.changee", "g.or", "spaces"]
    @test words_string("dog.commaTheHi, my    name   is John. xHow     are    yo  s A  random    string    with      no    commas    r or   spacesu?    quick brown fox jumpwiorths over tsases") == ["dog.commaTheHi", "my", "name", "is", "John.", "xHow", "are", "yo", "s", "A", "random", "string", "with", "no", "commas", "r", "or", "spacesu?", "quick", "brown", "fox", "jumpwiorths", "over", "tsases"]
    @test words_string("spacesNDWUWyMDDWJAspacesNDWUyMDDWJArr") == ["spacesNDWUWyMDDWJAspacesNDWUyMDDWJArr"]
    @test words_string("rddandom") == ["rddandom"]
    @test words_string("lin") == ["lin"]
    @test words_string("chspacesNDWUThe qmpwiorths over tarelazy dog.changee,g.yMDDWJArwngec,") == ["chspacesNDWUThe", "qmpwiorths", "over", "tarelazy", "dog.changee", "g.yMDDWJArwngec"]
    @test words_string("lazydog.") == ["lazydog."]
    @test words_string("ovchange,theer") == ["ovchange", "theer"]
    @test words_string("theick") == ["theick"]
    @test words_string("The quick brown fox jumps over th e l dog.") == ["The", "quick", "brown", "fox", "jumps", "over", "th", "e", "l", "dog."]
    @test words_string("b") == ["b"]
    @test words_string("cheangMulti\nline!\nstring\nHello,i\nworld!\ne,") == ["cheangMulti\nline!\nstring\nHello", "i\nworld!\ne"]
    @test words_string("Hello,rds,ngee,g.") == ["Hello", "rds", "ngee", "g."]
    @test words_string("saspa   A  random    string    wiorth     no    c ommas     or   spacesacedding") == ["saspa", "A", "random", "string", "wiorth", "no", "c", "ommas", "or", "spacesacedding"]
    @test words_string("JohThe,quick,brown,fox,jumps,over,the,tlazy,dog.") == ["JohThe", "quick", "brown", "fox", "jumps", "over", "the", "tlazy", "dog."]
    @test words_string("uThe quick brown fox jumpzs over th e lHi, my    name   is   A  random    string    wiorth     no    commas     or   spaces John. How     are    you?   azy dog.jumps") == ["uThe", "quick", "brown", "fox", "jumpzs", "over", "th", "e", "lHi", "my", "name", "is", "A", "random", "string", "wiorth", "no", "commas", "or", "spaces", "John.", "How", "are", "you?", "azy", "dog.jumps"]
    @test words_string("The qmpwiorths over tarickelazy dog.changee,g.") == ["The", "qmpwiorths", "over", "tarickelazy", "dog.changee", "g."]
    @test words_string(" AMulti\nline\nstTherHwords,r\n  ") == ["AMulti\nline\nstTherHwords", "r\n"]
    @test words_string("uThe quick brown fox jumpzs over th e lHi, my    name   is   A  random    string   Multi\nline\n\nstring\nHello,\nworld!\n wiorth     no    commas     or   spaces John. How     are    you?   azy dog.jumps") == ["uThe", "quick", "brown", "fox", "jumpzs", "over", "th", "e", "lHi", "my", "name", "is", "A", "random", "string", "Multi\nline\n\nstring\nHello", "\nworld!\n", "wiorth", "no", "commas", "or", "spaces", "John.", "How", "are", "you?", "azy", "dog.jumps"]
    @test words_string("iiiis") == ["iiiis"]
    @test words_string("   A  randomstrHwords,    string    with      no    commas    r or   spaces") == ["A", "randomstrHwords", "string", "with", "no", "commas", "r", "or", "spaces"]
    @test words_string("yo   A  randomas???") == ["yo", "A", "randomas???"]
    @test words_string("spsacesTheHi, my    name   is John.The quick b rown fox quickjumps over the lazy dog.readding") == ["spsacesTheHi", "my", "name", "is", "John.The", "quick", "b", "rown", "fox", "quickjumps", "over", "the", "lazy", "dog.readding"]
    @test words_string("commas???lnine!") == ["commas???lnine!"]
    @test words_string("dog.") == ["dog."]
    @test words_string("The quick brown fox jueBThTHello,emps over change,the lazydog.") == ["The", "quick", "brown", "fox", "jueBThTHello", "emps", "over", "change", "the", "lazydog."]
    @test words_string("spa") == ["spa"]
    @test words_string("dog.commaTheHi, my    name   is John. How  Two spaces after,  one space before  , and no spaces in between   are    yo   A  random    string    with      no    commas    r or   spacesu?    quick brown fox jumpwiorths over tsarelazy dog.ses") == ["dog.commaTheHi", "my", "name", "is", "John.", "How", "Two", "spaces", "after", "one", "space", "before", "and", "no", "spaces", "in", "between", "are", "yo", "A", "random", "string", "with", "no", "commas", "r", "or", "spacesu?", "quick", "brown", "fox", "jumpwiorths", "over", "tsarelazy", "dog.ses"]
    @test words_string("yMulti") == ["yMulti"]
    @test words_string("ingsNWUyMDWJAr") == ["ingsNWUyMDWJAr"]
    @test words_string("The quick brown fox jumps over tarelazy doTwo spaces aaf,ter,  one space before  , and no speaces in betweeng.") == ["The", "quick", "brown", "fox", "jumps", "over", "tarelazy", "doTwo", "spaces", "aaf", "ter", "one", "space", "before", "and", "no", "speaces", "in", "betweeng."]
    @test words_string("omas") == ["omas"]
    @test words_string("uHjumThe") == ["uHjumThe"]
    @test words_string("aaf,ter,") == ["aaf", "ter"]
    @test words_string("jusAmazing, how a sentence can cnamehange, meaning ovMultierjust by, adding or removing, commas!tquickxtUth") == ["jusAmazing", "how", "a", "sentence", "can", "cnamehange", "meaning", "ovMultierjust", "by", "adding", "or", "removing", "commas!tquickxtUth"]
    @test words_string(",T") == ["T"]
    @test words_string("rom") == ["rom"]
    @test words_string("dog.changee,g.yMDDWJAr") == ["dog.changee", "g.yMDDWJAr"]
    @test words_string("ldog.changee,g.yMDDWJArwngec,zydog.") == ["ldog.changee", "g.yMDDWJArwngec", "zydog."]
    @test words_string("The quick brown fox jAmazing, how a sentence can change, meaning just by, adding or removing, commatTwosAmazing, how a sThe,quick,brown,foxdogwords,ngee,g.er,the,lazy,dog.entence can change, meaning just by, addingThe quick browner th e ulazy dochangm!!umg .cheangeg,") == ["The", "quick", "brown", "fox", "jAmazing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "adding", "or", "removing", "commatTwosAmazing", "how", "a", "sThe", "quick", "brown", "foxdogwords", "ngee", "g.er", "the", "lazy", "dog.entence", "can", "change", "meaning", "just", "by", "addingThe", "quick", "browner", "th", "e", "ulazy", "dochangm!!umg", ".cheangeg"]
    @test words_string("yMulti\nline!\nstring\nHecThe quick browner th e lazy docahangee,g.omjumThe qu ick b rown fox jumps over the lazy dog.commasespzzsmasloyolo,i\nworld!\n?") == ["yMulti\nline!\nstring\nHecThe", "quick", "browner", "th", "e", "lazy", "docahangee", "g.omjumThe", "qu", "ick", "b", "rown", "fox", "jumps", "over", "the", "lazy", "dog.commasespzzsmasloyolo", "i\nworld!\n?"]
    @test words_string("lazy") == ["lazy"]
    @test words_string("Multi\nline\nstTheerHwords,r\n") == ["Multi\nline\nstTheerHwords", "r\n"]
    @test words_string("Amazing, how a sentence can change, meaning ovMultspeacesierjust by, adding or removing, commas!") == ["Amazing", "how", "a", "sentence", "can", "change", "meaning", "ovMultspeacesierjust", "by", "adding", "or", "removing", "commas!"]
    @test words_string("yMulti\nline!\nstring\nHello,i\nworl!\n?") == ["yMulti\nline!\nstring\nHello", "i\nworl!\n?"]
    @test words_string("F,") == ["F"]
    @test words_string("dog.commaTheHi, my    name   is John. How     are    yo   A  random    string    withrown      fno    comma  quick brs") == ["dog.commaTheHi", "my", "name", "is", "John.", "How", "are", "yo", "A", "random", "string", "withrown", "fno", "comma", "quick", "brs"]
    @test words_string("TheHi, my    name   is John. How     are    you?    quick brown fox jumpwiorths ov er tareaddHi, my  jusAmazing,  nam e   is J you?   ing") == ["TheHi", "my", "name", "is", "John.", "How", "are", "you?", "quick", "brown", "fox", "jumpwiorths", "ov", "er", "tareaddHi", "my", "jusAmazing", "nam", "e", "is", "J", "you?", "ing"]
    @test words_string("The quick  b rown fox jumps over the lazy dog.") == ["The", "quick", "b", "rown", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("eBThTHelleo,e") == ["eBThTHelleo", "e"]
    @test words_string("cTehe") == ["cTehe"]
    @test words_string("Ammazing, how a sentence can changee, meaning just by, adding or removing, commas!") == ["Ammazing", "how", "a", "sentence", "can", "changee", "meaning", "just", "by", "adding", "or", "removing", "commas!"]
    @test words_string("h") == ["h"]
    @test words_string("chspacesNDWUThe qmpwiorths over tarelazy dog.changee,g.yMtDDWJArwngec,") == ["chspacesNDWUThe", "qmpwiorths", "over", "tarelazy", "dog.changee", "g.yMtDDWJArwngec"]
    @test words_string("jumpwiortyhs") == ["jumpwiortyhs"]
    @test words_string("Hi, my    nameonon   is J you?   ") == ["Hi", "my", "nameonon", "is", "J", "you?"]
    @test words_string("Two spaces after,  one spaces beforfe  , and no saces in beMulti\nline\nstring\nHwords,\ntween") == ["Two", "spaces", "after", "one", "spaces", "beforfe", "and", "no", "saces", "in", "beMulti\nline\nstring\nHwords", "\ntween"]
    @test words_string("ohvchange,tMulti\nlinjumpzs\nworld!\nheer") == ["ohvchange", "tMulti\nlinjumpzs\nworld!\nheer"]
    @test words_string("eBtarickelazy") == ["eBtarickelazy"]
    @test words_string("yldadzydog.jumpslydoJowithhnn,") == ["yldadzydog.jumpslydoJowithhnn"]
    @test words_string("hth") == ["hth"]
    @test words_string("The qmpwiortths ovchange,withs,TwoBngee,g.Hi,rd!") == ["The", "qmpwiortths", "ovchange", "withs", "TwoBngee", "g.Hi", "rd!"]
    @test words_string("Hicommases, my    namem   is are    you?   ") == ["Hicommases", "my", "namem", "is", "are", "you?"]
    @test words_string("uThe quick brown fox jumpzs over th e lHi, my    namer   is   A  random    string    witTwo spaces ohn. How     are    you?   azy dog.jumps") == ["uThe", "quick", "brown", "fox", "jumpzs", "over", "th", "e", "lHi", "my", "namer", "is", "A", "random", "string", "witTwo", "spaces", "ohn.", "How", "are", "you?", "azy", "dog.jumps"]
    @test words_string("cThe q,uick browner th e lazy dochangee,g.omm,as") == ["cThe", "q", "uick", "browner", "th", "e", "lazy", "dochangee", "g.omm", "as"]
    @test words_string("comminors???") == ["comminors???"]
    @test words_string("dog.changee,youlniniie!?o?g.yMDDWJAr") == ["dog.changee", "youlniniie!?o?g.yMDDWJAr"]
    @test words_string("Multi\nline\nstrin   A  random    string    th     no    commas     or   spacesthg\nHi,rtld!\nH") == ["Multi\nline\nstrin", "A", "random", "string", "th", "no", "commas", "or", "spacesthg\nHi", "rtld!\nH"]
    @test words_string("Multi\nline\nstring\nHello,qmpwiorths\nworld!\n") == ["Multi\nline\nstring\nHello", "qmpwiorths\nworld!\n"]
    @test words_string("browsl") == ["browsl"]
    @test words_string("   A  random    string    wiorth  ThTHelo,e comma!  no   c oarBBThe qmpwiorths over tarelazy dog.changee,g.emmas browner    or   spaces") == ["A", "random", "string", "wiorth", "ThTHelo", "e", "comma!", "no", "c", "oarBBThe", "qmpwiorths", "over", "tarelazy", "dog.changee", "g.emmas", "browner", "or", "spaces"]
    @test words_string("comminmors???") == ["comminmors???"]
    @test words_string("F,,n") == ["F", "n"]
    @test words_string("yyQwaoYdS") == ["yyQwaoYdS"]
    @test words_string("you?y?") == ["you?y?"]
    @test words_string("browner") == ["browner"]
    @test words_string("kquickcommas???lniniie!") == ["kquickcommas???lniniie!"]
    @test words_string("   A  rand om   i string    with      no   commas     or with") == ["A", "rand", "om", "i", "string", "with", "no", "commas", "or", "with"]
    @test words_string("shbeMulti?wu?") == ["shbeMulti?wu?"]
    @test words_string("brli A  neen") == ["brli", "A", "neen"]
    @test words_string("spacesNDWUThe") == ["spacesNDWUThe"]
    @test words_string("HelllroThe quickx brown fox jumps over tarelazy tarelazydog.") == ["HelllroThe", "quickx", "brown", "fox", "jumps", "over", "tarelazy", "tarelazydog."]
    @test words_string("ThTH   A  random     string    with      no    commas     or   spacesello,e") == ["ThTH", "A", "random", "string", "with", "no", "commas", "or", "spacesello", "e"]
    @test words_string("spacesThe quick browneeWr Uth e lazy dochangee,g.NWUyMDDWJArdog.H") == ["spacesThe", "quick", "browneeWr", "Uth", "e", "lazy", "dochangee", "g.NWUyMDDWJArdog.H"]
    @test words_string("ntesn") == ["ntesn"]
    @test words_string("saddiang") == ["saddiang"]
    @test words_string("BBThe") == ["BBThe"]
    @test words_string("HecThe") == ["HecThe"]
    @test words_string("nam") == ["nam"]
    @test words_string("cMulti\nline\nstTherHwords,r\nommas!") == ["cMulti\nline\nstTherHwords", "r\nommas!"]
    @test words_string("noiin") == ["noiin"]
    @test words_string("eBThTHelloh,e") == ["eBThTHelloh", "e"]
    @test words_string("The quick brown fox jumpsThe quick browspacesNWUyMDDWJArn fox jumps over th e lazy dog. over the lazy dog.") == ["The", "quick", "brown", "fox", "jumpsThe", "quick", "browspacesNWUyMDDWJArn", "fox", "jumps", "over", "th", "e", "lazy", "dog.", "over", "the", "lazy", "dog."]
    @test words_string("randomas???") == ["randomas???"]
    @test words_string("thebrliick") == ["thebrliick"]
    @test words_string("cnamehangeThe quick brown fox jumps over change,the lazydog.,") == ["cnamehangeThe", "quick", "brown", "fox", "jumps", "over", "change", "the", "lazydog."]
    @test words_string("Homicommase s, my    name   is are    youbetween?   ") == ["Homicommase", "s", "my", "name", "is", "are", "youbetween?"]
    @test words_string("The,ThisStringHasNNoSpaces,,,,,No words, here,,,,,, quick .cheangeg,brown fox jumps over th e l dog.") == ["The", "ThisStringHasNNoSpaces", "No", "words", "here", "quick", ".cheangeg", "brown", "fox", "jumps", "over", "th", "e", "l", "dog."]
    @test words_string("eHi, my   i namck,brown,fox,jumps,over,the,lazy,dog. you?   zy") == ["eHi", "my", "i", "namck", "brown", "fox", "jumps", "over", "the", "lazy", "dog.", "you?", "zy"]
    @test words_string("removing,") == ["removing"]
    @test words_string("Raav") == ["Raav"]
    @test words_string("ThTTHelo,e") == ["ThTTHelo", "e"]
    @test words_string("namem") == ["namem"]
    @test words_string("sbetwecTeheen") == ["sbetwecTeheen"]
    @test words_string("heer") == ["heer"]
    @test words_string("ujummThe qfuick brown fox jumg.ps") == ["ujummThe", "qfuick", "brown", "fox", "jumg.ps"]
    @test words_string("ck browner th e lazy dochangee,g.ommas") == ["ck", "browner", "th", "e", "lazy", "dochangee", "g.ommas"]
    @test words_string("zy") == ["zy"]
    @test words_string("The quick bsrowspacesNWUyMDDWJArn fox jumps over th e lazy dog.") == ["The", "quick", "bsrowspacesNWUyMDDWJArn", "fox", "jumps", "over", "th", "e", "lazy", "dog."]
    @test words_string("cnaranddocPresident,mehange,") == ["cnaranddocPresident", "mehange"]
    @test words_string("upjumps") == ["upjumps"]
    @test words_string("cThe quick browniiiser th you?uangee,g.ommas") == ["cThe", "quick", "browniiiser", "th", "you?uangee", "g.ommas"]
    @test words_string("ing") == ["ing"]
    @test words_string("bbrlJohn.binee") == ["bbrlJohn.binee"]
    @test words_string("hnoiin") == ["hnoiin"]
    @test words_string("   A  random    string    with      no    commwords,asver tarelazy dog.changee,g.or   spaces") == ["A", "random", "string", "with", "no", "commwords", "asver", "tarelazy", "dog.changee", "g.or", "spaces"]
    @test words_string("cnamcehange,") == ["cnamcehange"]
    @test words_string(",,,,,,N,o") == ["N", "o"]
    @test words_string("The quick browne fox jumps over tarelazy doTwo spaces aaf,ter,  one space before  , and no speaces in betweeng.") == ["The", "quick", "browne", "fox", "jumps", "over", "tarelazy", "doTwo", "spaces", "aaf", "ter", "one", "space", "before", "and", "no", "speaces", "in", "betweeng."]
    @test words_string("!s!s!") == ["!s!s!"]
    @test words_string("ss") == ["ss"]
    @test words_string("Multi\nline\nstrbrowslin   A jumpwiordog.ths random    string    wiorth     no    commas     or   spacesthg\nHig,rtld!\nH") == ["Multi\nline\nstrbrowslin", "A", "jumpwiordog.ths", "random", "string", "wiorth", "no", "commas", "or", "spacesthg\nHig", "rtld!\nH"]
    @test words_string("betweeng.") == ["betweeng."]
    @test words_string("brThe quick b rown fox jumps over the lazy dog.n") == ["brThe", "quick", "b", "rown", "fox", "jumps", "over", "the", "lazy", "dog.n"]
    @test words_string("seHelllThe quick browner th e lazy do changee,g.oThe") == ["seHelllThe", "quick", "browner", "th", "e", "lazy", "do", "changee", "g.oThe"]
    @test words_string("sbbetwecTeheen") == ["sbbetwecTeheen"]
    @test words_string("randomstrHwords,") == ["randomstrHwords"]
    @test words_string("Hi, my    name  you?   ") == ["Hi", "my", "name", "you?"]
    @test words_string("ladzydoga.") == ["ladzydoga."]
    @test words_string("ovchange,withs,ngee,g.Hi,rd!") == ["ovchange", "withs", "ngee", "g.Hi", "rd!"]
    @test words_string("jumpwiorF,ntyhs") == ["jumpwiorF", "ntyhs"]
    @test words_string("iiicommas!ulutiis") == ["iiicommas!ulutiis"]
    @test words_string("BrH    A  rand om    string    with      no   her,e,,,,,, commas     or withicommases, my    name   is John. How  spaace   are    you?u   spaacea") == ["BrH", "A", "rand", "om", "string", "with", "no", "her", "e", "commas", "or", "withicommases", "my", "name", "is", "John.", "How", "spaace", "are", "you?u", "spaacea"]
    @test words_string("sshoHhew?") == ["sshoHhew?"]
    @test words_string("oom") == ["oom"]
    @test words_string("dstTherHwords,r") == ["dstTherHwords", "r"]
    @test words_string("cheangge,") == ["cheangge"]
    @test words_string("The quick brown fox jAmazing, how a sentence can change, meaning just by, adding or removing, commasAmazing, how a sThe,quick,brown,foxdogwords,ngee,g.er,the,lazy,dog.entecThe quick browner th e lazy dochangee,g.omm,asaning just by, addingThe quick browner th e ulazy dochangmas!!umg .cheangeg,") == ["The", "quick", "brown", "fox", "jAmazing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "adding", "or", "removing", "commasAmazing", "how", "a", "sThe", "quick", "brown", "foxdogwords", "ngee", "g.er", "the", "lazy", "dog.entecThe", "quick", "browner", "th", "e", "lazy", "dochangee", "g.omm", "asaning", "just", "by", "addingThe", "quick", "browner", "th", "e", "ulazy", "dochangmas!!umg", ".cheangeg"]
    @test words_string("The qmpwioBBrths over tarelazy dog.changee,g.") == ["The", "qmpwioBBrths", "over", "tarelazy", "dog.changee", "g."]
    @test words_string("d   A  random    string    wiorth     no    c ommas     or   spacesV") == ["d", "A", "random", "string", "wiorth", "no", "c", "ommas", "or", "spacesV"]
    @test words_string("cant") == ["cant"]
    @test words_string("jommas!umg.") == ["jommas!umg."]
    @test words_string("Hi,my,name,is,John") == ["Hi", "my", "name", "is", "John"]
    @test words_string("Hi,my,name,is,John,") == ["Hi", "my", "name", "is", "John"]
    @test words_string(",    , , , ,    ,") == String[]
    @test words_string("1,2,3,4,5,6") == ["1", "2", "3", "4", "5", "6"]
    @test words_string("Hi!My,Name     is John") == ["Hi!My", "Name", "is", "John"]
    @test words_string("Two spaces after,  one space before  , and no spaces in betwstringeen") == ["Two", "spaces", "after", "one", "space", "before", "and", "no", "spaces", "in", "betwstringeen"]
    @test words_string("   A  srandom    string    with     no    commaAs     or   spaces") == ["A", "srandom", "string", "with", "no", "commaAs", "or", "spaces"]
    @test words_string("The,quick,rbrown,fox,jumps,over,the,lazy,dog.") == ["The", "quick", "rbrown", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("President, John, F, KennedyThe,quick,brown,fox,jumps,over,the,lazy,dog.") == ["President", "John", "F", "KennedyThe", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("Hi, my    naF,me   is John. How     are    you?   ") == ["Hi", "my", "naF", "me", "is", "John.", "How", "are", "you?"]
    @test words_string("President, John, F, KennedyThe,quick,brown,fox,jumps,over,Hi, my    name   is John. How     ar e    you?   the,lazy,dog.") == ["President", "John", "F", "KennedyThe", "quick", "brown", "fox", "jumps", "over", "Hi", "my", "name", "is", "John.", "How", "ar", "e", "you?", "the", "lazy", "dog."]
    @test words_string("my") == ["my"]
    @test words_string("Hi, my    name   is John. How     are    ychange,ou?   ") == ["Hi", "my", "name", "is", "John.", "How", "are", "ychange", "ou?"]
    @test words_string("President, John, F, KennedyThe,orquick,brown,fox,jumps,over,the,lazy,dog.") == ["President", "John", "F", "KennedyThe", "orquick", "brown", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("Ama zing, how a sentence can change, meaning just by, adding or removing, commas!") == ["Ama", "zing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "adding", "or", "removing", "commas!"]
    @test words_string("srandom") == ["srandom"]
    @test words_string("Thbetweene,quick,brown,fox,jumps,over,the,lazy,dog.") == ["Thbetweene", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("Kennedy") == ["Kennedy"]
    @test words_string("beThe,quick,rbrown,fox,jumps,over,the,lazy,dog.fore") == ["beThe", "quick", "rbrown", "fox", "jumps", "over", "the", "lazy", "dog.fore"]
    @test words_string("icommaAs") == ["icommaAs"]
    @test words_string("beThe,quick,rbrown,fox,jumps,over,the,lazy,do,g.fore") == ["beThe", "quick", "rbrown", "fox", "jumps", "over", "the", "lazy", "do", "g.fore"]
    @test words_string("Two spaces atfter,  one space before  , and no spaces in betwstringeen") == ["Two", "spaces", "atfter", "one", "space", "before", "and", "no", "spaces", "in", "betwstringeen"]
    @test words_string("jHello,ust") == ["jHello", "ust"]
    @test words_string("Hi, my    naF,me   is Johow     areover    you?   ") == ["Hi", "my", "naF", "me", "is", "Johow", "areover", "you?"]
    @test words_string("zing,") == ["zing"]
    @test words_string("beThe") == ["beThe"]
    @test words_string("dsrandom") == ["dsrandom"]
    @test words_string("comMubeThe,quick,rbrown,fox,jumps,over,the,lazy,do,g.foreltimaAs") == ["comMubeThe", "quick", "rbrown", "fox", "jumps", "over", "the", "lazy", "do", "g.foreltimaAs"]
    @test words_string("sMulti\nline\nstring\nHello,\nworld!\npaceno") == ["sMulti\nline\nstring\nHello", "\nworld!\npaceno"]
    @test words_string("Twrandomo spaces after,  one space before  , aTwond no spaces in between") == ["Twrandomo", "spaces", "after", "one", "space", "before", "aTwond", "no", "spaces", "in", "between"]
    @test words_string("Hi,  my    name   is John. How     are    ychange,ou? aTwond") == ["Hi", "my", "name", "is", "John.", "How", "are", "ychange", "ou?", "aTwond"]
    @test words_string("EeJKnUSVXF") == ["EeJKnUSVXF"]
    @test words_string("qk") == ["qk"]
    @test words_string("world!") == ["world!"]
    @test words_string("President, John, F, K,ennedyThe,quicjumpsk,brown,fox,jumps,over,Hi, my    name   is John. How     ar e    you?   the,lazy,dog.") == ["President", "John", "F", "K", "ennedyThe", "quicjumpsk", "brown", "fox", "jumps", "over", "Hi", "my", "name", "is", "John.", "How", "ar", "e", "you?", "the", "lazy", "dog."]
    @test words_string("y") == ["y"]
    @test words_string("   A  srandom    string    with     no    commaAs     ort   spaces") == ["A", "srandom", "string", "with", "no", "commaAs", "ort", "spaces"]
    @test words_string("world!!") == ["world!!"]
    @test words_string("ychange,ou?") == ["ychange", "ou?"]
    @test words_string("Amazing, how a sentence ianing just jHello,ustby, adding or removing, commas!") == ["Amazing", "how", "a", "sentence", "ianing", "just", "jHello", "ustby", "adding", "or", "removing", "commas!"]
    @test words_string("moving,") == ["moving"]
    @test words_string("   A  srandom     string    with     no    commaAs     ort   spaces") == ["A", "srandom", "string", "with", "no", "commaAs", "ort", "spaces"]
    @test words_string("ychange,Hi, my    name   is John. How     are    ychange,ou?   ou?") == ["ychange", "Hi", "my", "name", "is", "John.", "How", "are", "ychange", "ou?", "ou?"]
    @test words_string("BCKkvp") == ["BCKkvp"]
    @test words_string("azing,re") == ["azing", "re"]
    @test words_string("eKenney") == ["eKenney"]
    @test words_string("Hi,  my    name   is oJohn. How     are    ychange,ou? aTwond") == ["Hi", "my", "name", "is", "oJohn.", "How", "are", "ychange", "ou?", "aTwond"]
    @test words_string("Hi,  my    name   is John. How     are    ychaKennedyThe,quick,brown,fox,jumps,over,Hi,nge,ou? aTwond") == ["Hi", "my", "name", "is", "John.", "How", "are", "ychaKennedyThe", "quick", "brown", "fox", "jumps", "over", "Hi", "nge", "ou?", "aTwond"]
    @test words_string("cosmmasychancge,ou?!") == ["cosmmasychancge", "ou?!"]
    @test words_string("lazyThe,quick,rbrown,fox,jumps,over,the,lazy,dog.") == ["lazyThe", "quick", "rbrown", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("beforsMultiethe,lazy,dog.") == ["beforsMultiethe", "lazy", "dog."]
    @test words_string("Two spTwrandomoaces atfter,  one space before  , and no spaces in betwstringeen") == ["Two", "spTwrandomoaces", "atfter", "one", "space", "before", "and", "no", "spaces", "in", "betwstringeen"]
    @test words_string("sMulti\nline\nsaddingtring\nHello,\nworld!\npaceno") == ["sMulti\nline\nsaddingtring\nHello", "\nworld!\npaceno"]
    @test words_string("lazAmazing, how a sentence can change, meaning just by, adding or removing, commas!y") == ["lazAmazing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "adding", "or", "removing", "commas!y"]
    @test words_string("beTh") == ["beTh"]
    @test words_string("ychange,Hi, my    name   is John. How     are    ychang e,ou?   ou?") == ["ychange", "Hi", "my", "name", "is", "John.", "How", "are", "ychang", "e", "ou?", "ou?"]
    @test words_string("How") == ["How"]
    @test words_string("HoJohn,w") == ["HoJohn", "w"]
    @test words_string("comm") == ["comm"]
    @test words_string("leine") == ["leine"]
    @test words_string("Tjumps,over,the,lazy,dog.") == ["Tjumps", "over", "the", "lazy", "dog."]
    @test words_string("spTwrandomoaces") == ["spTwrandomoaces"]
    @test words_string("lei") == ["lei"]
    @test words_string("commma!") == ["commma!"]
    @test words_string("ychaKennedyThe,quick,brown,fox,jumps,over,Hi,nge,ou?") == ["ychaKennedyThe", "quick", "brown", "fox", "jumps", "over", "Hi", "nge", "ou?"]
    @test words_string("boeThe,quick,rbrown,fox,jumps,over,the,lazy,dog.fore") == ["boeThe", "quick", "rbrown", "fox", "jumps", "over", "the", "lazy", "dog.fore"]
    @test words_string("aftThe,quick,brown,fox,jumps,over,the,lazy,dog.er,") == ["aftThe", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog.er"]
    @test words_string("   A  srandom     string    with     no    comJohn.maAs     ort   spaces") == ["A", "srandom", "string", "with", "no", "comJohn.maAs", "ort", "spaces"]
    @test words_string("Hi, my    naF,me   is Johow     areover    you?   ello,ust") == ["Hi", "my", "naF", "me", "is", "Johow", "areover", "you?", "ello", "ust"]
    @test words_string("HoJohn") == ["HoJohn"]
    @test words_string("   A  sranadom    string    with     no    dcommaAs     or   spaces") == ["A", "sranadom", "string", "with", "no", "dcommaAs", "or", "spaces"]
    @test words_string("lazAmazing,") == ["lazAmazing"]
    @test words_string("ychaKennedyThe,quick,brown,fox,jumps,ovesMulti\nline\nsaddingtring\nHello,\nworld!\npacenor,Hi,nge,ou?") == ["ychaKennedyThe", "quick", "brown", "fox", "jumps", "ovesMulti\nline\nsaddingtring\nHello", "\nworld!\npacenor", "Hi", "nge", "ou?"]
    @test words_string("atfter,") == ["atfter"]
    @test words_string("President, John, F, KennedyThnamee,quick,brown,fox,jumps,over,the,lazy,dog.") == ["President", "John", "F", "KennedyThnamee", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("yXdEXoUU") == ["yXdEXoUU"]
    @test words_string("EeJKnUSVF") == ["EeJKnUSVF"]
    @test words_string("Hi,  my    name   is John. How     are    ycPresident, John, F, Kennedyhange,ou? aTwond") == ["Hi", "my", "name", "is", "John.", "How", "are", "ycPresident", "John", "F", "Kennedyhange", "ou?", "aTwond"]
    @test words_string("BCKkvqkp") == ["BCKkvqkp"]
    @test words_string("BC   A  srandom     string    with     no    commaAs     ort   spaceskvp") == ["BC", "A", "srandom", "string", "with", "no", "commaAs", "ort", "spaceskvp"]
    @test words_string("yu?") == ["yu?"]
    @test words_string("The,quick,rbrown,fox,jumps,over,tog.") == ["The", "quick", "rbrown", "fox", "jumps", "over", "tog."]
    @test words_string("cosmmasychamnce,ou?!") == ["cosmmasychamnce", "ou?!"]
    @test words_string("Pre, F, K,ennedyThe,quicjumpsk,brown,fox,jumps,over,Hi, my    name   is John. How     ar e    you?   the,lazy,dog.") == ["Pre", "F", "K", "ennedyThe", "quicjumpsk", "brown", "fox", "jumps", "over", "Hi", "my", "name", "is", "John.", "How", "ar", "e", "you?", "the", "lazy", "dog."]
    @test words_string("Two spTwrandomoaces atfter,  one space before  , and no spaces in betwstri ngeen") == ["Two", "spTwrandomoaces", "atfter", "one", "space", "before", "and", "no", "spaces", "in", "betwstri", "ngeen"]
    @test words_string("ychange,Hi, my     name   is John. How     are    ychange,ou?   ou?") == ["ychange", "Hi", "my", "name", "is", "John.", "How", "are", "ychange", "ou?", "ou?"]
    @test words_string("Hi, my    naF,me   is Jomhow     areover    you?   ello,ust") == ["Hi", "my", "naF", "me", "is", "Jomhow", "areover", "you?", "ello", "ust"]
    @test words_string("KennedyThe,orquick,brown,fox,jumps,over,the,lazy,dog.") == ["KennedyThe", "orquick", "brown", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("adJohowding") == ["adJohowding"]
    @test words_string("Twrandomo spaces after,  one space before  , aTwond no spaceHi,  my    name   is John. How     are    ychange,ou? aTwonds in between") == ["Twrandomo", "spaces", "after", "one", "space", "before", "aTwond", "no", "spaceHi", "my", "name", "is", "John.", "How", "are", "ychange", "ou?", "aTwonds", "in", "between"]
    @test words_string("hinow") == ["hinow"]
    @test words_string("The quick brown fox jukmps over the lazy dog.") == ["The", "quick", "brown", "fox", "jukmps", "over", "the", "lazy", "dog."]
    @test words_string("spTwradomoaces") == ["spTwradomoaces"]
    @test words_string("Hi,srandom my    name   is John. How  spaces   are    ychange,ou?   ") == ["Hi", "srandom", "my", "name", "is", "John.", "How", "spaces", "are", "ychange", "ou?"]
    @test words_string("aftThe,quickThbetweene,quick,brown,fox,jumps,over,the,lazer,tthe,lazy,dog.er,") == ["aftThe", "quickThbetweene", "quick", "brown", "fox", "jumps", "over", "the", "lazer", "tthe", "lazy", "dog.er"]
    @test words_string("quicck") == ["quicck"]
    @test words_string("Pr, F, KennedyThe,orquick,brown,fox,jumps,over,the,lazy,dog.") == ["Pr", "F", "KennedyThe", "orquick", "brown", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("aftThe,quickThbetweene,quick,brown,fox,jAma zing, how a sentence can change, meaning just by, adding or removing, commas!umps,over,the,lazer,tthe,lazy,dog.er,") == ["aftThe", "quickThbetweene", "quick", "brown", "fox", "jAma", "zing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "adding", "or", "removing", "commas!umps", "over", "the", "lazer", "tthe", "lazy", "dog.er"]
    @test words_string("lazAmazjing, how a sentence can change, meaning just by, adding or removing, commas!y") == ["lazAmazjing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "adding", "or", "removing", "commas!y"]
    @test words_string("atfterHi, my    name   is John. How     are    ychange,ou?   ,") == ["atfterHi", "my", "name", "is", "John.", "How", "are", "ychange", "ou?"]
    @test words_string("dcommaAs") == ["dcommaAs"]
    @test words_string("between") == ["between"]
    @test words_string("jumpychange,Hi, my    name   is John. How     are    ychange,ou?   ou?s") == ["jumpychange", "Hi", "my", "name", "is", "John.", "How", "are", "ychange", "ou?", "ou?s"]
    @test words_string("Pre,") == ["Pre"]
    @test words_string("Tjumps,over,thThe,quick,rbrown,fox,jumps,over,tog.e,lazy,dog.") == ["Tjumps", "over", "thThe", "quick", "rbrown", "fox", "jumps", "over", "tog.e", "lazy", "dog."]
    @test words_string("EeJPre, F, K,ennedyThe,quicjumpsk,brown,fox,jumps,over,Hi, my    name   is John. How     ar e    you?   the,lazy,dog.KnUSVF") == ["EeJPre", "F", "K", "ennedyThe", "quicjumpsk", "brown", "fox", "jumps", "over", "Hi", "my", "name", "is", "John.", "How", "ar", "e", "you?", "the", "lazy", "dog.KnUSVF"]
    @test words_string("ycick,brown,fox,jcommas!umps,over,the,lazer,tthe,lazy,dog.er,umps,over,the,lazy,dog.world!\npacenor,Hi,nge,ou?") == ["ycick", "brown", "fox", "jcommas!umps", "over", "the", "lazer", "tthe", "lazy", "dog.er", "umps", "over", "the", "lazy", "dog.world!\npacenor", "Hi", "nge", "ou?"]
    @test words_string("over") == ["over"]
    @test words_string("beThe,quick,rbrown,feox,jumps,over,the,lazy,dog.fomre") == ["beThe", "quick", "rbrown", "feox", "jumps", "over", "the", "lazy", "dog.fomre"]
    @test words_string("spa,,e,,,,No word,s, here,,,,,,ces") == ["spa", "e", "No", "word", "s", "here", "ces"]
    @test words_string("ychange,Hi, my space   name   is John. How     are    ychang e,ou?   ou?") == ["ychange", "Hi", "my", "space", "name", "is", "John.", "How", "are", "ychang", "e", "ou?", "ou?"]
    @test words_string("after,BCKkvqkp") == ["after", "BCKkvqkp"]
    @test words_string("Multi") == ["Multi"]
    @test words_string("jHello,usst") == ["jHello", "usst"]
    @test words_string("OPvfQ") == ["OPvfQ"]
    @test words_string("a") == ["a"]
    @test words_string("OPQvfQ") == ["OPQvfQ"]
    @test words_string("   A  srandom      string    with     no    commaAs     ort   spaces") == ["A", "srandom", "string", "with", "no", "commaAs", "ort", "spaces"]
    @test words_string("ThisSaTwondstringHasNoSpaces") == ["ThisSaTwondstringHasNoSpaces"]
    @test words_string("Tjumps,over,thThe,quick,rbrown,fox,jumps,over,tog.e,laz.") == ["Tjumps", "over", "thThe", "quick", "rbrown", "fox", "jumps", "over", "tog.e", "laz."]
    @test words_string("qPresident, John, F, Kennedyuicck") == ["qPresident", "John", "F", "Kennedyuicck"]
    @test words_string("ort") == ["ort"]
    @test words_string("onejHello,ust") == ["onejHello", "ust"]
    @test words_string("sPresident, John, F, Kennedyrandom") == ["sPresident", "John", "F", "Kennedyrandom"]
    @test words_string("ThisStringHasNocosmmasychancge,ou?!Spaces") == ["ThisStringHasNocosmmasychancge", "ou?!Spaces"]
    @test words_string("icommaAMultis") == ["icommaAMultis"]
    @test words_string("Pe,") == ["Pe"]
    @test words_string("The,quick,brown,fox,j,umps,over,the,lazy,dog.") == ["The", "quick", "brown", "fox", "j", "umps", "over", "the", "lazy", "dog."]
    @test words_string("HoJohnyu?") == ["HoJohnyu?"]
    @test words_string("spTwradomoaEeJPre,s") == ["spTwradomoaEeJPre", "s"]
    @test words_string("Keneello,ustdy") == ["Keneello", "ustdy"]
    @test words_string("   A  random    string    with     no    commas     o r   spaces") == ["A", "random", "string", "with", "no", "commas", "o", "r", "spaces"]
    @test words_string("dcommaA") == ["dcommaA"]
    @test words_string("adJohownding") == ["adJohownding"]
    @test words_string("Hi,  my    name   is John. How     are    ychaKennedyThe,quick,brown,fox,jumps,over,Hi,nge,ou? aTwoHnd") == ["Hi", "my", "name", "is", "John.", "How", "are", "ychaKennedyThe", "quick", "brown", "fox", "jumps", "over", "Hi", "nge", "ou?", "aTwoHnd"]
    @test words_string("qquick") == ["qquick"]
    @test words_string("Hi,  my    name   is John. HoHw     are  dsrandom  ychange,ou? aTwond") == ["Hi", "my", "name", "is", "John.", "HoHw", "are", "dsrandom", "ychange", "ou?", "aTwond"]
    @test words_string("lazrandomy") == ["lazrandomy"]
    @test words_string("jumpychange,Hi,") == ["jumpychange", "Hi"]
    @test words_string("KBCKkvqkp") == ["KBCKkvqkp"]
    @test words_string("aTwoycick,brown,fox,jcommas!umps,over,the,lazer,tthe,lazy,dog.er,umps,over,the,lazy,dog.world!\npacenor,Hi,nge,ou?nds") == ["aTwoycick", "brown", "fox", "jcommas!umps", "over", "the", "lazer", "tthe", "lazy", "dog.er", "umps", "over", "the", "lazy", "dog.world!\npacenor", "Hi", "nge", "ou?nds"]
    @test words_string("K,ennedyThe,quicjumpsk,brown,fox,jumps,over,Hi,") == ["K", "ennedyThe", "quicjumpsk", "brown", "fox", "jumps", "over", "Hi"]
    @test words_string("yort?") == ["yort?"]
    @test words_string("HoJomoving,hnyu?") == ["HoJomoving", "hnyu?"]
    @test words_string("adJohowdMulti\nline\nstring\nHello,\nworld!\ning") == ["adJohowdMulti\nline\nstring\nHello", "\nworld!\ning"]
    @test words_string("sPresident,") == ["sPresident"]
    @test words_string("Two spTwrandomoaces atfter,  one space before  , and no spaces in betwstri ngeen   A  random    string    with     no    commas     or   spaces") == ["Two", "spTwrandomoaces", "atfter", "one", "space", "before", "and", "no", "spaces", "in", "betwstri", "ngeen", "A", "random", "string", "with", "no", "commas", "or", "spaces"]
    @test words_string("areover") == ["areover"]
    @test words_string("movingover,") == ["movingover"]
    @test words_string("ychaKennedyThe,quick,brown,fAmazing, how a sentence ianing just jHello,ustby, adding or removing, commas!ou?") == ["ychaKennedyThe", "quick", "brown", "fAmazing", "how", "a", "sentence", "ianing", "just", "jHello", "ustby", "adding", "or", "removing", "commas!ou?"]
    @test words_string("ychange,Hi, my space   name   issMulti\nline\nstring\nHello,\nworld!\npaceno John. How     are    ychang e,ou?   ou?") == ["ychange", "Hi", "my", "space", "name", "issMulti\nline\nstring\nHello", "\nworld!\npaceno", "John.", "How", "are", "ychang", "e", "ou?", "ou?"]
    @test words_string("beThe,quick,rbrown,feeox,jumps,over,the,lazy,dog.fomre") == ["beThe", "quick", "rbrown", "feeox", "jumps", "over", "the", "lazy", "dog.fomre"]
    @test words_string("ou?") == ["ou?"]
    @test words_string("The quick brown fox jukmps over the  lazy dog.") == ["The", "quick", "brown", "fox", "jukmps", "over", "the", "lazy", "dog."]
    @test words_string("Amazing, how a senteence can change, meaning just by, adding or removing, commas!") == ["Amazing", "how", "a", "senteence", "can", "change", "meaning", "just", "by", "adding", "or", "removing", "commas!"]
    @test words_string("here,,,,,,") == ["here"]
    @test words_string("m") == ["m"]
    @test words_string("   A  random    string  n  with     no    commas     o r   spaces") == ["A", "random", "string", "n", "with", "no", "commas", "o", "r", "spaces"]
    @test words_string("The,quick,rbrown,fox,jumpsu,over,jumpychange,Hi, my    name   is John. How     are    ychange,ou?   ou?sg.") == ["The", "quick", "rbrown", "fox", "jumpsu", "over", "jumpychange", "Hi", "my", "name", "is", "John.", "How", "are", "ychange", "ou?", "ou?sg."]
    @test words_string("ycPresident,") == ["ycPresident"]
    @test words_string("ychang") == ["ychang"]
    @test words_string("adJohoweding") == ["adJohoweding"]
    @test words_string("spa,,e,,,,NolazrTwrandomoandomy") == ["spa", "e", "NolazrTwrandomoandomy"]
    @test words_string("lazAmazing, how a sentence can change, meaning just by, addinge or removing, cogmmas!y") == ["lazAmazing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "addinge", "or", "removing", "cogmmas!y"]
    @test words_string("spTwradomoaEeJP,s") == ["spTwradomoaEeJP", "s"]
    @test words_string("oPe,?") == ["oPe", "?"]
    @test words_string("yuu?") == ["yuu?"]
    @test words_string("ychaKennedyThJohn.e,quick,brown,fox,jumps,over,Hi,nge,ou?") == ["ychaKennedyThJohn.e", "quick", "brown", "fox", "jumps", "over", "Hi", "nge", "ou?"]
    @test words_string("saddingtring") == ["saddingtring"]
    @test words_string("Hi,  my    name   is John. How     are   d") == ["Hi", "my", "name", "is", "John.", "How", "are", "d"]
    @test words_string("The,quick,rbrown,fox,jumps,over,the,lazy,dogou?.") == ["The", "quick", "rbrown", "fox", "jumps", "over", "the", "lazy", "dogou?."]
    @test words_string("Hi, my    naF,me   is Jomhow      areover    you?   ello,ust") == ["Hi", "my", "naF", "me", "is", "Jomhow", "areover", "you?", "ello", "ust"]
    @test words_string("betwstringeen") == ["betwstringeen"]
    @test words_string("qqck") == ["qqck"]
    @test words_string("movingovrandomer,") == ["movingovrandomer"]
    @test words_string("dsrand") == ["dsrand"]
    @test words_string("d") == ["d"]
    @test words_string("ju") == ["ju"]
    @test words_string("Multi\nline\nstring\nHcosmmasychancge,ou?!ello,\nworld!\n") == ["Multi\nline\nstring\nHcosmmasychancge", "ou?!ello", "\nworld!\n"]
    @test words_string("zin") == ["zin"]
    @test words_string("spTwradomoBCKkvpaEeJPre,s") == ["spTwradomoBCKkvpaEeJPre", "s"]
    @test words_string("K,ennedyThe,quicjumpsk,brown,fox,jump,s,over,Hi,") == ["K", "ennedyThe", "quicjumpsk", "brown", "fox", "jump", "s", "over", "Hi"]
    @test words_string("sMulti\nline\nsaddingtring\nHel") == ["sMulti\nline\nsaddingtring\nHel"]
    @test words_string("ychange,Hi, my    name  ThisSaTwondstringHasNoSpaces is John. How     are    ychang e,ou?   ou?") == ["ychange", "Hi", "my", "name", "ThisSaTwondstringHasNoSpaces", "is", "John.", "How", "are", "ychang", "e", "ou?", "ou?"]
    @test words_string("Kennedyucck") == ["Kennedyucck"]
    @test words_string("aftThe,quick,brown,fox,jumps,over,the,lazy,do,") == ["aftThe", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "do"]
    @test words_string("ThisStringHasNocosmmasychjumpychange,Hi, my    name   is John. How     are    ySchange,ou?   ou?sancge,ou?!Spaces") == ["ThisStringHasNocosmmasychjumpychange", "Hi", "my", "name", "is", "John.", "How", "are", "ySchange", "ou?", "ou?sancge", "ou?!Spaces"]
    @test words_string("Ama zing, how a sentence can meaningemoving, commas!") == ["Ama", "zing", "how", "a", "sentence", "can", "meaningemoving", "commas!"]
    @test words_string("The quick brownTwrandomo f the lazy dog.") == ["The", "quick", "brownTwrandomo", "f", "the", "lazy", "dog."]
    @test words_string("HoJohyu?") == ["HoJohyu?"]
    @test words_string("Hi, my    naF,me   is Jomhow     areover    yremoving,ou?   ello,ust") == ["Hi", "my", "naF", "me", "is", "Jomhow", "areover", "yremoving", "ou?", "ello", "ust"]
    @test words_string("areoveyuu?r") == ["areoveyuu?r"]
    @test words_string("Pretsident, John, F, Kennedy") == ["Pretsident", "John", "F", "Kennedy"]
    @test words_string("spaceskvp") == ["spaceskvp"]
    @test words_string("President, Joychange,Hi, my space   name   issMulti\nline\nstring\nHello,\nworld!\npaceno John. How     are    ychang e,ou?   ou?hn, F, KennedyThe,quick,brown,fox,jumps,over,the,lazy,dog.") == ["President", "Joychange", "Hi", "my", "space", "name", "issMulti\nline\nstring\nHello", "\nworld!\npaceno", "John.", "How", "are", "ychang", "e", "ou?", "ou?hn", "F", "KennedyThe", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("sPresident, John, F,n Kennedyrandom") == ["sPresident", "John", "F", "n", "Kennedyrandom"]
    @test words_string("Pretsident,") == ["Pretsident"]
    @test words_string("lazAmazing, how a sentence can change, meaning just by, adding or removing, coHi, my    naF,me   is Johow     areover    you?   ello,ustmmas!y") == ["lazAmazing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "adding", "or", "removing", "coHi", "my", "naF", "me", "is", "Johow", "areover", "you?", "ello", "ustmmas!y"]
    @test words_string("dcdommaA") == ["dcdommaA"]
    @test words_string("yy") == ["yy"]
    @test words_string("KtowRydY") == ["KtowRydY"]
    @test words_string("Presidenpacenor,Hi,nge,ou?ndst, John, F, KennedyThnamee,quick,brown,fox,jumps,over,the,lazy,dog.") == ["Presidenpacenor", "Hi", "nge", "ou?ndst", "John", "F", "KennedyThnamee", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("jukumps") == ["jukumps"]
    @test words_string("yXdEonejHello,ustXoUU") == ["yXdEonejHello", "ustXoUU"]
    @test words_string("sMulti\nline\nstring\nHello,\nmeaningemoving,world!\npaceno") == ["sMulti\nline\nstring\nHello", "\nmeaningemoving", "world!\npaceno"]
    @test words_string("Presidenpacenor,Hi,nge,ou?ndst, Johdn, F, KennedyThnamee,quick,brown,fox,jumps,over,the,lazy,dog.") == ["Presidenpacenor", "Hi", "nge", "ou?ndst", "Johdn", "F", "KennedyThnamee", "quick", "brown", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("hiKennedyuccknow") == ["hiKennedyuccknow"]
    @test words_string("qPresident,") == ["qPresident"]
    @test words_string("dsrandello,ustmmas!y") == ["dsrandello", "ustmmas!y"]
    @test words_string("JHoJohnyu?") == ["JHoJohnyu?"]
    @test words_string("belazAmazing,tweenn") == ["belazAmazing", "tweenn"]
    @test words_string("lenine") == ["lenine"]
    @test words_string("JkohThe quick brownTwrandomo f the lazy dog.n.") == ["JkohThe", "quick", "brownTwrandomo", "f", "the", "lazy", "dog.n."]
    @test words_string("S") == ["S"]
    @test words_string("atfterHi, my    name   is John. How     are    ychange ,ou?   ,") == ["atfterHi", "my", "name", "is", "John.", "How", "are", "ychange", "ou?"]
    @test words_string("aychaKennedyThe,quick,brown,fAmazing, how a sentence ianing just jHello,ustby, adding or removing, commas!ou?ding") == ["aychaKennedyThe", "quick", "brown", "fAmazing", "how", "a", "sentence", "ianing", "just", "jHello", "ustby", "adding", "or", "removing", "commas!ou?ding"]
    @test words_string("aftThe,quick,brown,fumps,over,the,lazy,do,") == ["aftThe", "quick", "brown", "fumps", "over", "the", "lazy", "do"]
    @test words_string("aTwond") == ["aTwond"]
    @test words_string("ou?s") == ["ou?s"]
    @test words_string("ello,ustmmas!y") == ["ello", "ustmmas!y"]
    @test words_string("araeover") == ["araeover"]
    @test words_string("   A  random    string  n  with     no    scommas o    o r   spaces") == ["A", "random", "string", "n", "with", "no", "scommas", "o", "o", "r", "spaces"]
    @test words_string("pDWegu") == ["pDWegu"]
    @test words_string("pacenor,Hi,nge,ou?nds") == ["pacenor", "Hi", "nge", "ou?nds"]
    @test words_string("Tjumps.,over,thThe,quick,rbrown,fox,jumps,over,tog.e,lazy,dog.") == ["Tjumps.", "over", "thThe", "quick", "rbrown", "fox", "jumps", "over", "tog.e", "lazy", "dog."]
    @test words_string("EeJPre,") == ["EeJPre"]
    @test words_string("slMulti\nline\nsaddingtring\nHel") == ["slMulti\nline\nsaddingtring\nHel"]
    @test words_string("betwstringee") == ["betwstringee"]
    @test words_string("hjumpychange,Hi,") == ["hjumpychange", "Hi"]
    @test words_string("a,tfter,") == ["a", "tfter"]
    @test words_string("qPresident, Jiohn, F, Kennedyuicck") == ["qPresident", "Jiohn", "F", "Kennedyuicck"]
    @test words_string("brownTwrandomo") == ["brownTwrandomo"]
    @test words_string("Tjumps,over,uick,rbrown,fox,jumps,over,tog.e,laz.") == ["Tjumps", "over", "uick", "rbrown", "fox", "jumps", "over", "tog.e", "laz."]
    @test words_string("dog.a.Twonds") == ["dog.a.Twonds"]
    @test words_string("VqVNGKV") == ["VqVNGKV"]
    @test words_string("Twrandomo spaces after,  one space before  , aTwond no spaceHi,  my    name   isworld! John. How     are    ychange,ou? aTwonds in between") == ["Twrandomo", "spaces", "after", "one", "space", "before", "aTwond", "no", "spaceHi", "my", "name", "isworld!", "John.", "How", "are", "ychange", "ou?", "aTwonds", "in", "between"]
    @test words_string("HoJohye,ou?u?") == ["HoJohye", "ou?u?"]
    @test words_string("Hi, myJoychange,Hi,   t") == ["Hi", "myJoychange", "Hi", "t"]
    @test words_string("paceno") == ["paceno"]
    @test words_string("beTbh") == ["beTbh"]
    @test words_string("chan,ge,") == ["chan", "ge"]
    @test words_string("spa,,e,,,,No") == ["spa", "e", "No"]
    @test words_string("behTbh") == ["behTbh"]
    @test words_string("aychaKennedyThe,quick,brown,fAmazing, how a sentence ianing just jHello,ustby, adding odog.r removing, commas!ou?ding") == ["aychaKennedyThe", "quick", "brown", "fAmazing", "how", "a", "sentence", "ianing", "just", "jHello", "ustby", "adding", "odog.r", "removing", "commas!ou?ding"]
    @test words_string("thlazAmazing,") == ["thlazAmazing"]
    @test words_string("KeKnnedynucck") == ["KeKnnedynucck"]
    @test words_string("aTwoycick,brown,fox,jcommas!umps,over,the,lazer,tthe,lazy,dog.er,umps,over,the,lazy,dog.world!\npacenor?nds") == ["aTwoycick", "brown", "fox", "jcommas!umps", "over", "the", "lazer", "tthe", "lazy", "dog.er", "umps", "over", "the", "lazy", "dog.world!\npacenor?nds"]
    @test words_string("HoJohye,ou?uKennedyThe,orquick,brown,fox,jumps,over,the,lazy,dog.") == ["HoJohye", "ou?uKennedyThe", "orquick", "brown", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("lAeSbnrM") == ["lAeSbnrM"]
    @test words_string("The quick brown fox juTwrandomo spaces after,  one space before  , aTwond no spaces in betweenkmps over the lazy dog.") == ["The", "quick", "brown", "fox", "juTwrandomo", "spaces", "after", "one", "space", "before", "aTwond", "no", "spaces", "in", "betweenkmps", "over", "the", "lazy", "dog."]
    @test words_string("adJohowdMulti") == ["adJohowdMulti"]
    @test words_string("Twrandomo spaces after,  one space before  , aTwond no spaceHi,  my    name   iswostringrld! John. How     are    ychange,ou? aTwonds in between") == ["Twrandomo", "spaces", "after", "one", "space", "before", "aTwond", "no", "spaceHi", "my", "name", "iswostringrld!", "John.", "How", "are", "ychange", "ou?", "aTwonds", "in", "between"]
    @test words_string("dsrand,ello,ustmmas!y") == ["dsrand", "ello", "ustmmas!y"]
    @test words_string("naF,me") == ["naF", "me"]
    @test words_string(".Hi,  my    name   is John. HoHw     are  dsrandom  ychange,ou? aTwond") == [".Hi", "my", "name", "is", "John.", "HoHw", "are", "dsrandom", "ychange", "ou?", "aTwond"]
    @test words_string("e  lazy doge,ou?.") == ["e", "lazy", "doge", "ou?."]
    @test words_string("   A  sranadom    string    with     no    dcomma     or   spaces") == ["A", "sranadom", "string", "with", "no", "dcomma", "or", "spaces"]
    @test words_string("The quick brow n fox jumps over the lazy dog.") == ["The", "quick", "brow", "n", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("Amazing, how aa sentence ianing just jHello,ustby, adding or removing, commas!") == ["Amazing", "how", "aa", "sentence", "ianing", "just", "jHello", "ustby", "adding", "or", "removing", "commas!"]
    @test words_string("qPresident, Jiohn, F, Kedog.a.TwondsnnedyuicckHoohnyu?") == ["qPresident", "Jiohn", "F", "Kedog.a.TwondsnnedyuicckHoohnyu?"]
    @test words_string("dsrandelmlo,ustmmas!y") == ["dsrandelmlo", "ustmmas!y"]
    @test words_string("comJohn.maAsjukmps") == ["comJohn.maAsjukmps"]
    @test words_string("eTjumps,over,the,lazy,dog.") == ["eTjumps", "over", "the", "lazy", "dog."]
    @test words_string("BCKkvq.Hi,  my    name   is John. HoHw     are  dsrandom  ychange,ou? aTwondkp") == ["BCKkvq.Hi", "my", "name", "is", "John.", "HoHw", "are", "dsrandom", "ychange", "ou?", "aTwondkp"]
    @test words_string("Tjumps,over,thThe,quick,rbrown,fox,jumyremoving,ou?ps,over,tog.e,lazy,dog.") == ["Tjumps", "over", "thThe", "quick", "rbrown", "fox", "jumyremoving", "ou?ps", "over", "tog.e", "lazy", "dog."]
    @test words_string("oThisStringHasNocosmmasychamncge,ou?!Spaceser") == ["oThisStringHasNocosmmasychamncge", "ou?!Spaceser"]
    @test words_string("here,,,,,,cesne") == ["here", "cesne"]
    @test words_string("qPresident, Jiohn, F, Kennedy,uicck") == ["qPresident", "Jiohn", "F", "Kennedy", "uicck"]
    @test words_string("lazAmazing, ehow a sentence can change, meaning just by, addinge or removing, cogmmas!y") == ["lazAmazing", "ehow", "a", "sentence", "can", "change", "meaning", "just", "by", "addinge", "or", "removing", "cogmmas!y"]
    @test words_string("lazAmazing, how a sentence can change, meaning justodog.r by, addinge or removing, cogmmas!y") == ["lazAmazing", "how", "a", "sentence", "can", "change", "meaning", "justodog.r", "by", "addinge", "or", "removing", "cogmmas!y"]
    @test words_string("izin") == ["izin"]
    @test words_string("dsrandello,ustmbehTbhmas!") == ["dsrandello", "ustmbehTbhmas!"]
    @test words_string("mmy") == ["mmy"]
    @test words_string("KBCCKkvqkp") == ["KBCCKkvqkp"]
    @test words_string("aftThe,quickThbetweene,quick,brown,fox,jAma") == ["aftThe", "quickThbetweene", "quick", "brown", "fox", "jAma"]
    @test words_string("sMulti\nline\nstring\nHello,\nworld!\ndom") == ["sMulti\nline\nstring\nHello", "\nworld!\ndom"]
    @test words_string("pnaceno") == ["pnaceno"]
    @test words_string("here,,,,,,addinge") == ["here", "addinge"]
    @test words_string("Pe,aTwoHnd") == ["Pe", "aTwoHnd"]
    @test words_string("Two spaces after,  one space nbefore  , and no spaces in betwstringeenHel") == ["Two", "spaces", "after", "one", "space", "nbefore", "and", "no", "spaces", "in", "betwstringeenHel"]
    @test words_string("brownbeThe,quick,rbrown,feox,jumps,over,the,lazy,dog.fomre") == ["brownbeThe", "quick", "rbrown", "feox", "jumps", "over", "the", "lazy", "dog.fomre"]
    @test words_string("spTwradomoa,s") == ["spTwradomoa", "s"]
    @test words_string("na,F,me") == ["na", "F", "me"]
    @test words_string("Ama") == ["Ama"]
    @test words_string("ng") == ["ng"]
    @test words_string("meaningemoving,") == ["meaningemoving"]
    @test words_string("The quick brown mfox juTwrandomo spaces after,  one space before  , aTwond no spaces in betweenkmps over the lazy dog.") == ["The", "quick", "brown", "mfox", "juTwrandomo", "spaces", "after", "one", "space", "before", "aTwond", "no", "spaces", "in", "betweenkmps", "over", "the", "lazy", "dog."]
    @test words_string("lazAmazing, how a sentence can change, meaning just by, adding or removing, commas!yeKnney") == ["lazAmazing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "adding", "or", "removing", "commas!yeKnney"]
    @test words_string("President, John, F, KennedyThnamee,quick,brown,fox,jumps,over,the,ychange,Hi, my    name   is John. How     are    ychange,ou?   ou?lazy,dog.") == ["President", "John", "F", "KennedyThnamee", "quick", "brown", "fox", "jumps", "over", "the", "ychange", "Hi", "my", "name", "is", "John.", "How", "are", "ychange", "ou?", "ou?lazy", "dog."]
    @test words_string("HoJohHi, myJoychange,Hi,   tu?u?") == ["HoJohHi", "myJoychange", "Hi", "tu?u?"]
    @test words_string("quicc") == ["quicc"]
    @test words_string("comHoJohyu?m") == ["comHoJohyu?m"]
    @test words_string("c!ommas!!") == ["c!ommas!!"]
    @test words_string("Joychange,Hi,") == ["Joychange", "Hi"]
    @test words_string("aTwoycick,brown,fox,jcommas!umps,over,the,lazer,tthe,lazy,dog.er,uThe quick brown mfox juTwrandomo spaces after,  one space before  , aTwond no spaces in betweenkmps over the lazy dog.mps,over,the,lazy,dog.world!\npacenor?nds") == ["aTwoycick", "brown", "fox", "jcommas!umps", "over", "the", "lazer", "tthe", "lazy", "dog.er", "uThe", "quick", "brown", "mfox", "juTwrandomo", "spaces", "after", "one", "space", "before", "aTwond", "no", "spaces", "in", "betweenkmps", "over", "the", "lazy", "dog.mps", "over", "the", "lazy", "dog.world!\npacenor?nds"]
    @test words_string("onaftThe,quickThbetweene,quick,brown,fox,jAma zing, how a sentence can change, meaning just by, adding or removing, commas!umps,over,the,lazer,tthe,lazy,dog.er,") == ["onaftThe", "quickThbetweene", "quick", "brown", "fox", "jAma", "zing", "how", "a", "sentence", "can", "change", "meaning", "just", "by", "adding", "or", "removing", "commas!umps", "over", "the", "lazer", "tthe", "lazy", "dog.er"]
    @test words_string("Mychange,Hi, my space   name   issMulti\nline\nstring\nHello,\nworld!\npaceno John. How     are    ychang e,ou?   ou?") == ["Mychange", "Hi", "my", "space", "name", "issMulti\nline\nstring\nHello", "\nworld!\npaceno", "John.", "How", "are", "ychang", "e", "ou?", "ou?"]
    @test words_string("brownbeThe,quick,rbrown,feox,jumps,over,the,lazy,edog.fomre") == ["brownbeThe", "quick", "rbrown", "feox", "jumps", "over", "the", "lazy", "edog.fomre"]
    @test words_string("ychaKennedyThe,quick,brown,fAmazing,") == ["ychaKennedyThe", "quick", "brown", "fAmazing"]
    @test words_string("Hi,  my    name   is John. HowbeforsMultiethe,lazy,dog.     are    Tjumps,over,uick,rbrown,fox,jumps,over,tog.e,laz.ychaKennedyThe,quick,brown,fox,jumps,over,Hi,nge,ou? aTwoHnd") == ["Hi", "my", "name", "is", "John.", "HowbeforsMultiethe", "lazy", "dog.", "are", "Tjumps", "over", "uick", "rbrown", "fox", "jumps", "over", "tog.e", "laz.ychaKennedyThe", "quick", "brown", "fox", "jumps", "over", "Hi", "nge", "ou?", "aTwoHnd"]
    @test words_string("Tjumps,over,thThe,quick,rbrown,fox,jumyrefmoving,ou?ps,over,tog.e,lazy,dog.") == ["Tjumps", "over", "thThe", "quick", "rbrown", "fox", "jumyrefmoving", "ou?ps", "over", "tog.e", "lazy", "dog."]
    @test words_string("The quick brown fox jukmps over the  lazy dog.chan,ge,") == ["The", "quick", "brown", "fox", "jukmps", "over", "the", "lazy", "dog.chan", "ge"]
    @test words_string("A") == ["A"]
    @test words_string("cosmmasychancgeu?!") == ["cosmmasychancgeu?!"]
    @test words_string("President, John, F, KennedyThe,quick,brown,fox,jumps,over,Hi, mye    name   is John. How     ar e    you?   the,lazy,dog.") == ["President", "John", "F", "KennedyThe", "quick", "brown", "fox", "jumps", "over", "Hi", "mye", "name", "is", "John.", "How", "ar", "e", "you?", "the", "lazy", "dog."]
    @test words_string("BCKdog.a.Twondskvp") == ["BCKdog.a.Twondskvp"]
    @test words_string("dsrandd") == ["dsrandd"]
    @test words_string("ello,ust") == ["ello", "ust"]
    @test words_string("meaningemovning,") == ["meaningemovning"]
    @test words_string("Tjumps,over,tdsrand,ello,ustmmas!yhThe,quick,rbrown,fox,jumyremoving,ou?ps,over,tog.e,lazy,dogspaceHi,") == ["Tjumps", "over", "tdsrand", "ello", "ustmmas!yhThe", "quick", "rbrown", "fox", "jumyremoving", "ou?ps", "over", "tog.e", "lazy", "dogspaceHi"]
    @test words_string("nae,F,me") == ["nae", "F", "me"]
    @test words_string("Jiohn,") == ["Jiohn"]
    @test words_string("adJohoychaKennedyThe,quick,brown,fAmazing,dMulti") == ["adJohoychaKennedyThe", "quick", "brown", "fAmazing", "dMulti"]
    @test words_string("HoJohyei,ou?uKennedyThe,orquick,brown,fox,jumps,over,the,lazy,dog.") == ["HoJohyei", "ou?uKennedyThe", "orquick", "brown", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("The,quick,rbrown,fox,jumpsu,over,jumpychange,Hi, my    name   is Johdsrandn. How     are    ychange,ou?   ou?sg.") == ["The", "quick", "rbrown", "fox", "jumpsu", "over", "jumpychange", "Hi", "my", "name", "is", "Johdsrandn.", "How", "are", "ychange", "ou?", "ou?sg."]
    @test words_string("Twoyort?") == ["Twoyort?"]
    @test words_string("KennedyThe,orquick,brown,fox,jumps,over,the,lazy,doTjumps.,over,thThze,quick,rbrown,fox,jumps,over,tog.e,lazy,dog.g.") == ["KennedyThe", "orquick", "brown", "fox", "jumps", "over", "the", "lazy", "doTjumps.", "over", "thThze", "quick", "rbrown", "fox", "jumps", "over", "tog.e", "lazy", "dog.g."]
    @test words_string("srapacenor,Hi,nge,ou?ndoehowm") == ["srapacenor", "Hi", "nge", "ou?ndoehowm"]
    @test words_string("cosmmasychsPresident, John, F,n Kennedyrandomansrandomcge,ou?!") == ["cosmmasychsPresident", "John", "F", "n", "Kennedyrandomansrandomcge", "ou?!"]
    @test words_string("Kennedyrandom") == ["Kennedyrandom"]
    @test words_string("brownTwranhere,,,,,,cesnedomwo") == ["brownTwranhere", "cesnedomwo"]
    @test words_string("bfA") == ["bfA"]
    @test words_string("OPvleifQbelazAmazing,tweenn") == ["OPvleifQbelazAmazing", "tweenn"]
    @test words_string("Twoyor?") == ["Twoyor?"]
    @test words_string("spa,,e,,,,eNo") == ["spa", "e", "eNo"]
    @test words_string("lazAmazing, how a sentence can change, meaning justodog.r") == ["lazAmazing", "how", "a", "sentence", "can", "change", "meaning", "justodog.r"]
    @test words_string("pnacHello,eno") == ["pnacHello", "eno"]
    @test words_string("adoJohowdingi") == ["adoJohowdingi"]
    @test words_string("HoJohye,ou?uKennedyThe,orquick,brown,fox,spacesjumps,over,the,lazy,dog.") == ["HoJohye", "ou?uKennedyThe", "orquick", "brown", "fox", "spacesjumps", "over", "the", "lazy", "dog."]
    @test words_string("Mychange,Tjumps,over,uick,rbrown,fox,jumps,over,tog.e,laz.ychaKennedyThe,quick,brown,fox,jumps,over,Hi,nge,ou?Hi,") == ["Mychange", "Tjumps", "over", "uick", "rbrown", "fox", "jumps", "over", "tog.e", "laz.ychaKennedyThe", "quick", "brown", "fox", "jumps", "over", "Hi", "nge", "ou?Hi"]
    @test words_string("   A  srandom      string    with   paces") == ["A", "srandom", "string", "with", "paces"]
    @test words_string("Hi, my    naF,me   is Jomhowlo,ust") == ["Hi", "my", "naF", "me", "is", "Jomhowlo", "ust"]
    @test words_string("HoJohye,ouo?u?") == ["HoJohye", "ouo?u?"]
    @test words_string("after,BCKkvkp") == ["after", "BCKkvkp"]
    @test words_string("HoJohye,ou?uKenneodyThe,orquick,brown,fox,jumps,over,the,lazy,dog.") == ["HoJohye", "ou?uKenneodyThe", "orquick", "brown", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("wHow") == ["wHow"]
    @test words_string("KtowRydYThe quick brow n fox jumps over the lazy dog.") == ["KtowRydYThe", "quick", "brow", "n", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("annd") == ["annd"]
    @test words_string("e  lazy dge,ou?.") == ["e", "lazy", "dge", "ou?."]
    @test words_string("ychaKennedyThe,quick,brown,ifox,jumps,ovesMulti") == ["ychaKennedyThe", "quick", "brown", "ifox", "jumps", "ovesMulti"]
    @test words_string("wychange,Hi, my    name  ThisSaTwondstringHasNoSpaces is John. How     are    ychang e,ou?   ou?orld!!") == ["wychange", "Hi", "my", "name", "ThisSaTwondstringHasNoSpaces", "is", "John.", "How", "are", "ychang", "e", "ou?", "ou?orld!!"]
    @test words_string("areoveyuur") == ["areoveyuur"]
    @test words_string("meaningemosMulti\nline\nstring\nHello,\nmeaningemoving,world!\npacenoving,") == ["meaningemosMulti\nline\nstring\nHello", "\nmeaningemoving", "world!\npacenoving"]
    @test words_string("lazAmazing, homeaningemoving,w a sentence can change, meaning jusfoxt by, aaddinge or removing, cogmmas!y") == ["lazAmazing", "homeaningemoving", "w", "a", "sentence", "can", "change", "meaning", "jusfoxt", "by", "aaddinge", "or", "removing", "cogmmas!y"]
    @test words_string("VqVVNGVKV") == ["VqVVNGVKV"]
    @test words_string("spTwradoa,s") == ["spTwradoa", "s"]
    @test words_string("ou?snaeme") == ["ou?snaeme"]
    @test words_string("lazAmazing, how a sentence can changewojrd,s,g just by, adding or removiyng, commas!y") == ["lazAmazing", "how", "a", "sentence", "can", "changewojrd", "s", "g", "just", "by", "adding", "or", "removiyng", "commas!y"]
    @test words_string("usst") == ["usst"]
    @test words_string("betwstringbeen") == ["betwstringbeen"]
    @test words_string("hereHi,srandom my    name   is John. How  spaces   are    ychange,ou?   ") == ["hereHi", "srandom", "my", "name", "is", "John.", "How", "spaces", "are", "ychange", "ou?"]
    @test words_string("Pre, F, K,ennedyThe,rquicjumpsk,brown,fox,jumps,over,Hi, my    n   A  srandom      string    with   pacesohn. How     ar e    you?   the,lazy,dog.") == ["Pre", "F", "K", "ennedyThe", "rquicjumpsk", "brown", "fox", "jumps", "over", "Hi", "my", "n", "A", "srandom", "string", "with", "pacesohn.", "How", "ar", "e", "you?", "the", "lazy", "dog."]
    @test words_string("   A  sranadom    string    with     no    dcommaAs     adJohowdMulti\nline\nstring\nHello,\nworld!\ningor   spaces") == ["A", "sranadom", "string", "with", "no", "dcommaAs", "adJohowdMulti\nline\nstring\nHello", "\nworld!\ningor", "spaces"]
    @test words_string("Hi, myJoychangVqVVNGVKVe,Hi,   t") == ["Hi", "myJoychangVqVVNGVKVe", "Hi", "t"]
    @test words_string("cthlasentencezAmazing,osmmaKennedyThnamee,quick,brown,fox,jumps,over,the,ychange,Hi,sychancgeu?!") == ["cthlasentencezAmazing", "osmmaKennedyThnamee", "quick", "brown", "fox", "jumps", "over", "the", "ychange", "Hi", "sychancgeu?!"]
    @test words_string("President, John, F, KennedyThe,quick,brown,fox,jumps,over,Hi, mye    name   is John. How     ar e    lazy,dog.") == ["President", "John", "F", "KennedyThe", "quick", "brown", "fox", "jumps", "over", "Hi", "mye", "name", "is", "John.", "How", "ar", "e", "lazy", "dog."]
    @test words_string("qqquick") == ["qqquick"]
    @test words_string("lazy,dog.") == ["lazy", "dog."]
    @test words_string("r") == ["r"]
    @test words_string("HoJohye,ou?uKennedyThe,orquick,brown,fox,spacesjumps,onver,the,lazy,dog.") == ["HoJohye", "ou?uKennedyThe", "orquick", "brown", "fox", "spacesjumps", "onver", "the", "lazy", "dog."]
    @test words_string("coychange,ou?ammma!") == ["coychange", "ou?ammma!"]
    @test words_string("comJohn.mthbetweenkmpseaAsjukmps") == ["comJohn.mthbetweenkmpseaAsjukmps"]
    @test words_string("YNe") == ["YNe"]
    @test words_string("brow") == ["brow"]
    @test words_string("yremoving,ou?") == ["yremoving", "ou?"]
    @test words_string("lazAmazjing, how a sentence can change, meaninglAeSbnrM just by, adding or removing, commas!y") == ["lazAmazjing", "how", "a", "sentence", "can", "change", "meaninglAeSbnrM", "just", "by", "adding", "or", "removing", "commas!y"]
    @test words_string("aTwoycick,brown,fox,jcommas!umps,onkmps over the lazy dog.mps,over,the,lazy,dog.world!\npacenor?nds") == ["aTwoycick", "brown", "fox", "jcommas!umps", "onkmps", "over", "the", "lazy", "dog.mps", "over", "the", "lazy", "dog.world!\npacenor?nds"]
    @test words_string("ycPresidenadJohowdingt,") == ["ycPresidenadJohowdingt"]
    @test words_string(".Hi,  my    name   is John. HoHw     are  d  ychange,ou? aTwond") == [".Hi", "my", "name", "is", "John.", "HoHw", "are", "d", "ychange", "ou?", "aTwond"]
    @test words_string("beThe,quick,rbrown,fox,jumups,over,the,lazy,do,g.fore") == ["beThe", "quick", "rbrown", "fox", "jumups", "over", "the", "lazy", "do", "g.fore"]
    @test words_string("jHelloo,usst") == ["jHelloo", "usst"]
    @test words_string("dd") == ["dd"]
    @test words_string("he,,,,,") == ["he"]
    @test words_string("voTB") == ["voTB"]
    @test words_string("President, John, F, KennedyThe,quick,brown,fox,jumps,over,Hi, my    name   is John. How     ar he    you?   the,lazy,dog.") == ["President", "John", "F", "KennedyThe", "quick", "brown", "fox", "jumps", "over", "Hi", "my", "name", "is", "John.", "How", "ar", "he", "you?", "the", "lazy", "dog."]
    @test words_string("dsrandelmlo,ustmmHi,srandom my    name   Pre, F, K,ennedyThe,quicjumpsk,brown,fox,jumps,over,Hi, my    name   is John. How     ar e    you?   the,lazy,dog.is John. How  spaces   are    ychange,ou?   as!y") == ["dsrandelmlo", "ustmmHi", "srandom", "my", "name", "Pre", "F", "K", "ennedyThe", "quicjumpsk", "brown", "fox", "jumps", "over", "Hi", "my", "name", "is", "John.", "How", "ar", "e", "you?", "the", "lazy", "dog.is", "John.", "How", "spaces", "are", "ychange", "ou?", "as!y"]
    @test words_string("HoJohye,ou?uKenneodyThe,orq,uick,brown,fox,jumps,over,the,lazy,dog.") == ["HoJohye", "ou?uKenneodyThe", "orq", "uick", "brown", "fox", "jumps", "over", "the", "lazy", "dog."]
    @test words_string("lazAmazjing, how a sentence can change, meaninglAeSbnrM just by, addcing or removing, commas!y") == ["lazAmazjing", "how", "a", "sentence", "can", "change", "meaninglAeSbnrM", "just", "by", "addcing", "or", "removing", "commas!y"]
    @test words_string("dcoTjumps,over,uick,rbrown.e,laz.mmaA") == ["dcoTjumps", "over", "uick", "rbrown.e", "laz.mmaA"]
    @test words_string("ychange,Hi, my    name   is John. How     ychange,Hi,are    ychang e,ou?   ou?") == ["ychange", "Hi", "my", "name", "is", "John.", "How", "ychange", "Hi", "are", "ychang", "e", "ou?", "ou?"]
    @test words_string("yeKenney") == ["yeKenney"]
    @test words_string("ou?sg.") == ["ou?sg."]
    @test words_string("beThe,quick,rbrown,feox,jumps,over,the,lazy,dog.focommas!ou?mre") == ["beThe", "quick", "rbrown", "feox", "jumps", "over", "the", "lazy", "dog.focommas!ou?mre"]
    @test words_string("areobrownTwrandomover") == ["areobrownTwrandomover"]
    @test words_string("qPresidenJiohn, F, Kennedy,uicck") == ["qPresidenJiohn", "F", "Kennedy", "uicck"]
    @test words_string("issMulti") == ["issMulti"]
    @test words_string("the,lazy,dog.BCKkvp") == ["the", "lazy", "dog.BCKkvp"]
    @test words_string("agdJohownding") == ["agdJohownding"]
    @test words_string("Pre, F, K,ennedyThe,rquicjumpsk,brown,feox,jumps,over,Hi, my    n   A  srandom      string    with   pacesohn. How     ar e    you?   the,lazy,dog.") == ["Pre", "F", "K", "ennedyThe", "rquicjumpsk", "brown", "feox", "jumps", "over", "Hi", "my", "n", "A", "srandom", "string", "with", "pacesohn.", "How", "ar", "e", "you?", "the", "lazy", "dog."]
    @test words_string("qqk") == ["qqk"]
    @test words_string("noThe quick brown fox juTwrandomo spaces aPresident, John, F, K,ennedyThe,quicjumpsk,brown,fox,jumps,over,Hi, my    name   is John. How     ar e    you?   the,lazy,dog.fter,  one space before  , aTwond no spaces in betweenkmps over the lazy dog.") == ["noThe", "quick", "brown", "fox", "juTwrandomo", "spaces", "aPresident", "John", "F", "K", "ennedyThe", "quicjumpsk", "brown", "fox", "jumps", "over", "Hi", "my", "name", "is", "John.", "How", "ar", "e", "you?", "the", "lazy", "dog.fter", "one", "space", "before", "aTwond", "no", "spaces", "in", "betweenkmps", "over", "the", "lazy", "dog."]
    @test words_string("lazAmazjing, how a sentence can change, meaninglAeSbnrM just by, adding or removing, commams!y") == ["lazAmazjing", "how", "a", "sentence", "can", "change", "meaninglAeSbnrM", "just", "by", "adding", "or", "removing", "commams!y"]
    @test words_string("mye") == ["mye"]
    @test words_string("spaceskpvp") == ["spaceskpvp"]
    @test words_string("BCKkvq.Hi,  my    name   is John. HJohowoHw     are  dsr andom  ychange,ou? aTwondkp") == ["BCKkvq.Hi", "my", "name", "is", "John.", "HJohowoHw", "are", "dsr", "andom", "ychange", "ou?", "aTwondkp"]
    @test words_string("sMulti") == ["sMulti"]
    @test words_string("dsrawithndd") == ["dsrawithndd"]
end
