Here is a step-by-step outline of the function:

1. Check if the number of carrots needed is less than or equal to the remaining carrots.
2. If it is, add the number of carrots needed to the number of carrots eaten and subtract the number of carrots needed from the remaining carrots.
3. If it isn't, add the remaining carrots to the number of carrots eaten and set the remaining carrots to 0.
4. Return a vector containing the total number of eaten carrots and the remaining carrots.

Here is the Julia code:

```julia
function eat(number::Int, need::Int, remaining::Int)::Vector{Int}
    if need <= remaining
        number += need
        remaining -= need
    else
        number += remaining
        remaining = 0
    end
    return [number, remaining]
end
```

This function first checks if the number of carrots needed is less than or equal to the remaining carrots. If it is, it adds the number of carrots needed to the number of carrots eaten and subtracts the number of carrots needed from the remaining carrots. If it isn't, it adds the remaining carrots to the number of carrots eaten and sets the remaining carrots to 0. Finally, it returns a vector containing the total number of eaten carrots and the remaining carrots.
