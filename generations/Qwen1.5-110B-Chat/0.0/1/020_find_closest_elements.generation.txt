```julia
function find_closest_elements(numbers::Vector{Float64})::Tuple{Float64, Float64}
    sorted_numbers = sort(numbers)
    min_diff = Inf
    closest_pair = (sorted_numbers[1], sorted_numbers[2])

    for i in 1:length(sorted_numbers)-1
        diff = sorted_numbers[i+1] - sorted_numbers[i]
        if diff < min_diff
            min_diff = diff
            closest_pair = (sorted_numbers[i], sorted_numbers[i+1])
        end
    end

    return closest_pair
end
```
This Julia function sorts the input vector of numbers, then iterates through the sorted list to find the pair with the smallest difference, returning that pair in a tuple. If there are multiple pairs with the same smallest difference, it returns the first one encountered.