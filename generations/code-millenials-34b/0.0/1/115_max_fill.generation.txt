

function max_fill(grid::Vector{Vector{Int}}, capacity::Int)::Int
    count = 0
    for row in grid
        for i in 1:capacity:length(row)
            count += sum(row[i:i+capacity-1])
        end
    end
    return count
end

# Test cases
println(max_fill([[0, 0, 1, 0], [0, 1, 0, 0], [1, 1, 1, 1]], 1)) # Expected output: 6
println(max_fill([[0, 0, 1, 1], [0, 0, 0, 0], [1, 1, 1, 1], [0, 1, 1, 1]], 2)) # Expected output: 5
println(max_fill([[0, 0, 0], [0, 0, 0]], 5)) # Expected output: 0
