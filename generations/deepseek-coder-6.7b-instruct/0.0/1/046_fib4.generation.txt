Here is a Julia function that computes the n-th element of the fib4 number sequence:

```julia
function fib4(n::Int)::Int
    if n < 0
        throw(DomainError(n, "n must be a non-negative integer."))
    end

    if n == 0
        return 0
    elseif n == 1
        return 0
    elseif n == 2
        return 2
    elseif n == 3
        return 0
    end

    a, b, c, d = 0, 0, 2, 0
    result = 0

    for _ in 4:n
        result = a + b + c + d
        a, b, c, d = b, c, d, result
    end

    return result
end
```

This function uses a loop to compute the n-th element of the fib4 sequence. It keeps track of the last four elements of the sequence in variables `a`, `b`, `c`, and `d`. The current element of the sequence is the sum of these last four elements. The variables `a`, `b`, `c`, and `d` are updated in each iteration to hold the last three elements and the current element of the sequence, respectively.
