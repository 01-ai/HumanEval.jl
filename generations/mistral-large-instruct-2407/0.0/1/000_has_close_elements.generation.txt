 Certainly! Below is the implementation of the `has_close_elements` function in Julia based on the provided docstring:

```julia
"""
    has_close_elements(numbers::Vector{Float64}, threshold::Float64)::Bool

Check if in given list of `numbers`, are any two numbers closer to each other than
given `threshold`.

# Examples

```jldoctest
julia> has_close_elements([1.0, 2.0, 3.0], 0.5)
false

julia> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)
true
```
"""
function has_close_elements(numbers::Vector{Float64}, threshold::Float64)::Bool
    n = length(numbers)
    for i in 1:n
        for j in (i+1):n
            if abs(numbers[i] - numbers[j]) < threshold
                return true
            end
        end
    end
    return false
end
```

This function iterates through each pair of elements in the `numbers` vector and checks if the absolute difference between any two elements is less than the given `threshold`. If such a pair is found, the function returns `true`; otherwise, it returns `false`.