Here is a Julia function that implements the given problem:

```julia
function sorted_list_sum(xs::Vector{String})::Vector{String}
    # Filter out strings with odd lengths
    filtered_list = filter(x -> length(x) % 2 == 0, xs)

    # Sort the list by length and then alphabetically
    sorted_list = sort(filtered_list, by=x -> (length(x), x))

    return sorted_list
end
```

This function first filters out the strings with odd lengths using the `filter` function. Then, it sorts the list by length and then alphabetically using the `sort` function with a custom sorting function specified by the `by` keyword argument. The `length` function is used to get the length of each string, and the `%` operator is used to check if the length is even. The `sort` function returns a new sorted array, so no changes are made to the original array.