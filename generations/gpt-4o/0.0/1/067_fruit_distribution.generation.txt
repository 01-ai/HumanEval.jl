To implement the `fruit_distribution` function in Julia, we need to extract the number of apples and oranges from the input string and then subtract these from the total number of fruits to get the number of mangoes. Here's how you can do it:

1. Use regular expressions to extract the numbers of apples and oranges from the string.
2. Convert these extracted numbers from strings to integers.
3. Subtract the sum of apples and oranges from the total number of fruits to get the number of mangoes.

Here's the implementation:

```julia
function fruit_distribution(s::String, n::Int)::Int
    # Use regular expressions to find the number of apples and oranges
    apples_match = match(r"(\d+) apples", s)
    oranges_match = match(r"(\d+) oranges", s)
    
    # Extract the numbers from the matches and convert them to integers
    apples = parse(Int, apples_match.captures[1])
    oranges = parse(Int, oranges_match.captures[1])
    
    # Calculate the number of mangoes
    mangoes = n - apples - oranges
    
    return mangoes
end
```

Let's test the function with the provided examples:

```julia
println(fruit_distribution("5 apples and 6 oranges", 19))  # Should print 8
println(fruit_distribution("0 apples and 1 oranges", 3))   # Should print 2
println(fruit_distribution("2 apples and 3 oranges", 100)) # Should print 95
println(fruit_distribution("100 apples and 1 oranges", 120)) # Should print 19
```

This implementation uses regular expressions to accurately extract the numbers of apples and oranges from the input string and then performs the necessary arithmetic to determine the number of mangoes.