Here is the Julia function that matches the provided docstring:
```julia
function sum_product(numbers::Vector{Int})::Tuple{Int, Int}
    sum_val = 0
    prod_val = 1
    for num in numbers
        sum_val += num
        prod_val *= num
    end
    return sum_val, prod_val
end
```
This function initializes `sum_val` to 0 and `prod_val` to 1, then iterates over the input vector `numbers`. For each number, it adds it to `sum_val` and multiplies `prod_val` by it. Finally, it returns a tuple containing the final values of `sum_val` and `prod_val`.

You can test this function with the examples provided in the docstring:
```julia
julia> sum_product(Int[])
(0, 1)

julia> sum_product([1, 2, 3, 4])
(10, 24)
```
Alternatively, you can use the `sum` and `prod` functions from the Julia standard library to implement the function in a more concise way:
```julia
function sum_product(numbers::Vector{Int})::Tuple{Int, Int}
    return sum(numbers), prod(numbers)
end
```
This implementation is equivalent to the previous one, but uses the built-in `sum` and `prod` functions to calculate the sum and product of the input vector.