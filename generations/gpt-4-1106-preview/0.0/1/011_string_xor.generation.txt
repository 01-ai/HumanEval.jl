Certainly! Below is the Julia function `string_xor` that takes two binary strings `a` and `b`, performs a binary XOR operation on them, and returns the result as a string.

```julia
function string_xor(a::String, b::String)::String
    # Ensure both strings are of equal length
    if length(a) != length(b)
        throw(ArgumentError("Input strings must be of the same length"))
    end

    # Perform XOR operation on each pair of characters
    result = [xor(parse(Int, a[i]), parse(Int, b[i])) for i in 1:length(a)]

    # Convert the result array back to a string
    return join(string.(result))
end

# Example usage:
println(string_xor("010", "110"))  # Output should be "100"
```

This function iterates over each character in the input strings, converts them to integers, performs the XOR operation, and then converts the result back to a string. Note that this function assumes that the input strings are of equal length and contain only `1`s and `0`s. If the strings are of different lengths, it will throw an `ArgumentError`.