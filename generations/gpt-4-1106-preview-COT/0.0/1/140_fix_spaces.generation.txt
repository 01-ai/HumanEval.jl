To implement the `fix_spaces` function, we will follow these steps:

1. Check if the input string `s` is empty. If it is, return it as is.
2. Initialize an empty string `result` to build the output.
3. Iterate over the characters of the input string `s`.
4. Keep track of whether the previous character was a space to handle consecutive spaces.
5. If the current character is not a space, append it to `result`.
6. If the current character is a space and the previous character was not a space, append an underscore to `result`.
7. If the current character is a space and the previous character was also a space, replace the last character in `result` with a dash if it's not already a dash.
8. After the iteration, return the `result` string.

Now, let's write the code for the `fix_spaces` function:

```julia
function fix_spaces(s::String)::String
    # Step 1: Check if the string is empty
    if isempty(s)
        return s
    end

    # Step 2: Initialize the result string
    result = ""
    was_space = false  # To keep track of consecutive spaces

    # Step 3: Iterate over the characters in the string
    for c in s
        if c != ' '
            # Step 5: If the character is not a space, append it to result
            result *= c
            was_space = false
        else
            if !was_space
                # Step 6: If it's the first space, append an underscore
                result *= '_'
            else
                # Step 7: If it's a consecutive space, replace the last character with a dash
                if !endswith(result, '-')
                    result = result[1:end-1] * '-'
                end
            end
            was_space = true
        end
    end

    # Step 8: Return the result
    return result
end
```

Let's test the function with the provided examples:

```julia
println(fix_spaces("Example"))  # Should print "Example"
println(fix_spaces("Example 1"))  # Should print "Example_1"
println(fix_spaces(" Example 2"))  # Should print "_Example_2"
println(fix_spaces(" Example   3"))  # Should print "_Example-3"
```

This code should work