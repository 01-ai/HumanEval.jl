Here is a Julia function that implements the given problem:

```julia
function starts_one_ends(n::Int)::Int
    if n < 1
        return 0
    end
    if n == 1
        return 1
    end
    return 2 * 9 * 10^(n-2)
end
```

This function works by first checking if `n` is less than 1 or equal to 1. If `n` is less than 1, it returns 0 because there are no n-digit numbers with the property. If `n` is 1, it returns 1 because there is only one 1-digit number that starts or ends with 1.

For `n` greater than 1, it calculates the count of n-digit numbers that start or end with 1. This is done by multiplying 2 (for the two possibilities of starting or ending with 1) by the number of 1-9 choices (9) and the number of (n-2) digits that can follow (from 10^(n-2)).

This function assumes that `n` is a positive integer. If `n` is not a positive integer, the function will not work correctly.
