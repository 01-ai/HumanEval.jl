Sure, here is the Julia function based on your docstring:

```julia
function eat(number::Int, need::Int, remaining::Int)::Vector{Int}
    # Check if there are enough carrots remaining
    if remaining >= need
        # If there are enough carrots, eat the needed amount and return the total eaten and remaining
        return [number + need, remaining - need]
    else
        # If there are not enough carrots, eat all remaining carrots and return the total eaten and remaining
        return [number + remaining, 0]
    end
end
```
This function first checks if there are enough carrots remaining to satisfy the rabbit's hunger. If there are, it adds the needed carrots to the number already eaten and subtracts them from the remaining carrots. If there are not enough carrots, it adds all remaining carrots to the number already eaten and sets the remaining carrots to 0. The function then returns an array with the total number of carrots eaten and the number of carrots remaining.