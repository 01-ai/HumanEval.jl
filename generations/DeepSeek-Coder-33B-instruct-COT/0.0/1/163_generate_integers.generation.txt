Here is a step-by-step outline of how you can solve this problem:

1. Initialize an empty vector to store the even numbers.
2. Iterate over the range from `a` to `b` (inclusive).
3. For each number in the range, check if it is even.
4. If the number is even, append it to the vector.
5. Return the vector.

Here is the Julia code that implements the above steps:

```julia
function generate_integers(a::Int, b::Int)::Vector{Int}
    result = Int[]
    for i in min(a, b):max(a, b)
        if i % 2 == 0
            push_end_vector(result, i)
        end
    end
    return result
end
```

This function works by iterating over the range from `a` to `b` (inclusive), and for each number, it checks if the number is even by using the modulus operator `%`. If the number is even, it is appended to the result vector using the `push_end_vector` function. The function finally returns the result vector.

Note: The `min` and `max` functions are used to ensure that the range is correctly defined regardless of the order of `a` and `b`.
