Sure, here is the Julia function that meets your requirements:

```julia
function f(n::Int)::Vector{Int}
    result = Vector{Int}(undef, n)
    for i in 1:n
        if i % 2 == 0
            result[i] = factorial(i)
        else
            result[i] = sum(1:i)
        end
    end
    return result
end

# Define factorial function
function factorial(n::Int)
    n == 0 && return 1
    return n * factorial(n - 1)
end
```

This function first creates an uninitialized vector of integers of size `n`. It then iterates over the indices from 1 to `n`. If the index `i` is even, it sets the `i`th element of the result vector to the factorial of `i`. If `i` is odd, it sets the `i`th element to the sum of numbers from 1 to `i`. The factorial function is defined separately to calculate the factorial of a number.