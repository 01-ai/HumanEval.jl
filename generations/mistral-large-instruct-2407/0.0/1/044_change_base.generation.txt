 Certainly! Below is the implementation of the `change_base` function in Julia based on the provided docstring:

```julia
"""
    change_base(x::Int, base::Int)::String

Change numerical base of input number x to base. Return string representation
after the conversion. base numbers are less than 10.

# Examples

```jldoctest
julia> change_base(8, 3)
"22"

julia> change_base(8, 2)
"1000"

julia> change_base(7, 2)
"111"
```
"""
function change_base(x::Int, base::Int)::String
    if base < 2 || base > 9
        throw(ArgumentError("Base must be between 2 and 9"))
    end

    if x == 0
        return "0"
    end

    result = ""
    while x > 0
        remainder = x % base
        x = div(x, base)
        pushfirst!(result, string(remainder))
    end

    return result
end
```

This function converts a given integer `x` to a specified base (between 2 and 9) and returns the result as a string. The function handles the conversion by repeatedly dividing the number by the base and collecting the remainders. The remainders are then concatenated in reverse order to form the final string representation of the number in the new base.