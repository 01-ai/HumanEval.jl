Here is the Julia function that implements the functionality described in the docstring:

```julia
function rolling_max(numbers::Vector{Int})
    max_vector = Int[]
    current_max = numbers[1]
    for number in numbers
        if number > current_max
            current_max = number
        end
        push!(max_vector, current_max)
    end
    return max_vector
end
```

This function initializes an empty vector `max_vector` to store the rolling maximums and a variable `current_max` to keep track of the current maximum value. It then iterates over the input vector `numbers`, updating `current_max` if the current number is greater than `current_max`, and pushes the current maximum value to `max_vector` at each step. Finally, it returns the `max_vector` containing the rolling maximums.