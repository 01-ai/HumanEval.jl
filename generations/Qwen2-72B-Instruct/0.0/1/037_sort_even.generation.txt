```julia
function sort_even(l::Vector)
    # Extract even indexed elements and sort them
    even_elements = sort(l[2:2:end])
    
    # Initialize the result vector with the same size as input
    result = similar(l)
    
    # Copy odd indexed elements directly to the result vector
    result[1:2:end] = l[1:2:end]
    
    # Copy sorted even indexed elements to the result vector
    result[2:2:end] = even_elements
    
    return result
end
```

This function first extracts the elements at even indices from the input vector `l` and sorts them. It then creates a new vector `result` of the same size as `l`. The odd-indexed elements from `l` are copied directly to `result`, and the sorted even-indexed elements are copied to the even indices of `result`. Finally, the function returns the `result` vector.