```julia
function specialFilter(nums::Vector{Int})::Int
    count = 0
    for num in nums
        # Ignore numbers less than or equal to 10
        num <= 10 && continue

        # Convert number to string to check first and last digits
        num_str = string(abs(num))
        first_digit = parse(Int, num_str[1])
        last_digit = parse(Int, num_str[end])

        # Check if both first and last digits are odd
        if first_digit % 2 != 0 && last_digit % 2 != 0
            count += 1
        end
    end
    return count
end
```
This function iterates through the given array of numbers, checks if a number is greater than 10, and then checks if both the first and last digits of the number are odd. If these conditions are met, the count is incremented. Finally, the function returns the count of numbers that meet the criteria.