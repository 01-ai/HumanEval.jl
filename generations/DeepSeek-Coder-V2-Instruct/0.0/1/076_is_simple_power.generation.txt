 Here's the implementation of the `is_simple_power` function in Julia:

```julia
function is_simple_power(x::Number, n::Number)::Bool
    if x == 1
        return true
    elseif n == 1
        return false
    else
        power = 1
        while power < x
            power *= n
            if power == x
                return true
            end
        end
        return false
    end
end
```

This function checks if `x` is a simple power of `n` by iteratively multiplying `n` by itself until the result is equal to or greater than `x`. If at any point the result equals `x`, it returns `true`. If the loop ends without finding such a power, it returns `false`. Special cases for `x == 1` and `n == 1` are handled separately.