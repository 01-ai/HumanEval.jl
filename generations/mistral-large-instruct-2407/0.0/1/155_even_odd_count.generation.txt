 Certainly! Below is the implementation of the `even_odd_count` function in Julia based on the given docstring:

```julia
"""
    even_odd_count(num::Int)::Tuple{Int, Int}

Given an integer, return a tuple that has the number of even and odd digits
respectively.

# Examples

```jldoctest
julia> even_odd_count(-12)
(1, 1)

julia> even_odd_count(123)
(1, 2)
```
"""
function even_odd_count(num::Int)::Tuple{Int, Int}
    num = abs(num)  # Consider the absolute value to handle negative numbers
    even_count = 0
    odd_count = 0

    while num > 0
        digit = num % 10
        if iseven(digit)
            even_count += 1
        else
            odd_count += 1
        end
        num รท= 10
    end

    return (even_count, odd_count)
end
```

This function works by first taking the absolute value of the input number to handle negative numbers. It then iterates through each digit of the number, checking if it is even or odd, and increments the respective counters. Finally, it returns a tuple containing the counts of even and odd digits.