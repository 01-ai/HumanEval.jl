To implement the `car_race_collision` function, we can follow these steps:

### Outline

1. **Understand the Problem**: We have an equal number of cars moving towards each other from opposite directions on a straight line. Since all cars move at the same speed and continue their trajectory post-collision, each car from one direction will eventually collide with each car from the opposite direction.

2. **Identify the Solution**: The number of collisions can be determined by understanding that each car moving in one direction will collide with every car coming from the opposite direction. Given `n` cars in each direction, the total number of collisions will be `n * n`.

3. **Implement the Function**:
   - The function takes an integer `n` as input, representing the number of cars moving in each direction.
   - Calculate the total number of collisions by squaring `n`.
   - Return the total number of collisions.

4. **Return the Result**: The function returns the total number of collisions as an integer.

### Code

Based on the outline, here is the Julia code for the `car_race_collision` function:

```julia
function car_race_collision(n::Int)::Int
    # Calculate the total number of collisions
    total_collisions = n * n
    
    # Return the total number of collisions
    return total_collisions
end
```

This function directly calculates the total number of collisions based on the understanding that each car from one direction will collide with each car from the opposite direction, given that all cars move at the same speed and continue their trajectory post-collision.