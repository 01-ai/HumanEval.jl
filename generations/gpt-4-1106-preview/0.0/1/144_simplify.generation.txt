To implement the `simplify` function, we need to parse the string representations of the fractions, multiply them, and then check if the result is a whole number. Here's how you can do it in Julia:

```julia
function simplify(x::String, n::String)::Bool
    # Parse the fractions
    x_num, x_den = parse.(Int, split(x, '/'))
    n_num, n_den = parse.(Int, split(n, '/'))
    
    # Multiply the fractions
    result_num = x_num * n_num
    result_den = x_den * n_den
    
    # Check if the result is a whole number
    return result_num % result_den == 0
end

# Examples
println(simplify("1/5", "5/1"))  # true
println(simplify("1/6", "2/1"))  # false
println(simplify("7/10", "10/2"))  # false
```

This function first splits the input strings by the '/' character to separate the numerator and denominator. It then parses these parts into integers. After that, it multiplies the numerators together and the denominators together. Finally, it checks if the numerator is divisible by the denominator without a remainder, which would indicate that the result is a whole number. If so, it returns `true`; otherwise, it returns `false`.