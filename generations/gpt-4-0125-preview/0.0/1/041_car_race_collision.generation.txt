To implement the `car_race_collision` function as described, we can observe that since all cars move at the same speed and are infinitely sturdy (meaning they continue moving after a collision without any change in speed or direction), the number of collisions will be determined by the number of cars moving in each direction. Given that there are `n` cars moving left to right and `n` cars moving right to left, each car moving left to right will eventually collide with each of the cars moving right to left, assuming the road is infinitely long and straight.

Therefore, the total number of collisions can be calculated simply as the product of the number of cars in each group, which in this case is `n * n` or `n^2`. Here's how you can implement the `car_race_collision` function in Julia:

```julia
function car_race_collision(n::Int)::Int
    # Since each car moving in one direction will collide with each car moving in the opposite direction,
    # the total number of collisions is n * n, where n is the number of cars in each direction.
    return n^2
end
```

This function takes an integer `n` as input, representing the number of cars moving in each direction, and returns the total number of collisions, calculated as `n^2`.