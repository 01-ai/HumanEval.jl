Here is the implementation of the `int_to_mini_roman` function:

```julia
function int_to_mini_roman(number::Int)::String
    roman_numerals = Dict(
        1 => "i",
        4 => "iv",
        5 => "v",
        9 => "ix",
        10 => "x",
        40 => "xl",
        50 => "l",
        90 => "xc",
        100 => "c",
        400 => "cd",
        500 => "d",
        900 => "cm",
        1000 => "m"
    )
    
    result = ""
    for (value, symbol) in sort(collect(roman_numerals), rev=true)
        while number >= value
            result *= symbol
            number -= value
        end
    end
    
    return result
end
```

This function uses a dictionary to map the integer values to their corresponding roman numeral symbols. It then iterates over the dictionary in descending order of values and checks if the given number is greater than or equal to the current value. If it is, it appends the corresponding symbol to the result string and subtracts the value from the number. Finally, it returns the result string.