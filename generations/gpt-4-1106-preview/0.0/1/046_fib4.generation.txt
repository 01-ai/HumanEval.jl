Certainly! Below is the Julia function `fib4` that computes the n-th element of the fib4 number sequence without using recursion:

```julia
function fib4(n::Int)::Int
    # Base cases
    if n == 0
        return 0
    elseif n == 1
        return 0
    elseif n == 2
        return 2
    elseif n == 3
        return 0
    end

    # Initialize the first four values of the sequence
    a, b, c, d = 0, 0, 2, 0

    # Compute the sequence iteratively
    for i in 4:n
        a, b, c, d = b, c, d, a + b + c + d
    end

    return d
end
```

You can test this function with the provided examples:

```julia
println(fib4(5))  # Output should be 4
println(fib4(6))  # Output should be 8
println(fib4(7))  # Output should be 14
```

This function uses an iterative approach to calculate the n-th element of the fib4 sequence, which is more efficient than a recursive approach, especially for large values of `n`.