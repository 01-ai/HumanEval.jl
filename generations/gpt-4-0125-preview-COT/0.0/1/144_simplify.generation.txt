### Step-by-Step Outline

1. **Parse the Input Strings**: Extract the numerators and denominators from the input strings `x` and `n`.
2. **Calculate the Product**: Multiply the fractions by multiplying their numerators and denominators separately.
3. **Simplify the Product**: Simplify the resulting fraction from step 2. This involves finding the greatest common divisor (GCD) of the numerator and denominator and dividing both by this GCD.
4. **Check for Whole Number**: Determine if the simplified fraction is a whole number. This is true if the denominator is 1 after simplification.
5. **Return the Result**: Return `true` if the product is a whole number, otherwise return `false`.

### Julia Code Implementation

```julia
function simplify(x::String, n::String)::Bool
    # Step 1: Parse the Input Strings
    x_num, x_den = parse.(Int, split(x, "/"))
    n_num, n_den = parse.(Int, split(n, "/"))
    
    # Step 2: Calculate the Product
    product_num = x_num * n_num
    product_den = x_den * n_den
    
    # Step 3: Simplify the Product
    gcd_val = gcd(product_num, product_den)
    simplified_num = div(product_num, gcd_val)
    simplified_den = div(product_den, gcd_val)
    
    # Step 4 & 5: Check for Whole Number and Return the Result
    return simplified_den == 1
end
```

This function first parses the input strings to extract the numerators and denominators. It then calculates the product of the two fractions and simplifies this product by dividing both the numerator and denominator by their greatest common divisor. Finally, it checks if the simplified fraction is a whole number (i.e., its denominator is 1) and returns `true` if so, or `false` otherwise.