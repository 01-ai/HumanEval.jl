Here's the implementation of the `reverse_string` function in Julia:

```julia
function reverse_string(s::String)::String
    if any(isletter, s)
        return String(map(c -> isletter(c) ? (isuppercase(c) ? lowercase(c) : uppercase(c)) : c, s))
    else
        return reverse(s)
    end
end
```

### Explanation:
1. **Check if the string contains any letters**:
   - `any(isletter, s)` checks if there is at least one letter in the string `s`.
   
2. **If the string contains letters**:
   - `map` is used to iterate over each character `c` in the string `s`.
   - For each character `c`:
     - If `c` is a letter (`isletter(c)`), its case is reversed:
       - If `c` is uppercase (`isuppercase(c)`), it is converted to lowercase (`lowercase(c)`).
       - Otherwise, it is converted to uppercase (`uppercase(c)`).
     - If `c` is not a letter, it remains unchanged.
   - `String(map(...))` constructs a new string from the mapped characters.
   
3. **If the string contains no letters**:
   - `reverse(s)` reverses the entire string `s`.

### Examples:
- `reverse_string("1234")` returns `"4321"`.
- `reverse_string("ab")` returns `"AB"`.
- `reverse_string("#a@C")` returns `"#A@c"`.

You can test the function with the provided examples to ensure it works as expected.