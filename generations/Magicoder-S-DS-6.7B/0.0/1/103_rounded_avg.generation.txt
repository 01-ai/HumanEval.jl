function rounded_avg(n::Int, m::Int)::Union{Int, String}
    if n > m
        return -1
    else
        avg = round(Int, (n + m) / 2)
        return bin(avg)
    end
end

function bin(n::Int)::String
    if n == 0
        return "0"
    end
    bin_str = ""
    while n > 0
        bin_str = string(n % 2, bin_str)
        n = div(n, 2)
    end
    return bin_str
end

# Test cases
println(rounded_avg(1, 5)) # "11"
println(rounded_avg(7, 5)) # -1
println(rounded_avg(10, 20)) # "1111"
println(rounded_avg(20, 33)) # "11010"