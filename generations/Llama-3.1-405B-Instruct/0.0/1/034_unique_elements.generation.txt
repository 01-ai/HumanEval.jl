Here is the Julia function that implements the specified behavior:
```julia
function unique_elements(l::Vector)
    return sort(unique(l))
end
```
Explanation:

* The `unique` function is used to remove duplicate elements from the input vector `l`.
* The `sort` function is then used to sort the resulting vector of unique elements in ascending order.

With this implementation, the example usage in the docstring should produce the expected output:
```julia
julia> unique_elements([5, 3, 5, 2, 3, 3, 9, 0, 123])
6-element Vector{Int64}:
   0
   2
   3
   5
   9
 123
```
Note that this implementation assumes that the input vector `l` contains elements that can be compared using the default comparison operators (e.g., integers, floats, strings). If the input vector contains more complex elements (e.g., custom structs), additional modifications may be necessary.