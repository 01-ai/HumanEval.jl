```julia
function search(numbers::Vector{Int})::Int
    # Initialize a dictionary to count the frequencies of each integer
    freq_dict = Dict{Int, Int}()
    
    # Count the frequencies of each integer in the list
    for number in numbers
        if number > 0
            freq_dict[number] = get(freq_dict, number, 0) + 1
        end
    end
    
    # Find the greatest integer with a frequency greater than or equal to itself
    max_freq = -1
    max_num = -1
    for (num, freq) in freq_dict
        if freq >= num && (max_freq == -1 || freq > max_freq)
            max_freq = freq
            max_num = num
        end
    end
    
    # Return the greatest integer if found, otherwise return -1
    return max_num == -1 ? -1 : max_num
end
```

This function works by first creating a dictionary to count the frequencies of each integer in the list. It then iterates over the dictionary to find the greatest integer with a frequency greater than or equal to itself. If such an integer is found, it is returned; otherwise, `-1` is returned.