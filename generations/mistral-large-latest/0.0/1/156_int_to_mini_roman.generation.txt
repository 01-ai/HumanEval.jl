Sure, here's a Julia function that converts a positive integer to its lowercase Roman numeral equivalent:

```julia
function int_to_mini_roman(number::Int)::String
    # Define the Roman numerals and their corresponding values
    romans = Dict('i' => 1, 'v' => 5, 'x' => 10, 'l' => 50, 'c' => 100, 'd' => 500, 'm' => 1000)

    # Initialize an empty string to store the result
    result = ""

    # Loop through the Roman numerals in reverse order
    for (r, v) in sort(collect(romans), by=x->x[2], rev=true)
        # While the number is greater than or equal to the current Roman numeral value
        while number >= v
            # Subtract the value from the number and add the Roman numeral to the result
            number -= v
            result *= r
        end
    end

    # Return the result
    return result
end
```

This function works by iterating over the Roman numerals in decreasing order of their values. For each Roman numeral, it subtracts its value from the input number as many times as possible, and appends the Roman numeral to the result string the same number of times. This process continues until the entire input number has been converted to Roman numerals. The function then returns the resulting string.