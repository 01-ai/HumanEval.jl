Here is a Julia function that solves the problem:

```julia
function words_in_sentence(sentence::String)::String
    words = split(sentence)
    prime_words = String[]
    for word in words
        if is_prime(length(word))
            push(prime_words, word)
        end
    end
    return join(prime_words, " ")
end

function is_prime(n::Int)::Bool
    if n == 1
        return false
    end
    for i in 2:sqrt(n)
        if n % i == 0
            return false
        end
    end
    return true
end
```

This function first splits the sentence into words. Then it checks each word's length. If the length is a prime number, it adds the word to the list of prime words. Finally, it joins the prime words into a string and returns it.

The `is_prime` function checks if a number is prime by checking if it has any divisors other than 1 and itself. If it finds a divisor, it returns `false`. If it doesn't find any divisors, it returns `true`.
