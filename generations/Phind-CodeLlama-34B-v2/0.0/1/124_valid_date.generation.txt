

function valid_date(date::String)::Bool
    # Check if the date string is empty
    if date == ""
        return false
    end

    # Check if the date is in the correct format
    if occursin(r"^\d{2}-\d{2}-\d{4}$", date) == false
        return false
    end

    # Split the date into month, day, and year
    month, day, year = parse.(Int, split(date, "-"))

    # Check if the month is valid
    if month < 1 || month > 12
        return false
    end

    # Check if the day is valid
    if day < 1 || day > 31
        return false
    end

    # Adjust the valid day range for certain months
    if month in [4, 6, 9, 11] && day > 30
        return false
    elseif month == 2 && day > 29
        return false
    elseif month in [1, 3, 5, 7, 8, 10, 12] && day > 31
        return false
    end

    # If all checks pass, the date is valid
    return true
end