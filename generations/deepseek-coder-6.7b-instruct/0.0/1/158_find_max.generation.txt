Here is the Julia function that solves the problem:

```julia
function find_max(words::Vector{String})::String
    max_unique_chars = 0
    max_word = ""
    for word in words
        unique_chars = length(Set(collect(word)))
        if unique_chars > max_unique_chars
            max_unique_chars = unique_chars
            max_word = word
        elseif unique_chars == max_unique_chars
            max_word = min(max_word, word)
        end
    end
    return max_word
end
```

This function iterates over each word in the input vector. For each word, it calculates the number of unique characters by converting the word to a set (which automatically removes duplicates) and then counting the length of the set. If the number of unique characters is greater than the current maximum, it updates the maximum and the corresponding word. If the number of unique characters is equal to the current maximum, it updates the word only if the new word comes lexicographically before the current word.
