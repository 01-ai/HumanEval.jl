To implement the `file_name_check` function in Julia, we need to follow the specified rules in the doc string. Here's how you can do it:

```julia
function file_name_check(file_name::String)::String
    # Check if the file name contains exactly one dot
    if count(c -> c == '.', file_name) != 1
        return "No"
    end

    # Split the file name into the name part and the extension part
    parts = split(file_name, '.')
    name_part, extension_part = parts[1], parts[2]

    # Check if the name part is not empty and starts with a latin alphabet letter
    if isempty(name_part) || !occursin(r"^[a-zA-Z]", name_part)
        return "No"
    end

    # Check if the extension part is one of the allowed extensions
    if extension_part âˆ‰ ["txt", "exe", "dll"]
        return "No"
    end

    # Check if there are more than three digits in the file's name
    if count(c -> isdigit(c), file_name) > 3
        return "No"
    end

    return "Yes"
end
```

This function first checks if there is exactly one dot in the file name. Then, it splits the file name into the name part and the extension part based on the dot. It checks if the name part starts with a letter from the Latin alphabet and is not empty, if the extension is one of the allowed ones, and finally, if there are more than three digits in the entire file name. If any of these checks fail, it returns "No"; otherwise, it returns "Yes".