

```julia
function split_words(txt::String)::Union{Vector{<:AbstractString},Int}
    if occursin(" ", txt)
        return split(txt, " ")
    elseif occursin(",", txt)
        return split(txt, ",")
    else
        return count(c -> islowercase(c) && c in 'a':'z' && (ord(c) - ord('a')) % 2 == 1, txt)
    end
end
```

This function first checks if the input string contains a whitespace character. If it does, it splits the string on whitespace and returns the resulting array. If it doesn't, it checks if the string contains a comma. If it does, it splits the string on commas and returns the resulting array. If it doesn't contain any whitespace or commas, it counts the number of lowercase letters with odd order in the alphabet and returns that number.