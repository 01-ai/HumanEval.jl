

function histogram(s::String)::Dict{String, Int}
    # Split the string into words
    words = split(s)

    # Create a dictionary to store the count of each word
    count_dict = Dict{String, Int}()

    # Iterate over each word in the string
    for word in words
        # If the word is already in the dictionary, increment its count
        if haskey(count_dict, word)
            count_dict[word] += 1
        # Otherwise, add the word to the dictionary with a count of 1
        else
            count_dict[word] = 1
        end
    end

    # Find the maximum count
    max_count = maximum(values(count_dict))

    # Create a new dictionary with only the words that have the maximum count
    max_dict = Dict{String, Int}(word => count for (word, count) in count_dict if count == max_count)

    return max_dict
end

# Test the function
println(histogram("a b c"))
println(histogram("a b b a"))
println(histogram("a b c a b"))
println(histogram("b b b b a"))
println(histogram(""))