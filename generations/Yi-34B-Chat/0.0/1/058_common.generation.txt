```julia
function common(l1::Vector, l2::Vector)::Vector
    # Sort both lists
    l1 = sort(l1)
    l2 = sort(l2)

    # Initialize the result vector
    result = Vector{eltype(l1)}(undef, 0)

    # Loop through the first list and check if the element is present in the second list
    for i in l1
        # If the element is present, add it to the result vector
        if findfirst(==(i), l2) !== nothing
            # If the element is already in the result vector, skip it
            if !(i in result)
                push!(result, i)
            end
        end
    end

    # Sort the result vector and return it
    sort!(result)
    return result
end
```

This function sorts both input lists, then iterates over the first list and checks if each element is present in the second list. If an element is present in both lists and is not already in the result vector, it is added to the result. Finally, the result vector is sorted and returned.