Sure, here's the implementation of the `below_zero` function in Julia:

```julia
function below_zero(operations::Vector{Int})::Bool
    balance = 0
    for operation in operations
        balance += operation
        if balance < 0
            return true
        end
    end
    return false
end
```

This function iterates through the list of operations, updating the balance accordingly. If at any point the balance falls below zero, it returns `true`. If the loop completes without the balance falling below zero, it returns `false`.

Let's test the function with the provided examples:

```julia
println(below_zero([1, 2, 3]))       # Output should be false
println(below_zero([1, 2, -4, 5]))   # Output should be true
```

You can run these tests to verify that the function works as expected.