Here is a Julia function that solves the problem:

```julia
function hex_key(num::String)::Int
    primes = Set(['2', '3', '5', '7', 'B', 'D'])
    return count(c -> c in primes, num)
end
```

This function works by first creating a set of the hexadecimal digits that are prime numbers. Then it counts the number of characters in the input string that are in the set of prime digits.

Let's test the function with the provided examples:

```julia
println(hex_key("AB")) # 1
println(hex_key("1077E")) # 2
println(hex_key("ABED1A33")) # 4
println(hex_key("123456789ABCDEF0")) # 6
println(hex_key("2020")) # 2
```

This function works by first creating a set of the hexadecimal digits that are prime numbers. Then it counts the number of characters in the input string that are in the set of prime digits.
