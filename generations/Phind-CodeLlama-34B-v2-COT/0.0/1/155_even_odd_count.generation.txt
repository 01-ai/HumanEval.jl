

# Outline

1. Initialize two counters, `even_count` and `odd_count`, both initially set to 0.
2. Convert the input number to a string to easily access each digit.
3. Iterate over each character in the string representation of the number.
4. If the current character is a digit, check if it is even or odd.
5. Increment the respective counter (`even_count` or `odd_count`).
6. After the loop, return a tuple of the two counters.

# Code

```julia
function even_odd_count(num::Int)::Tuple{Int, Int}
    # Initialize counters
    even_count = 0
    odd_count = 0

    # Convert number to string
    num_str = string(abs(num))  # We use abs() to handle negative numbers

    # Iterate over each character in the string
    for char in num_str
        # Check if the digit is even or odd
        if char % 2 == 0
            even_count += 1
        else
            odd_count += 1
        end
    end

    # Return the tuple of counters
    return (even_count, odd_count)
end
```