 Here's the implementation of the `histogram` function in Julia based on the provided doc string:

```julia
function histogram(s::String)::Dict{String, Int}
    # Split the string into individual words
    words = split(s)
    
    # Create a dictionary to count occurrences of each word
    word_counts = Dict{String, Int}()
    
    # Count the occurrences of each word
    for word in words
        if haskey(word_counts, word)
            word_counts[word] += 1
        else
            word_counts[word] = 1
        end
    end
    
    # Find the maximum count
    max_count = maximum(values(word_counts))
    
    # Filter the dictionary to include only words with the maximum count
    result = Dict(word => count for (word, count) in word_counts if count == max_count)
    
    return result
end
```

This function works as follows:
1. It splits the input string into individual words.
2. It counts the occurrences of each word using a dictionary.
3. It finds the maximum count of any word.
4. It filters the dictionary to include only the words that have the maximum count.
5. It returns the filtered dictionary.