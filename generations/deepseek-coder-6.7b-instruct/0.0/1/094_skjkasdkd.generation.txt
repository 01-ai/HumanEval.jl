Here is the Julia function that solves the problem:

```julia
function skjkasdkd(xs::Vector{Int})::Int
    function isprime(n)
        if n ≤ 1
            return false
        elseif n ≤ 3
            return true
        elseif n % 2 == 0 || n % 3 == 0
            return false
        end
        i = 5
        while i * i ≤ n
            if n % i == 0 || n % (i + 2) == 0
                return false
            end
            i += 6
        end
        return true
    end

    primes = filter(isprime, xs)
    if isempty(primes)
        return 0
    else
        largest_prime = maximum(primes)
        return sum(parse.(Int, collect(string(largest_prime))))
    end
end
```

This function first defines a helper function `isprime` to check if a number is prime. Then it filters the input vector `xs` to get a list of prime numbers. If there are no primes, it returns 0. Otherwise, it finds the largest prime number and returns the sum of its digits.
