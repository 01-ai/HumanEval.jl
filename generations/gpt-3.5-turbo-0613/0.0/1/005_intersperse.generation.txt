Here is the implementation of the `intersperse` function in Julia:

```julia
function intersperse(numbers::Vector{Int}, delimiter::Int)::Vector{Int}
    result = Int[]
    n = length(numbers)
    if n > 0
        push!(result, numbers[1])
        for i in 2:n
            push!(result, delimiter)
            push!(result, numbers[i])
        end
    end
    return result
end
```

This function takes in a vector of integers `numbers` and an integer `delimiter`. It creates an empty vector `result` to store the final result. If the input vector `numbers` is not empty, it pushes the first element of `numbers` into `result`. Then, it iterates over the remaining elements of `numbers` and pushes the `delimiter` and the current element into `result`. Finally, it returns the `result` vector.

You can test the function using the provided examples.