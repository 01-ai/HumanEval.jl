```julia
function even_odd_palindrome(n::Int)::Tuple{Int, Int}
    even_count = 0
    odd_count = 0

    for i in 1:n
        if ispalindrome(i)
            if i % 2 == 0
                even_count += 1
            else
                odd_count += 1
            end
        end
    end

    return (even_count, odd_count)
end

# Helper function to check if a number is a palindrome
function ispalindrome(n::Int)
    # Convert to string and check if it's a palindrome
    return n == reverse(string(n))
end
```

This function `even_odd_palindrome` takes a positive integer `n` and returns a tuple containing the number of even and odd palindromes within the range of 1 to `n`, inclusive. The function uses a helper function `ispalindrome` to check if a number is a palindrome.