Sure, here is the implementation of the `remove_duplicates` function in Julia:

```julia
function remove_duplicates(numbers::Vector{Int})::Vector{Int}
    # Create a dictionary to count occurrences of each number
    counts = Dict{Int, Int}()
    
    # Count occurrences of each number
    for num in numbers
        if haskey(counts, num)
            counts[num] += 1
        else
            counts[num] = 1
        end
    end
    
    # Filter out numbers that occur more than once
    result = [num for num in numbers if counts[num] == 1]
    
    return result
end
```

You can test this function with the provided example:

```julia
println(remove_duplicates([1, 2, 3, 2, 4]))  # Output should be [1, 3, 4]
```

This function first counts the occurrences of each number using a dictionary. Then, it constructs a new list containing only the numbers that appear exactly once, preserving the original order.