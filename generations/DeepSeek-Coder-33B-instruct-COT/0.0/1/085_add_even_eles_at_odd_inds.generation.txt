Here is a step-by-step outline of how to solve this problem:

1. Initialize a variable `sum` to 0. This variable will hold the sum of the even elements at odd indices.
2. Iterate over the elements of the input list `xs`.
3. For each element, check if its index is odd and if the element is even.
4. If the element is even and its index is odd, add it to `sum`.
5. After iterating over all elements, return `sum`.

Here is the Julia code that implements this algorithm:

```julia
function add_even_eles_at_odd_inds(xs::Vector{Int})::Int
    sum = 0
    for (i, x) in enumerate(xs)
        if i % 2 != 0 && x % 2 == 0
            sum += x
        end
    end
    return sum
end
```

This function works by iterating over the elements of the input list `xs` and their indices using the `enumerate` function. It checks if the index is odd (`i % 2 != 0`) and if the element is even (`x % 2 == 0`). If both conditions are true, it adds the element to `sum`. Finally, it returns `sum`.
