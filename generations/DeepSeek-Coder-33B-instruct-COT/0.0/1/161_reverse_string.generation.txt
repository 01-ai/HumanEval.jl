Here is a step-by-step outline of how you can solve this problem:

1. Check if the string contains any letters. If it doesn't, reverse the string and return it.
2. If the string contains letters, iterate over each character in the string.
3. If the character is a letter, reverse its case (from lower to upper or vice versa).
4. If the character is not a letter, keep it as it is.
5. Join all the characters together and return the resulting string.

Here is the Julia code that implements the above steps:

```julia
function reverse_string(s::String)::String
    if !any(isletter, s)
        return reverse(s)
    end

    reversed_s = map(s) do c
        if isletter(c)
            islowercase(c) ? uppercase(c) : lowercase(c)
        else
            c
        end
    end

    return join(reversed_s)
end
```

In this code, `any(isletter, s)` checks if the string `s` contains any letters. `map(s) do c` iterates over each character `c` in the string `s`. `isletter(c)` checks if `c` is a letter. `islowercase(c)` checks if `c` is a lowercase letter. `uppercase(c)` and `lowercase(c)` convert `c` to uppercase and lowercase respectively. `join(reversed_s)` joins all the characters in `reversed_s` into a string.
