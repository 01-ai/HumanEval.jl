```julia
function numerical_letter_grade(grades::Vector{Float64})::Vector{String}
    letter_grades = []
    for gpa in grades
        if gpa > 4.0
            push!(letter_grades, "A+")
        elseif gpa >= 3.7
            push!(letter_grades, "A")
        elseif gpa >= 3.3
            push!(letter_grades, "A-")
        elseif gpa >= 3.0
            push!(letter_grades, "B+")
        elseif gpa >= 2.7
            push!(letter_grades, "B")
        elseif gpa >= 2.3
            push!(letter_grades, "B-")
        elseif gpa >= 2.0
            push!(letter_grades, "C+")
        elseif gpa >= 1.7
            push!(letter_grades, "C")
        elseif gpa >= 1.3
            push!(letter_grades, "C-")
        elseif gpa >= 1.0
            push!(letter_grades, "D+")
        elseif gpa >= 0.7
            push!(letter_grades, "D")
        elseif gpa >= 0.0
            push!(letter_grades, "D-")
        else
            push!(letter_grades, "E")
        end
    end
    return letter_grades
end
```