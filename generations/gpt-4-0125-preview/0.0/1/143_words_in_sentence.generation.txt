To implement the `words_in_sentence` function, we need to follow these steps:

1. Split the sentence into words.
2. Check if the length of each word is a prime number.
3. If the length is prime, include the word in the result.
4. Return the resulting string.

First, let's implement a helper function to check if a number is prime, as this will be used to filter the words based on their length.

```julia
function is_prime(n::Int)::Bool
    if n <= 1
        return false
    end
    for i in 2:sqrt(n)
        if n % i == 0
            return false
        end
    end
    return true
end
```

Now, let's implement the `words_in_sentence` function using the `is_prime` function to filter the words.

```julia
function words_in_sentence(sentence::String)::String
    # Split the sentence into words
    words = split(sentence)
    
    # Filter words whose lengths are prime numbers
    prime_length_words = filter(word -> is_prime(length(word)), words)
    
    # Join the filtered words back into a string
    return join(prime_length_words, " ")
end
```

This implementation splits the sentence into words, filters those words based on the primality of their lengths using the `is_prime` helper function, and then joins the filtered words back into a string separated by spaces.