Here's the Julia function `generate_integers` that implements the functionality described in the docstring:

```julia
function generate_integers(a::Int, b::Int)::Vector{Int}
    # Ensure a is less than or equal to b
    if a > b
        a, b = b, a
    end
    
    # Generate the range from a to b
    range = a:b
    
    # Filter the even numbers and return them as a vector
    return filter(x -> x % 2 == 0, range)
end

# Example usage:
println(generate_integers(2, 8))
println(generate_integers(8, 2))
println(generate_integers(10, 14))
```

This function first checks if `a` is greater than `b` and swaps them if necessary to ensure that the range is always ascending. Then it generates a range from `a` to `b` and filters out the even numbers using the `filter` function with a lambda that checks if a number is even (`x % 2 == 0`). The result is returned as a vector of integers.