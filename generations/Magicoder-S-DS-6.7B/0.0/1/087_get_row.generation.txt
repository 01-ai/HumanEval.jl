Here is a Julia function that implements the described behavior:

```julia
function get_row(xs::Vector{Vector{Int}}, x::Int)::Vector{Tuple{Int, Int}}
    coords = Tuple{Int, Int}[]
    for (i, row) in enumerate(xs)
        for (j, val) in enumerate(row)
            if val == x
                pushfirst(coords, (i + 1, j + 1))
            end
        end
    end
    sort(coords)
end
```

This function iterates over each row in `xs`, and then over each value in the row. If the value is equal to `x`, it adds a tuple of the row and column indices to `coords`. Finally, it sorts `coords` and returns it.

Note that the indices are 1-based, as requested in the problem description.