To implement the `sort_numbers` function in Julia, we can follow these steps:

1. Create a mapping from the word representation of numbers to their numeric values. This will help us in sorting the numbers.
2. Split the input string into individual words.
3. Sort these words based on their numeric values using the mapping.
4. Join the sorted words back into a single string.

Here's how you can do it:

```julia
function sort_numbers(numbers::String)::String
    # Mapping from word representation of numbers to their numeric values
    num_map = Dict("zero" => 0, "one" => 1, "two" => 2, "three" => 3, "four" => 4,
                   "five" => 5, "six" => 6, "seven" => 7, "eight" => 8, "nine" => 9)
    
    # Split the input string into individual words
    words = split(numbers)
    
    # Sort the words based on their numeric values
    sorted_words = sort(words, by = word -> num_map[word])
    
    # Join the sorted words back into a single string
    sorted_numbers_str = join(sorted_words, " ")
    
    return sorted_numbers_str
end
```

This function first creates a dictionary (`num_map`) that maps the word representation of numbers to their numeric equivalents. It then splits the input string into individual words, sorts these words based on their numeric values using the mapping, and finally joins the sorted words back into a single string.