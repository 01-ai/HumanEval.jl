Here is the implementation of the `is_simple_power` function in Julia:

```julia
function is_simple_power(x::Number, n::Number)::Bool
    if x == 1
        return true
    end
    
    for i in 2:x
        if n^i == x
            return true
        elseif n^i > x
            return false
        end
    end
    
    return false
end
```

This function checks if `x` is equal to `1`, in which case it returns `true` since `1` is a simple power of any number. Then, it iterates from `2` to `x` and checks if `n` raised to the power of `i` is equal to `x`. If it is, it returns `true`. If `n` raised to the power of `i` is greater than `x`, it means that `x` is not a simple power of `n`, so it returns `false`. If the loop finishes without finding a match, it means that `x` is not a simple power of `n`, so it returns `false`.