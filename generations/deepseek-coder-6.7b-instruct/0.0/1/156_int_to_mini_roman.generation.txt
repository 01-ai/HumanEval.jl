Here is the Julia function that solves the problem:

```julia
function int_to_mini_roman(number::Int)::String
    @assert 1 <= number <= 1000 "Number must be between 1 and 1000"

    roman_numerals = ["i", "v", "x", "l", "c", "d", "m"]
    values = [1, 5, 10, 50, 100, 500, 1000]
    result = ""

    for (i, value) in enumerate(values)
        while number >= value
            result *= roman_numerals[i]
            number -= value
        end
        if number == 4
            result *= roman_numerals[i] * roman_numerals[i-1]
            number -= 4 * values[i-1]
        elseif number == 9
            result *= roman_numerals[i] * roman_numerals[i+1]
            number -= 9 * values[i]
        end
    end

    return result
end
```

This function works by iterating over the values and roman numerals arrays in reverse order. For each value, it appends the corresponding roman numeral to the result string as many times as possible without exceeding the number. It then checks if the number is 4 or 9 less than the next value, and if so, appends the corresponding subtractive notation to the result string and subtracts the corresponding value from the number.
