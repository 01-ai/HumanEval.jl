  Here's one way to implement the `generate_integers` function in Julia:
```
function generate_integers(a::Int, b::Int)::Vector{Int}
    if a > b
        return Int[]
    end
    result = Int[]
    for i in a:b
        if i % 2 == 0
            push!(result, i)
        end
    end
    return result
end
```
Explanation:

* The function takes two integer arguments `a` and `b`.
* If `a` is greater than `b`, the function returns an empty vector.
* Otherwise, it initializes an empty vector `result` and iterates over the range `a:b`.
* For each integer `i` in the range, if `i` is even (i.e., `i % 2 == 0`), it is added to the `result` vector.
* Finally, the function returns the `result` vector.

Note that the function uses the `push!` function to add elements to the `result` vector, which is a more efficient way to build a vector in Julia than using the `append` function.