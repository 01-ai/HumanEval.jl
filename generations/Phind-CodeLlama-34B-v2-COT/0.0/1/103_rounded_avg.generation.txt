

To solve this problem, we will first check if `n` is greater than `m`. If it is, we will return `-1`. If not, we will compute the average of the integers from `n` through `m` and round it to the nearest integer. Then, we will convert this integer to binary and return it as a string.

Here is the step-by-step outline:

1. Check if `n` is greater than `m`.
2. If `n` is greater than `m`, return `-1`.
3. If `n` is not greater than `m`, compute the average of the integers from `n` through `m` and round it to the nearest integer.
4. Convert this integer to binary and return it as a string.

Now, let's write the Julia code for this function:

```julia
function rounded_avg(n::Int, m::Int)::Union{Int, String}
    # Check if n is greater than m
    if n > m
        return -1
    else
        # Compute the average of the integers from n through m and round it to the nearest integer
        avg = round(Int, (n + m) / 2)
        
        # Convert this integer to binary and return it as a string
        return string(avg, base = 2)
    end
end
```

This function should now work as expected for the given problem.