Here is a Julia function that implements the given doc string.

```julia
function int_to_mini_roman(number::Int)::String
    if number < 1 || number > 1000
        throw(DomainError(number, "number must be between 1 and 1000"))
    end

    roman_numerals = ["m", "cm", "d", "cd", "c", "xc", "l", "xl", "x", "ix", "v", "iv", "i"]
    values = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1]

    result = ""
    for i in 1:length(values)
        while number >= values[i]
            number -= values[i]
            result *= roman_numerals[i]
        end
    end

    return result
end
```

This function works by iterating over the list of roman numeral values and their corresponding symbols. For each value, it checks if the input number is greater than or equal to the value. If it is, it subtracts the value from the number and appends the corresponding roman numeral symbol to the result string. This process is repeated until the number is less than the current value. The function then returns the result string.

The function also includes a check to ensure that the input number is within the valid range (1 to 1000). If the number is outside this range, it throws a `DomainError`.
