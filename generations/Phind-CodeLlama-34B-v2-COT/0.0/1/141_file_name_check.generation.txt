

To solve this problem, we can use the following steps:

1. Check if the file name contains exactly one dot '.'
2. Split the file name into two substrings using the dot '.' as a separator
3. Check if the first substring (before the dot) is not empty and starts with a latin alphapet letter
4. Check if the second substring (after the dot) is one of these: ["txt", "exe", "dll"]
5. Check if the file name contains not more than three digits ('0'-'9')

If all these conditions are met, the function returns "Yes", otherwise it returns "No".

Here is the Julia code implementing these steps:

```julia
function file_name_check(file_name::String)::String
    # Check if the file name contains exactly one dot '.'
    if count(isequal('.'), file_name) != 1
        return "No"
    end

    # Split the file name into two substrings using the dot '.' as a separator
    parts = split(file_name, ".")

    # Check if the first substring (before the dot) is not empty and starts with a latin alphapet letter
    if isempty(parts[1]) || !occursin(r"^[a-zA-Z]", parts[1])
        return "No"
    end

    # Check if the second substring (after the dot) is one of these: ["txt", "exe", "dll"]
    if parts[2] âˆ‰ ["txt", "exe", "dll"]
        return "No"
    end

    # Check if the file name contains not more than three digits ('0'-'9')
    if count(isdigit, file_name) > 3
        return "No"
    end

    return "Yes"
end
```

This function should work as expected based on the problem description. It checks all the conditions listed and returns "Yes" if all of them are met, and "No" otherwise.