Here is the Julia function that meets the requirements:
```julia
function any_int(x::Number, y::Number, z::Number)::Bool
    # Check if all numbers are integers
    if !(isinteger(x) && isinteger(y) && isinteger(z))
        return false
    end

    # Check if one of the numbers is equal to the sum of the other two
    return (x == y + z) || (y == x + z) || (z == x + y)
end
```
Here's an explanation of the code:

1. We first check if all three numbers are integers using the `isinteger` function. If any of them are not integers, we immediately return `false`.
2. If all numbers are integers, we then check if one of the numbers is equal to the sum of the other two. We use the `||` operator to chain together three separate checks:
	* `x == y + z`
	* `y == x + z`
	* `z == x + y`
If any of these conditions are true, we return `true`. If none of them are true, we return `false`.

You can test this function using the examples provided in the docstring:
```julia
julia> any_int(5, 2, 7)
true

julia> any_int(3, 2, 2)
false

julia> any_int(3, -2, 1)
true

julia> any_int(3.6, -2.2, 2)
false
```