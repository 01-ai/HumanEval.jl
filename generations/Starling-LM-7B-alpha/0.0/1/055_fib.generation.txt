 Here's a Julia function that implements the Fibonacci sequence:

```julia
function fib(n::Int)::Int
    if n <= 1
        return n
    else
        return fib(n-1) + fib(n-2)
    end
end
```

This function uses recursion to calculate the n-th Fibonacci number. If the input `n` is less than or equal to 1, it returns `n`. Otherwise, it recursively calls itself with `n-1` and `n-2`, and returns the sum of the two previous Fibonacci numbers.

Here are some examples of using the `fib` function:

```julia
julia> fib(10)
55

julia> fib(1)
1

julia> fib(8)
21
```

These examples demonstrate that the function correctly calculates the Fibonacci number for the given input.