 function get_odd_collatz(n::Int)::Vector{BigInt}
    # Initialize an empty vector to store the odd numbers in the Collatz sequence
    odd_numbers = Vector{BigInt}()

    # Start the Collatz sequence with the input number
    current_number = BigInt(n)

    # Keep track of the sequence length
    sequence_length = 0

    while current_number != 1
        # Check if the current number is odd
        if mod(current_number, 2) != 0
            # If it's odd, add it to the vector of odd numbers
            push!(odd_numbers, current_number)
        end

        # Calculate the next number in the sequence
        if mod(current_number, 2) == 0
            current_number = current_number รท 2
        else
            current_number = current_number * 3 + 1
        end

        # Increment the sequence length
        sequence_length += 1
    end

    # Sort the vector of odd numbers in increasing order
    sort!(odd_numbers)

    # Return the sorted vector of odd numbers
    return odd_numbers
end