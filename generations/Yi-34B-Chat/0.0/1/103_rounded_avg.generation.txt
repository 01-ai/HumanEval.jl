```julia
function rounded_avg(n::Int, m::Int)::Union{Int, String}
    # Check if n is greater than m
    if n > m
        return -1
    end

    # Calculate the average of the integers from n through m
    average = (n + m) // 2

    # Round the average to the nearest integer
    rounded_average = round(Int, average)

    # Convert the rounded average to binary
    binary_rounded_average = string(rounded_average, base=2, pad=length(string(m)))

    # Return the binary representation
    return binary_rounded_average
end
```

This function `rounded_avg` takes two positive integers `n` and `m`, calculates the average of the integers from `n` through `m` (including `n` and `m`), rounds the average to the nearest integer, and then converts the rounded average to binary. If `n` is greater than `m`, the function returns `-1`.