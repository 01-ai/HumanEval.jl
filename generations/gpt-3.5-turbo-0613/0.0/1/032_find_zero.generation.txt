```julia
function find_zero(xs::Vector{Int})
    n = length(xs)
    if n % 2 != 0
        error("The number of coefficients must be even.")
    end
    
    max_coeff = maximum(abs.(xs))
    if max_coeff == 0
        error("The largest non-zero coefficient must be non-zero.")
    end
    
    if xs[1] == 0
        error("The constant term must be non-zero.")
    end
    
    if xs[n] == 0
        error("The leading coefficient must be non-zero.")
    end
    
    if xs[1] < 0 && xs[n] < 0
        error("The constant term and the leading coefficient must have opposite signs.")
    end
    
    if xs[1] > 0 && xs[n] > 0
        error("The constant term and the leading coefficient must have opposite signs.")
    end
    
    if xs[1] < 0
        xs = -xs
    end
    
    a = xs[1]
    b = xs[n]
    c = xs[2:n-1]
    
    x = 0.0
    for i in 1:100
        x = (a + b * x) / (1 + sum(c .* x .^ (1:n-2)))
    end
    
    return x
end
```