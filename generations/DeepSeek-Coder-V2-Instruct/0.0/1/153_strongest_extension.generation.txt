 Here's the implementation of the `strongest_extension` function in Julia:

```julia
function strongest_extension(class_name::String, extensions::Vector{String})::String
    function calculate_strength(extension::String)::Float64
        CAP = count(c -> isuppercase(c), extension)
        SM = count(c -> islowercase(c), extension)
        return CAP - SM
    end

    strongest_ext = ""
    max_strength = -Inf

    for extension in extensions
        strength = calculate_strength(extension)
        if strength > max_strength
            max_strength = strength
            strongest_ext = extension
        end
    end

    return "$class_name.$strongest_ext"
end
```

This function defines an inner function `calculate_strength` to compute the strength of each extension. It then iterates over the list of extensions, updating the strongest extension found so far based on the calculated strength. Finally, it returns the class name concatenated with the strongest extension name.