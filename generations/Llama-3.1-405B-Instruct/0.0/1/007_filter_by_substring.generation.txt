Here is the Julia function that matches the provided docstring:
```julia
function filter_by_substring(strings::Vector{String}, substring::AbstractString)::Vector{String}
    return filter(s -> occursin(substring, s), strings)
end
```
Explanation:

* We use the built-in `filter` function to create a new vector containing only the strings that satisfy the condition.
* The condition is defined as an anonymous function `s -> occursin(substring, s)`, which checks if the `substring` occurs in each string `s` using the `occursin` function.
* The `filter` function applies this condition to each element of the input `strings` vector and returns a new vector containing only the strings that pass the test.

You can test this function using the examples provided in the docstring:
```julia
julia> filter_by_substring(String[], "a")
String[]

julia> filter_by_substring(["abc", "bacd", "cde", "array"], "a")
3-element Vector{String}:
 "abc"
 "bacd"
 "array"
```